{"version":3,"file":"optimizely.browser.umd.min.js","sources":["../node_modules/@optimizely/js-sdk-logging/lib/errorHandler.js","../node_modules/@optimizely/js-sdk-logging/lib/models.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/v1.js","../node_modules/uuid/v4.js","../node_modules/uuid/index.js","../node_modules/@optimizely/js-sdk-logging/node_modules/@optimizely/js-sdk-utils/lib/index.js","../node_modules/@optimizely/js-sdk-logging/lib/logger.js","../node_modules/@optimizely/js-sdk-logging/lib/index.js","../node_modules/@optimizely/js-sdk-event-processor/lib/events.js","../node_modules/@optimizely/js-sdk-event-processor/lib/eventQueue.js","../node_modules/@optimizely/js-sdk-utils/lib/index.js","../node_modules/@optimizely/js-sdk-event-processor/lib/eventProcessor.js","../node_modules/@optimizely/js-sdk-event-processor/lib/pendingEventsStore.js","../node_modules/@optimizely/js-sdk-event-processor/lib/pendingEventsDispatcher.js","../node_modules/@optimizely/js-sdk-event-processor/lib/v1/buildEventV1.js","../node_modules/@optimizely/js-sdk-event-processor/lib/requestTracker.js","../node_modules/@optimizely/js-sdk-event-processor/lib/v1/v1EventProcessor.js","../node_modules/@optimizely/js-sdk-event-processor/lib/index.js","../lib/utils/fns/index.js","../lib/utils/enums/index.js","../lib/utils/config_validator/index.js","../lib/plugins/error_handler/index.js","../lib/plugins/event_dispatcher/index.browser.js","../lib/plugins/logger/index.js","../lib/utils/attributes_validator/index.js","../node_modules/murmurhash/murmurhash.js","../lib/core/bucketer/index.js","../lib/core/project_config/index.js","../lib/core/condition_tree_evaluator/index.js","../lib/core/custom_attribute_condition_evaluator/index.js","../lib/core/audience_evaluator/index.js","../lib/utils/string_value_validator/index.js","../lib/core/decision_service/index.js","../lib/utils/event_tag_utils/index.js","../lib/core/event_builder/index.js","../lib/core/event_builder/event_helpers.js","../lib/utils/event_tags_validator/index.js","../lib/core/notification_center/index.js","../lib/utils/user_profile_service_validator/index.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/config.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/browserRequest.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/eventEmitter.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/backoffController.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/httpPollingDatafileManager.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/browserDatafileManager.js","../node_modules/@optimizely/js-sdk-datafile-manager/lib/index.browser.js","../lib/core/optimizely_config/index.js","../lib/core/project_config/project_config_manager.js","../lib/optimizely/index.js","../lib/utils/event_processor_config_validator/index.js","../lib/index.browser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @export\n * @class NoopErrorHandler\n * @implements {ErrorHandler}\n */\nvar NoopErrorHandler = /** @class */ (function () {\n    function NoopErrorHandler() {\n    }\n    /**\n     * @param {Error} exception\n     * @memberof NoopErrorHandler\n     */\n    NoopErrorHandler.prototype.handleError = function (exception) {\n        // no-op\n        return;\n    };\n    return NoopErrorHandler;\n}());\nexports.NoopErrorHandler = NoopErrorHandler;\nvar globalErrorHandler = new NoopErrorHandler();\n/**\n * @export\n * @param {ErrorHandler} handler\n */\nfunction setErrorHandler(handler) {\n    globalErrorHandler = handler;\n}\nexports.setErrorHandler = setErrorHandler;\n/**\n * @export\n * @returns {ErrorHandler}\n */\nfunction getErrorHandler() {\n    return globalErrorHandler;\n}\nexports.getErrorHandler = getErrorHandler;\n/**\n * @export\n */\nfunction resetErrorHandler() {\n    globalErrorHandler = new NoopErrorHandler();\n}\nexports.resetErrorHandler = resetErrorHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"NOTSET\"] = 0] = \"NOTSET\";\n    LogLevel[LogLevel[\"DEBUG\"] = 1] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARNING\"] = 3] = \"WARNING\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar uuid_1 = require(\"uuid\");\nfunction getTimestamp() {\n    return new Date().getTime();\n}\nexports.getTimestamp = getTimestamp;\nfunction generateUUID() {\n    return uuid_1.v4();\n}\nexports.generateUUID = generateUUID;\n/**\n * Validates a value is a valid TypeScript enum\n *\n * @export\n * @param {object} enumToCheck\n * @param {*} value\n * @returns {boolean}\n */\nfunction isValidEnum(enumToCheck, value) {\n    var found = false;\n    var keys = Object.keys(enumToCheck);\n    for (var index = 0; index < keys.length; index++) {\n        if (value === enumToCheck[keys[index]]) {\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\nexports.isValidEnum = isValidEnum;\nfunction groupBy(arr, grouperFn) {\n    var grouper = {};\n    arr.forEach(function (item) {\n        var key = grouperFn(item);\n        grouper[key] = grouper[key] || [];\n        grouper[key].push(item);\n    });\n    return objectValues(grouper);\n}\nexports.groupBy = groupBy;\nfunction objectValues(obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n}\nexports.objectValues = objectValues;\nfunction find(arr, cond) {\n    var found;\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var item = arr_1[_i];\n        if (cond(item)) {\n            found = item;\n            break;\n        }\n    }\n    return found;\n}\nexports.find = find;\nfunction keyBy(arr, keyByFn) {\n    var map = {};\n    arr.forEach(function (item) {\n        var key = keyByFn(item);\n        map[key] = item;\n    });\n    return map;\n}\nexports.keyBy = keyBy;\nfunction sprintf(format) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var i = 0;\n    return format.replace(/%s/g, function () {\n        var arg = args[i++];\n        var type = typeof arg;\n        if (type === 'function') {\n            return arg();\n        }\n        else if (type === 'string') {\n            return arg;\n        }\n        else {\n            return String(arg);\n        }\n    });\n}\nexports.sprintf = sprintf;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar errorHandler_1 = require(\"./errorHandler\");\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nvar models_1 = require(\"./models\");\nvar stringToLogLevel = {\n    NOTSET: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARNING: 3,\n    ERROR: 4,\n};\nfunction coerceLogLevel(level) {\n    if (typeof level !== 'string') {\n        return level;\n    }\n    level = level.toUpperCase();\n    if (level === 'WARN') {\n        level = 'WARNING';\n    }\n    if (!stringToLogLevel[level]) {\n        return level;\n    }\n    return stringToLogLevel[level];\n}\nvar DefaultLogManager = /** @class */ (function () {\n    function DefaultLogManager() {\n        this.defaultLoggerFacade = new OptimizelyLogger();\n        this.loggers = {};\n    }\n    DefaultLogManager.prototype.getLogger = function (name) {\n        if (!name) {\n            return this.defaultLoggerFacade;\n        }\n        if (!this.loggers[name]) {\n            this.loggers[name] = new OptimizelyLogger({ messagePrefix: name });\n        }\n        return this.loggers[name];\n    };\n    return DefaultLogManager;\n}());\nvar ConsoleLogHandler = /** @class */ (function () {\n    /**\n     * Creates an instance of ConsoleLogger.\n     * @param {ConsoleLogHandlerConfig} config\n     * @memberof ConsoleLogger\n     */\n    function ConsoleLogHandler(config) {\n        if (config === void 0) { config = {}; }\n        this.logLevel = models_1.LogLevel.NOTSET;\n        if (config.logLevel !== undefined && js_sdk_utils_1.isValidEnum(models_1.LogLevel, config.logLevel)) {\n            this.setLogLevel(config.logLevel);\n        }\n        this.logToConsole = config.logToConsole !== undefined ? !!config.logToConsole : true;\n        this.prefix = config.prefix !== undefined ? config.prefix : '[OPTIMIZELY]';\n    }\n    /**\n     * @param {LogLevel} level\n     * @param {string} message\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.log = function (level, message) {\n        if (!this.shouldLog(level) || !this.logToConsole) {\n            return;\n        }\n        var logMessage = this.prefix + \" - \" + this.getLogLevelName(level) + \" \" + this.getTime() + \" \" + message;\n        this.consoleLog(level, [logMessage]);\n    };\n    /**\n     * @param {LogLevel} level\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.setLogLevel = function (level) {\n        level = coerceLogLevel(level);\n        if (!js_sdk_utils_1.isValidEnum(models_1.LogLevel, level) || level === undefined) {\n            this.logLevel = models_1.LogLevel.ERROR;\n        }\n        else {\n            this.logLevel = level;\n        }\n    };\n    /**\n     * @returns {string}\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.getTime = function () {\n        return new Date().toISOString();\n    };\n    /**\n     * @private\n     * @param {LogLevel} targetLogLevel\n     * @returns {boolean}\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.shouldLog = function (targetLogLevel) {\n        return targetLogLevel >= this.logLevel;\n    };\n    /**\n     * @private\n     * @param {LogLevel} logLevel\n     * @returns {string}\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.getLogLevelName = function (logLevel) {\n        switch (logLevel) {\n            case models_1.LogLevel.DEBUG:\n                return 'DEBUG';\n            case models_1.LogLevel.INFO:\n                return 'INFO ';\n            case models_1.LogLevel.WARNING:\n                return 'WARN ';\n            case models_1.LogLevel.ERROR:\n                return 'ERROR';\n            default:\n                return 'NOTSET';\n        }\n    };\n    /**\n     * @private\n     * @param {LogLevel} logLevel\n     * @param {string[]} logArguments\n     * @memberof ConsoleLogger\n     */\n    ConsoleLogHandler.prototype.consoleLog = function (logLevel, logArguments) {\n        switch (logLevel) {\n            case models_1.LogLevel.DEBUG:\n                console.log.apply(console, logArguments);\n                break;\n            case models_1.LogLevel.INFO:\n                console.info.apply(console, logArguments);\n                break;\n            case models_1.LogLevel.WARNING:\n                console.warn.apply(console, logArguments);\n                break;\n            case models_1.LogLevel.ERROR:\n                console.error.apply(console, logArguments);\n                break;\n            default:\n                console.log.apply(console, logArguments);\n        }\n    };\n    return ConsoleLogHandler;\n}());\nexports.ConsoleLogHandler = ConsoleLogHandler;\nvar globalLogLevel = models_1.LogLevel.NOTSET;\nvar globalLogHandler = null;\nvar OptimizelyLogger = /** @class */ (function () {\n    function OptimizelyLogger(opts) {\n        if (opts === void 0) { opts = {}; }\n        this.messagePrefix = '';\n        if (opts.messagePrefix) {\n            this.messagePrefix = opts.messagePrefix;\n        }\n    }\n    /**\n     * @param {(LogLevel | LogInputObject)} levelOrObj\n     * @param {string} [message]\n     * @memberof OptimizelyLogger\n     */\n    OptimizelyLogger.prototype.log = function (level, message) {\n        this.internalLog(coerceLogLevel(level), {\n            message: message,\n            splat: [],\n        });\n    };\n    OptimizelyLogger.prototype.info = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.INFO, message, splat);\n    };\n    OptimizelyLogger.prototype.debug = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.DEBUG, message, splat);\n    };\n    OptimizelyLogger.prototype.warn = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.WARNING, message, splat);\n    };\n    OptimizelyLogger.prototype.error = function (message) {\n        var splat = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            splat[_i - 1] = arguments[_i];\n        }\n        this.namedLog(models_1.LogLevel.ERROR, message, splat);\n    };\n    OptimizelyLogger.prototype.format = function (data) {\n        return \"\" + (this.messagePrefix ? this.messagePrefix + ': ' : '') + js_sdk_utils_1.sprintf.apply(void 0, [data.message].concat(data.splat));\n    };\n    OptimizelyLogger.prototype.internalLog = function (level, data) {\n        if (!globalLogHandler) {\n            return;\n        }\n        if (level < globalLogLevel) {\n            return;\n        }\n        globalLogHandler.log(level, this.format(data));\n        if (data.error && data.error instanceof Error) {\n            errorHandler_1.getErrorHandler().handleError(data.error);\n        }\n    };\n    OptimizelyLogger.prototype.namedLog = function (level, message, splat) {\n        var error;\n        if (message instanceof Error) {\n            error = message;\n            message = error.message;\n            this.internalLog(level, {\n                error: error,\n                message: message,\n                splat: splat,\n            });\n            return;\n        }\n        if (splat.length === 0) {\n            this.internalLog(level, {\n                message: message,\n                splat: splat,\n            });\n            return;\n        }\n        var last = splat[splat.length - 1];\n        if (last instanceof Error) {\n            error = last;\n            splat.splice(-1);\n        }\n        this.internalLog(level, { message: message, error: error, splat: splat });\n    };\n    return OptimizelyLogger;\n}());\nvar globalLogManager = new DefaultLogManager();\nfunction getLogger(name) {\n    return globalLogManager.getLogger(name);\n}\nexports.getLogger = getLogger;\nfunction setLogHandler(logger) {\n    globalLogHandler = logger;\n}\nexports.setLogHandler = setLogHandler;\nfunction setLogLevel(level) {\n    level = coerceLogLevel(level);\n    if (!js_sdk_utils_1.isValidEnum(models_1.LogLevel, level) || level === undefined) {\n        globalLogLevel = models_1.LogLevel.ERROR;\n    }\n    else {\n        globalLogLevel = level;\n    }\n}\nexports.setLogLevel = setLogLevel;\nfunction getLogLevel() {\n    return globalLogLevel;\n}\nexports.getLogLevel = getLogLevel;\n/**\n * Resets all global logger state to it's original\n */\nfunction resetLogger() {\n    globalLogManager = new DefaultLogManager();\n    globalLogLevel = models_1.LogLevel.NOTSET;\n}\nexports.resetLogger = resetLogger;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n__export(require(\"./errorHandler\"));\n__export(require(\"./models\"));\n__export(require(\"./logger\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction areEventContextsEqual(eventA, eventB) {\n    var contextA = eventA.context;\n    var contextB = eventB.context;\n    return (contextA.accountId === contextB.accountId &&\n        contextA.projectId === contextB.projectId &&\n        contextA.clientName === contextB.clientName &&\n        contextA.clientVersion === contextB.clientVersion &&\n        contextA.revision === contextB.revision &&\n        contextA.anonymizeIP === contextB.anonymizeIP &&\n        contextA.botFiltering === contextB.botFiltering);\n}\nexports.areEventContextsEqual = areEventContextsEqual;\n","\"use strict\";\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar logger = js_sdk_logging_1.getLogger('EventProcessor');\nvar Timer = /** @class */ (function () {\n    function Timer(_a) {\n        var timeout = _a.timeout, callback = _a.callback;\n        this.timeout = Math.max(timeout, 0);\n        this.callback = callback;\n    }\n    Timer.prototype.start = function () {\n        this.timeoutId = setTimeout(this.callback, this.timeout);\n    };\n    Timer.prototype.refresh = function () {\n        this.stop();\n        this.start();\n    };\n    Timer.prototype.stop = function () {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    };\n    return Timer;\n}());\nvar SingleEventQueue = /** @class */ (function () {\n    function SingleEventQueue(_a) {\n        var sink = _a.sink;\n        this.sink = sink;\n    }\n    SingleEventQueue.prototype.start = function () {\n        // no-op\n    };\n    SingleEventQueue.prototype.stop = function () {\n        // no-op\n        return Promise.resolve();\n    };\n    SingleEventQueue.prototype.enqueue = function (event) {\n        this.sink([event]);\n    };\n    return SingleEventQueue;\n}());\nexports.SingleEventQueue = SingleEventQueue;\nvar DefaultEventQueue = /** @class */ (function () {\n    function DefaultEventQueue(_a) {\n        var flushInterval = _a.flushInterval, maxQueueSize = _a.maxQueueSize, sink = _a.sink, batchComparator = _a.batchComparator;\n        this.buffer = [];\n        this.maxQueueSize = Math.max(maxQueueSize, 1);\n        this.sink = sink;\n        this.batchComparator = batchComparator;\n        this.timer = new Timer({\n            callback: this.flush.bind(this),\n            timeout: flushInterval,\n        });\n        this.started = false;\n    }\n    DefaultEventQueue.prototype.start = function () {\n        this.started = true;\n        // dont start the timer until the first event is enqueued\n    };\n    DefaultEventQueue.prototype.stop = function () {\n        this.started = false;\n        var result = this.sink(this.buffer);\n        this.buffer = [];\n        this.timer.stop();\n        return result;\n    };\n    DefaultEventQueue.prototype.enqueue = function (event) {\n        if (!this.started) {\n            logger.warn('Queue is stopped, not accepting event');\n            return;\n        }\n        // If new event cannot be included into the current batch, flush so it can\n        // be in its own new batch.\n        var bufferedEvent = this.buffer[0];\n        if (bufferedEvent && !this.batchComparator(bufferedEvent, event)) {\n            this.flush();\n        }\n        // start the timer when the first event is put in\n        if (this.buffer.length === 0) {\n            this.timer.refresh();\n        }\n        this.buffer.push(event);\n        if (this.buffer.length >= this.maxQueueSize) {\n            this.flush();\n        }\n    };\n    DefaultEventQueue.prototype.flush = function () {\n        this.sink(this.buffer);\n        this.buffer = [];\n        this.timer.stop();\n    };\n    return DefaultEventQueue;\n}());\nexports.DefaultEventQueue = DefaultEventQueue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar uuid_1 = require(\"uuid\");\nfunction generateUUID() {\n    return uuid_1.v4();\n}\nexports.generateUUID = generateUUID;\nfunction getTimestamp() {\n    return new Date().getTime();\n}\nexports.getTimestamp = getTimestamp;\n/**\n * Validates a value is a valid TypeScript enum\n *\n * @export\n * @param {object} enumToCheck\n * @param {*} value\n * @returns {boolean}\n */\nfunction isValidEnum(enumToCheck, value) {\n    var found = false;\n    var keys = Object.keys(enumToCheck);\n    for (var index = 0; index < keys.length; index++) {\n        if (value === enumToCheck[keys[index]]) {\n            found = true;\n            break;\n        }\n    }\n    return found;\n}\nexports.isValidEnum = isValidEnum;\nfunction groupBy(arr, grouperFn) {\n    var grouper = {};\n    arr.forEach(function (item) {\n        var key = grouperFn(item);\n        grouper[key] = grouper[key] || [];\n        grouper[key].push(item);\n    });\n    return objectValues(grouper);\n}\nexports.groupBy = groupBy;\nfunction objectValues(obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n}\nexports.objectValues = objectValues;\nfunction objectEntries(obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n}\nexports.objectEntries = objectEntries;\nfunction find(arr, cond) {\n    var found;\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var item = arr_1[_i];\n        if (cond(item)) {\n            found = item;\n            break;\n        }\n    }\n    return found;\n}\nexports.find = find;\nfunction keyBy(arr, keyByFn) {\n    var map = {};\n    arr.forEach(function (item) {\n        var key = keyByFn(item);\n        map[key] = item;\n    });\n    return map;\n}\nexports.keyBy = keyBy;\nfunction sprintf(format) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var i = 0;\n    return format.replace(/%s/g, function () {\n        var arg = args[i++];\n        var type = typeof arg;\n        if (type === 'function') {\n            return arg();\n        }\n        else if (type === 'string') {\n            return arg;\n        }\n        else {\n            return String(arg);\n        }\n    });\n}\nexports.sprintf = sprintf;\n/*\n * Notification types for use with NotificationCenter\n * Format is EVENT: <list of parameters to callback>\n *\n * SDK consumers can use these to register callbacks with the notification center.\n *\n *  @deprecated since 3.1.0\n *  ACTIVATE: An impression event will be sent to Optimizely\n *  Callbacks will receive an object argument with the following properties:\n *    - experiment {Object}\n *    - userId {string}\n *    - attributes {Object|undefined}\n *    - variation {Object}\n *    - logEvent {Object}\n *\n *  DECISION: A decision is made in the system. i.e. user activation,\n *  feature access or feature-variable value retrieval\n *  Callbacks will receive an object argument with the following properties:\n *    - type {string}\n *    - userId {string}\n *    - attributes {Object|undefined}\n *    - decisionInfo {Object|undefined}\n *\n *  LOG_EVENT: A batch of events, which could contain impressions and/or conversions,\n *  will be sent to Optimizely\n *  Callbacks will receive an object argument with the following properties:\n *    - url {string}\n *    - httpVerb {string}\n *    - params {Object}\n *\n *  OPTIMIZELY_CONFIG_UPDATE: This Optimizely instance has been updated with a new\n *  config\n *\n *  TRACK: A conversion event will be sent to Optimizely\n *  Callbacks will receive the an object argument with the following properties:\n *    - eventKey {string}\n *    - userId {string}\n *    - attributes {Object|undefined}\n *    - eventTags {Object|undefined}\n *    - logEvent {Object}\n *\n */\nvar NOTIFICATION_TYPES;\n(function (NOTIFICATION_TYPES) {\n    NOTIFICATION_TYPES[\"ACTIVATE\"] = \"ACTIVATE:experiment, user_id,attributes, variation, event\";\n    NOTIFICATION_TYPES[\"DECISION\"] = \"DECISION:type, userId, attributes, decisionInfo\";\n    NOTIFICATION_TYPES[\"LOG_EVENT\"] = \"LOG_EVENT:logEvent\";\n    NOTIFICATION_TYPES[\"OPTIMIZELY_CONFIG_UPDATE\"] = \"OPTIMIZELY_CONFIG_UPDATE\";\n    NOTIFICATION_TYPES[\"TRACK\"] = \"TRACK:event_key, user_id, attributes, event_tags, event\";\n})(NOTIFICATION_TYPES = exports.NOTIFICATION_TYPES || (exports.NOTIFICATION_TYPES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventQueue_1 = require(\"./eventQueue\");\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nexports.DEFAULT_FLUSH_INTERVAL = 30000; // Unit is ms - default flush interval is 30s\nexports.DEFAULT_BATCH_SIZE = 10;\nvar logger = js_sdk_logging_1.getLogger('EventProcessor');\nfunction validateAndGetFlushInterval(flushInterval) {\n    if (flushInterval <= 0) {\n        logger.warn(\"Invalid flushInterval \" + flushInterval + \", defaulting to \" + exports.DEFAULT_FLUSH_INTERVAL);\n        flushInterval = exports.DEFAULT_FLUSH_INTERVAL;\n    }\n    return flushInterval;\n}\nexports.validateAndGetFlushInterval = validateAndGetFlushInterval;\nfunction validateAndGetBatchSize(batchSize) {\n    batchSize = Math.floor(batchSize);\n    if (batchSize < 1) {\n        logger.warn(\"Invalid batchSize \" + batchSize + \", defaulting to \" + exports.DEFAULT_BATCH_SIZE);\n        batchSize = exports.DEFAULT_BATCH_SIZE;\n    }\n    batchSize = Math.max(1, batchSize);\n    return batchSize;\n}\nexports.validateAndGetBatchSize = validateAndGetBatchSize;\nfunction getQueue(batchSize, flushInterval, sink, batchComparator) {\n    var queue;\n    if (batchSize > 1) {\n        queue = new eventQueue_1.DefaultEventQueue({\n            flushInterval: flushInterval,\n            maxQueueSize: batchSize,\n            sink: sink,\n            batchComparator: batchComparator,\n        });\n    }\n    else {\n        queue = new eventQueue_1.SingleEventQueue({ sink: sink });\n    }\n    return queue;\n}\nexports.getQueue = getQueue;\nfunction sendEventNotification(notificationCenter, event) {\n    if (notificationCenter) {\n        notificationCenter.sendNotifications(js_sdk_utils_1.NOTIFICATION_TYPES.LOG_EVENT, event);\n    }\n}\nexports.sendEventNotification = sendEventNotification;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar logger = js_sdk_logging_1.getLogger('EventProcessor');\nvar LocalStorageStore = /** @class */ (function () {\n    function LocalStorageStore(_a) {\n        var key = _a.key, _b = _a.maxValues, maxValues = _b === void 0 ? 1000 : _b;\n        this.LS_KEY = key;\n        this.maxValues = maxValues;\n    }\n    LocalStorageStore.prototype.get = function (key) {\n        return this.getMap()[key] || null;\n    };\n    LocalStorageStore.prototype.set = function (key, value) {\n        var map = this.getMap();\n        map[key] = value;\n        this.replace(map);\n    };\n    LocalStorageStore.prototype.remove = function (key) {\n        var map = this.getMap();\n        delete map[key];\n        this.replace(map);\n    };\n    LocalStorageStore.prototype.values = function () {\n        return js_sdk_utils_1.objectValues(this.getMap());\n    };\n    LocalStorageStore.prototype.clear = function () {\n        this.replace({});\n    };\n    LocalStorageStore.prototype.replace = function (map) {\n        try {\n            // This is a temporary fix to support React Native which does not have localStorage.\n            window.localStorage && localStorage.setItem(this.LS_KEY, JSON.stringify(map));\n            this.clean();\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    };\n    LocalStorageStore.prototype.clean = function () {\n        var map = this.getMap();\n        var keys = Object.keys(map);\n        var toRemove = keys.length - this.maxValues;\n        if (toRemove < 1) {\n            return;\n        }\n        var entries = keys.map(function (key) { return ({\n            key: key,\n            value: map[key]\n        }); });\n        entries.sort(function (a, b) { return a.value.timestamp - b.value.timestamp; });\n        for (var i = 0; i < toRemove; i++) {\n            delete map[entries[i].key];\n        }\n        this.replace(map);\n    };\n    LocalStorageStore.prototype.getMap = function () {\n        try {\n            // This is a temporary fix to support React Native which does not have localStorage.\n            var data = window.localStorage && localStorage.getItem(this.LS_KEY);\n            if (data) {\n                return JSON.parse(data) || {};\n            }\n        }\n        catch (e) {\n            logger.error(e);\n        }\n        return {};\n    };\n    return LocalStorageStore;\n}());\nexports.LocalStorageStore = LocalStorageStore;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar pendingEventsStore_1 = require(\"./pendingEventsStore\");\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nvar logger = js_sdk_logging_1.getLogger('EventProcessor');\nvar PendingEventsDispatcher = /** @class */ (function () {\n    function PendingEventsDispatcher(_a) {\n        var eventDispatcher = _a.eventDispatcher, store = _a.store;\n        this.dispatcher = eventDispatcher;\n        this.store = store;\n    }\n    PendingEventsDispatcher.prototype.dispatchEvent = function (request, callback) {\n        this.send({\n            uuid: js_sdk_utils_1.generateUUID(),\n            timestamp: js_sdk_utils_1.getTimestamp(),\n            request: request,\n        }, callback);\n    };\n    PendingEventsDispatcher.prototype.sendPendingEvents = function () {\n        var _this = this;\n        var pendingEvents = this.store.values();\n        logger.debug('Sending %s pending events from previous page', pendingEvents.length);\n        pendingEvents.forEach(function (item) {\n            try {\n                _this.send(item, function () { });\n            }\n            catch (e) { }\n        });\n    };\n    PendingEventsDispatcher.prototype.send = function (entry, callback) {\n        var _this = this;\n        this.store.set(entry.uuid, entry);\n        this.dispatcher.dispatchEvent(entry.request, function (response) {\n            _this.store.remove(entry.uuid);\n            callback(response);\n        });\n    };\n    return PendingEventsDispatcher;\n}());\nexports.PendingEventsDispatcher = PendingEventsDispatcher;\nvar LocalStoragePendingEventsDispatcher = /** @class */ (function (_super) {\n    __extends(LocalStoragePendingEventsDispatcher, _super);\n    function LocalStoragePendingEventsDispatcher(_a) {\n        var eventDispatcher = _a.eventDispatcher;\n        return _super.call(this, {\n            eventDispatcher: eventDispatcher,\n            store: new pendingEventsStore_1.LocalStorageStore({\n                // TODO make this configurable\n                maxValues: 100,\n                key: 'fs_optly_pending_events',\n            }),\n        }) || this;\n    }\n    return LocalStoragePendingEventsDispatcher;\n}(PendingEventsDispatcher));\nexports.LocalStoragePendingEventsDispatcher = LocalStoragePendingEventsDispatcher;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ACTIVATE_EVENT_KEY = 'campaign_activated';\nvar CUSTOM_ATTRIBUTE_FEATURE_TYPE = 'custom';\nvar BOT_FILTERING_KEY = '$opt_bot_filtering';\n/**\n * Given an array of batchable Decision or ConversionEvent events it returns\n * a single EventV1 with proper batching\n *\n * @param {ProcessableEvent[]} events\n * @returns {EventV1}\n */\nfunction makeBatchedEventV1(events) {\n    var visitors = [];\n    var data = events[0];\n    events.forEach(function (event) {\n        if (event.type === 'conversion' || event.type === 'impression') {\n            var visitor = makeVisitor(event);\n            if (event.type === 'impression') {\n                visitor.snapshots.push(makeDecisionSnapshot(event));\n            }\n            else if (event.type === 'conversion') {\n                visitor.snapshots.push(makeConversionSnapshot(event));\n            }\n            visitors.push(visitor);\n        }\n    });\n    return {\n        client_name: data.context.clientName,\n        client_version: data.context.clientVersion,\n        account_id: data.context.accountId,\n        project_id: data.context.projectId,\n        revision: data.context.revision,\n        anonymize_ip: data.context.anonymizeIP,\n        enrich_decisions: true,\n        visitors: visitors,\n    };\n}\nexports.makeBatchedEventV1 = makeBatchedEventV1;\nfunction makeConversionSnapshot(conversion) {\n    var tags = __assign({}, conversion.tags);\n    delete tags['revenue'];\n    delete tags['value'];\n    var event = {\n        entity_id: conversion.event.id,\n        key: conversion.event.key,\n        timestamp: conversion.timestamp,\n        uuid: conversion.uuid,\n    };\n    if (conversion.tags) {\n        event.tags = conversion.tags;\n    }\n    if (conversion.value != null) {\n        event.value = conversion.value;\n    }\n    if (conversion.revenue != null) {\n        event.revenue = conversion.revenue;\n    }\n    return {\n        events: [event],\n    };\n}\nfunction makeDecisionSnapshot(event) {\n    var layer = event.layer, experiment = event.experiment, variation = event.variation;\n    var layerId = layer ? layer.id : null;\n    var experimentId = experiment ? experiment.id : null;\n    var variationId = variation ? variation.id : null;\n    return {\n        decisions: [\n            {\n                campaign_id: layerId,\n                experiment_id: experimentId,\n                variation_id: variationId,\n            },\n        ],\n        events: [\n            {\n                entity_id: layerId,\n                timestamp: event.timestamp,\n                key: ACTIVATE_EVENT_KEY,\n                uuid: event.uuid,\n            },\n        ],\n    };\n}\nfunction makeVisitor(data) {\n    var visitor = {\n        snapshots: [],\n        visitor_id: data.user.id,\n        attributes: [],\n    };\n    data.user.attributes.forEach(function (attr) {\n        visitor.attributes.push({\n            entity_id: attr.entityId,\n            key: attr.key,\n            type: 'custom',\n            value: attr.value,\n        });\n    });\n    if (typeof data.context.botFiltering === 'boolean') {\n        visitor.attributes.push({\n            entity_id: BOT_FILTERING_KEY,\n            key: BOT_FILTERING_KEY,\n            type: CUSTOM_ATTRIBUTE_FEATURE_TYPE,\n            value: data.context.botFiltering,\n        });\n    }\n    return visitor;\n}\n/**\n * Event for usage with v1 logtier\n *\n * @export\n * @interface EventBuilderV1\n */\nfunction buildImpressionEventV1(data) {\n    var visitor = makeVisitor(data);\n    visitor.snapshots.push(makeDecisionSnapshot(data));\n    return {\n        client_name: data.context.clientName,\n        client_version: data.context.clientVersion,\n        account_id: data.context.accountId,\n        project_id: data.context.projectId,\n        revision: data.context.revision,\n        anonymize_ip: data.context.anonymizeIP,\n        enrich_decisions: true,\n        visitors: [visitor],\n    };\n}\nexports.buildImpressionEventV1 = buildImpressionEventV1;\nfunction buildConversionEventV1(data) {\n    var visitor = makeVisitor(data);\n    visitor.snapshots.push(makeConversionSnapshot(data));\n    return {\n        client_name: data.context.clientName,\n        client_version: data.context.clientVersion,\n        account_id: data.context.accountId,\n        project_id: data.context.projectId,\n        revision: data.context.revision,\n        anonymize_ip: data.context.anonymizeIP,\n        enrich_decisions: true,\n        visitors: [visitor],\n    };\n}\nexports.buildConversionEventV1 = buildConversionEventV1;\nfunction formatEvents(events) {\n    return {\n        url: 'https://logx.optimizely.com/v1/events',\n        httpVerb: 'POST',\n        params: makeBatchedEventV1(events),\n    };\n}\nexports.formatEvents = formatEvents;\n","\"use strict\";\n/**\n * Copyright 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * RequestTracker keeps track of in-flight requests for EventProcessor using\n * an internal counter. It exposes methods for adding a new request to be\n * tracked, and getting a Promise representing the completion of currently\n * tracked requests.\n */\nvar RequestTracker = /** @class */ (function () {\n    function RequestTracker() {\n        this.reqsInFlightCount = 0;\n        this.reqsCompleteResolvers = [];\n    }\n    /**\n     * Track the argument request (represented by a Promise). reqPromise will feed\n     * into the state of Promises returned by onRequestsComplete.\n     * @param {Promise<void>} reqPromise\n     */\n    RequestTracker.prototype.trackRequest = function (reqPromise) {\n        var _this = this;\n        this.reqsInFlightCount++;\n        var onReqComplete = function () {\n            _this.reqsInFlightCount--;\n            if (_this.reqsInFlightCount === 0) {\n                _this.reqsCompleteResolvers.forEach(function (resolver) { return resolver(); });\n                _this.reqsCompleteResolvers = [];\n            }\n        };\n        reqPromise.then(onReqComplete, onReqComplete);\n    };\n    /**\n     * Return a Promise that fulfills after all currently-tracked request promises\n     * are resolved.\n     * @return {Promise<void>}\n     */\n    RequestTracker.prototype.onRequestsComplete = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.reqsInFlightCount === 0) {\n                resolve();\n            }\n            else {\n                _this.reqsCompleteResolvers.push(resolve);\n            }\n        });\n    };\n    return RequestTracker;\n}());\nexports.default = RequestTracker;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar eventProcessor_1 = require(\"../eventProcessor\");\nvar requestTracker_1 = __importDefault(require(\"../requestTracker\"));\nvar events_1 = require(\"../events\");\nvar buildEventV1_1 = require(\"./buildEventV1\");\nvar logger = js_sdk_logging_1.getLogger('LogTierV1EventProcessor');\nvar LogTierV1EventProcessor = /** @class */ (function () {\n    function LogTierV1EventProcessor(_a) {\n        var dispatcher = _a.dispatcher, _b = _a.flushInterval, flushInterval = _b === void 0 ? eventProcessor_1.DEFAULT_FLUSH_INTERVAL : _b, _c = _a.batchSize, batchSize = _c === void 0 ? eventProcessor_1.DEFAULT_BATCH_SIZE : _c, notificationCenter = _a.notificationCenter;\n        this.dispatcher = dispatcher;\n        this.notificationCenter = notificationCenter;\n        this.requestTracker = new requestTracker_1.default();\n        flushInterval = eventProcessor_1.validateAndGetFlushInterval(flushInterval);\n        batchSize = eventProcessor_1.validateAndGetBatchSize(batchSize);\n        this.queue = eventProcessor_1.getQueue(batchSize, flushInterval, this.drainQueue.bind(this), events_1.areEventContextsEqual);\n    }\n    LogTierV1EventProcessor.prototype.drainQueue = function (buffer) {\n        var _this = this;\n        var reqPromise = new Promise(function (resolve) {\n            logger.debug('draining queue with %s events', buffer.length);\n            if (buffer.length === 0) {\n                resolve();\n                return;\n            }\n            var formattedEvent = buildEventV1_1.formatEvents(buffer);\n            _this.dispatcher.dispatchEvent(formattedEvent, function () {\n                resolve();\n            });\n            eventProcessor_1.sendEventNotification(_this.notificationCenter, formattedEvent);\n        });\n        this.requestTracker.trackRequest(reqPromise);\n        return reqPromise;\n    };\n    LogTierV1EventProcessor.prototype.process = function (event) {\n        this.queue.enqueue(event);\n    };\n    LogTierV1EventProcessor.prototype.stop = function () {\n        // swallow - an error stopping this queue shouldn't prevent this from stopping\n        try {\n            this.queue.stop();\n            return this.requestTracker.onRequestsComplete();\n        }\n        catch (e) {\n            logger.error('Error stopping EventProcessor: \"%s\"', e.message, e);\n        }\n        return Promise.resolve();\n    };\n    LogTierV1EventProcessor.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.queue.start();\n                return [2 /*return*/];\n            });\n        });\n    };\n    return LogTierV1EventProcessor;\n}());\nexports.LogTierV1EventProcessor = LogTierV1EventProcessor;\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./events\"));\n__export(require(\"./eventProcessor\"));\n__export(require(\"./pendingEventsDispatcher\"));\n__export(require(\"./v1/buildEventV1\"));\n__export(require(\"./v1/v1EventProcessor\"));\n","/**\n * Copyright 2017, 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { generateUUID as uuid, keyBy as keyByUtil } from '@optimizely/js-sdk-utils';\n\nvar MAX_SAFE_INTEGER_LIMIT = Math.pow(2, 53);\n\nexport var assign = function (target) {\n  if (!target) {\n    return {};\n  }\n  if (typeof Object.assign === 'function') {\n    return Object.assign.apply(Object, arguments);\n  } else {\n    var to = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n      if (nextSource !== null && nextSource !== undefined) {\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  }\n};\n\nexport var currentTimestamp = function () {\n  return Math.round(new Date().getTime());\n};\n\nexport var isSafeInteger = function (number) {\n  return typeof number == 'number' && Math.abs(number) <= MAX_SAFE_INTEGER_LIMIT;\n};\n\nexport var keyBy = function (arr, key) {\n  if (!arr) return {};\n  return keyByUtil(arr, function (item) {\n    return item[key];\n  });\n};\n\nexport { uuid };\n\nexport var isNumber = function (value) {\n  return typeof value === 'number';\n};\n\nexport default {\n  assign: assign,\n  currentTimestamp: currentTimestamp,\n  isSafeInteger: isSafeInteger,\n  keyBy: keyBy,\n  uuid: uuid,\n  isNumber: isNumber,\n};\n","/****************************************************************************\n * Copyright 2016-2020, Optimizely, Inc. and contributors                   *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\nimport { NOTIFICATION_TYPES as notificationTypesEnum } from '@optimizely/js-sdk-utils';\n\n/**\n * Contains global enums used throughout the library\n */\nexport var LOG_LEVEL = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARNING: 3,\n  ERROR: 4,\n};\n\nexport var ERROR_MESSAGES = {\n  CONDITION_EVALUATOR_ERROR: '%s: Error evaluating audience condition of type %s: %s',\n  DATAFILE_AND_SDK_KEY_MISSING: '%s: You must provide at least one of sdkKey or datafile. Cannot start Optimizely',\n  EXPERIMENT_KEY_NOT_IN_DATAFILE: '%s: Experiment key %s is not in datafile.',\n  FEATURE_NOT_IN_DATAFILE: '%s: Feature key %s is not in datafile.',\n  IMPROPERLY_FORMATTED_EXPERIMENT: '%s: Experiment key %s is improperly formatted.',\n  INVALID_ATTRIBUTES: '%s: Provided attributes are in an invalid format.',\n  INVALID_BUCKETING_ID: '%s: Unable to generate hash for bucketing ID %s: %s',\n  INVALID_DATAFILE: '%s: Datafile is invalid - property %s: %s',\n  INVALID_DATAFILE_MALFORMED: '%s: Datafile is invalid because it is malformed.',\n  INVALID_JSON: '%s: JSON object is not valid.',\n  INVALID_ERROR_HANDLER: '%s: Provided \"errorHandler\" is in an invalid format.',\n  INVALID_EVENT_DISPATCHER: '%s: Provided \"eventDispatcher\" is in an invalid format.',\n  INVALID_EVENT_TAGS: '%s: Provided event tags are in an invalid format.',\n  INVALID_EXPERIMENT_KEY: '%s: Experiment key %s is not in datafile. It is either invalid, paused, or archived.',\n  INVALID_EXPERIMENT_ID: '%s: Experiment ID %s is not in datafile.',\n  INVALID_GROUP_ID: '%s: Group ID %s is not in datafile.',\n  INVALID_LOGGER: '%s: Provided \"logger\" is in an invalid format.',\n  INVALID_ROLLOUT_ID: '%s: Invalid rollout ID %s attached to feature %s',\n  INVALID_USER_ID: '%s: Provided user ID is in an invalid format.',\n  INVALID_USER_PROFILE_SERVICE: '%s: Provided user profile service instance is in an invalid format: %s.',\n  NO_DATAFILE_SPECIFIED: '%s: No datafile specified. Cannot start optimizely.',\n  NO_JSON_PROVIDED: '%s: No JSON object to validate against schema.',\n  NO_VARIATION_FOR_EXPERIMENT_KEY: '%s: No variation key %s defined in datafile for experiment %s.',\n  UNDEFINED_ATTRIBUTE: '%s: Provided attribute: %s has an undefined value.',\n  UNRECOGNIZED_ATTRIBUTE: '%s: Unrecognized attribute %s provided. Pruning before sending event to Optimizely.',\n  UNABLE_TO_CAST_VALUE: '%s: Unable to cast value %s to type %s, returning null.',\n  USER_NOT_IN_FORCED_VARIATION: '%s: User %s is not in the forced variation map. Cannot remove their forced variation.',\n  USER_PROFILE_LOOKUP_ERROR: '%s: Error while looking up user profile for user ID \"%s\": %s.',\n  USER_PROFILE_SAVE_ERROR: '%s: Error while saving user profile for user ID \"%s\": %s.',\n  VARIABLE_KEY_NOT_IN_DATAFILE: '%s: Variable with key \"%s\" associated with feature with key \"%s\" is not in datafile.',\n  VARIATION_ID_NOT_IN_DATAFILE: '%s: No variation ID %s defined in datafile for experiment %s.',\n  VARIATION_ID_NOT_IN_DATAFILE_NO_EXPERIMENT: '%s: Variation ID %s is not in the datafile.',\n  INVALID_INPUT_FORMAT: '%s: Provided %s is in an invalid format.',\n  INVALID_DATAFILE_VERSION: '%s: This version of the JavaScript SDK does not support the given datafile version: %s',\n  INVALID_VARIATION_KEY: '%s: Provided variation key is in an invalid format.',\n};\n\nexport var LOG_MESSAGES = {\n  ACTIVATE_USER: '%s: Activating user %s in experiment %s.',\n  DISPATCH_CONVERSION_EVENT: '%s: Dispatching conversion event to URL %s with params %s.',\n  DISPATCH_IMPRESSION_EVENT: '%s: Dispatching impression event to URL %s with params %s.',\n  DEPRECATED_EVENT_VALUE: '%s: Event value is deprecated in %s call.',\n  EVENT_KEY_NOT_FOUND: '%s: Event key %s is not in datafile.',\n  EXPERIMENT_NOT_RUNNING: '%s: Experiment %s is not running.',\n  FEATURE_ENABLED_FOR_USER: '%s: Feature %s is enabled for user %s.',\n  FEATURE_NOT_ENABLED_FOR_USER: '%s: Feature %s is not enabled for user %s.',\n  FEATURE_HAS_NO_EXPERIMENTS: '%s: Feature %s is not attached to any experiments.',\n  FAILED_TO_PARSE_VALUE: '%s: Failed to parse event value \"%s\" from event tags.',\n  FAILED_TO_PARSE_REVENUE: '%s: Failed to parse revenue value \"%s\" from event tags.',\n  FORCED_BUCKETING_FAILED: '%s: Variation key %s is not in datafile. Not activating user %s.',\n  INVALID_OBJECT: '%s: Optimizely object is not valid. Failing %s.',\n  INVALID_CLIENT_ENGINE: '%s: Invalid client engine passed: %s. Defaulting to node-sdk.',\n  INVALID_VARIATION_ID: '%s: Bucketed into an invalid variation ID. Returning null.',\n  NOTIFICATION_LISTENER_EXCEPTION: '%s: Notification listener for (%s) threw exception: %s',\n  NO_ROLLOUT_EXISTS: '%s: There is no rollout of feature %s.',\n  NOT_ACTIVATING_USER: '%s: Not activating user %s for experiment %s.',\n  NOT_TRACKING_USER: '%s: Not tracking user %s.',\n  PARSED_REVENUE_VALUE: '%s: Parsed revenue value \"%s\" from event tags.',\n  PARSED_NUMERIC_VALUE: '%s: Parsed event value \"%s\" from event tags.',\n  RETURNING_STORED_VARIATION:\n    '%s: Returning previously activated variation \"%s\" of experiment \"%s\" for user \"%s\" from user profile.',\n  ROLLOUT_HAS_NO_EXPERIMENTS: '%s: Rollout of feature %s has no experiments',\n  SAVED_VARIATION: '%s: Saved variation \"%s\" of experiment \"%s\" for user \"%s\".',\n  SAVED_VARIATION_NOT_FOUND:\n    '%s: User %s was previously bucketed into variation with ID %s for experiment %s, but no matching variation was found.',\n  SHOULD_NOT_DISPATCH_ACTIVATE: '%s: Experiment %s is not in \"Running\" state. Not activating user.',\n  SKIPPING_JSON_VALIDATION: '%s: Skipping JSON schema validation.',\n  TRACK_EVENT: '%s: Tracking event %s for user %s.',\n  USER_ASSIGNED_TO_EXPERIMENT_BUCKET: '%s: Assigned bucket %s to user with bucketing ID %s.',\n  USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP: '%s: User %s is in experiment %s of group %s.',\n  USER_BUCKETED_INTO_TARGETING_RULE: '%s: User %s bucketed into targeting rule %s.',\n  USER_IN_FEATURE_EXPERIMENT: '%s: User %s is in variation %s of experiment %s on the feature %s.',\n  USER_IN_ROLLOUT: '%s: User %s is in rollout of feature %s.',\n  USER_BUCKETED_INTO_EVERYONE_TARGETING_RULE: '%s: User %s bucketed into everyone targeting rule.',\n  USER_NOT_BUCKETED_INTO_EVERYONE_TARGETING_RULE:\n    '%s: User %s not bucketed into everyone targeting rule due to traffic allocation.',\n  USER_NOT_BUCKETED_INTO_EXPERIMENT_IN_GROUP: '%s: User %s is not in experiment %s of group %s.',\n  USER_NOT_BUCKETED_INTO_ANY_EXPERIMENT_IN_GROUP: '%s: User %s is not in any experiment of group %s.',\n  USER_NOT_BUCKETED_INTO_TARGETING_RULE:\n    '%s User %s not bucketed into targeting rule %s due to traffic allocation. Trying everyone rule.',\n  USER_NOT_IN_FEATURE_EXPERIMENT: '%s: User %s is not in any experiment on the feature %s.',\n  USER_NOT_IN_ROLLOUT: '%s: User %s is not in rollout of feature %s.',\n  USER_FORCED_IN_VARIATION: '%s: User %s is forced in variation %s.',\n  USER_MAPPED_TO_FORCED_VARIATION: '%s: Set variation %s for experiment %s and user %s in the forced variation map.',\n  USER_DOESNT_MEET_CONDITIONS_FOR_TARGETING_RULE: '%s: User %s does not meet conditions for targeting rule %s.',\n  USER_MEETS_CONDITIONS_FOR_TARGETING_RULE: '%s: User %s meets conditions for targeting rule %s.',\n  USER_HAS_VARIATION: '%s: User %s is in variation %s of experiment %s.',\n  USER_HAS_FORCED_VARIATION: '%s: Variation %s is mapped to experiment %s and user %s in the forced variation map.',\n  USER_HAS_NO_VARIATION: '%s: User %s is in no variation of experiment %s.',\n  USER_HAS_NO_FORCED_VARIATION: '%s: User %s is not in the forced variation map.',\n  USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT: '%s: No experiment %s mapped to user %s in the forced variation map.',\n  USER_NOT_IN_ANY_EXPERIMENT: '%s: User %s is not in any experiment of group %s.',\n  USER_NOT_IN_EXPERIMENT: '%s: User %s does not meet conditions to be in experiment %s.',\n  USER_RECEIVED_DEFAULT_VARIABLE_VALUE:\n    '%s: User \"%s\" is not in any variation or rollout rule. Returning default value for variable \"%s\" of feature flag \"%s\".',\n  FEATURE_NOT_ENABLED_RETURN_DEFAULT_VARIABLE_VALUE:\n    '%s: Feature \"%s\" is not enabled for user %s. Returning the default variable value \"%s\".',\n  VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE:\n    '%s: Variable \"%s\" is not used in variation \"%s\". Returning default value.',\n  USER_RECEIVED_VARIABLE_VALUE: '%s: Got variable value \"%s\" for variable \"%s\" of feature flag \"%s\"',\n  VALID_DATAFILE: '%s: Datafile is valid.',\n  VALID_USER_PROFILE_SERVICE: '%s: Valid user profile service provided.',\n  VARIATION_REMOVED_FOR_USER: '%s: Variation mapped to experiment %s has been removed for user %s.',\n  VARIABLE_REQUESTED_WITH_WRONG_TYPE:\n    '%s: Requested variable type \"%s\", but variable is of type \"%s\". Use correct API to retrieve value. Returning None.',\n  VALID_BUCKETING_ID: '%s: BucketingId is valid: \"%s\"',\n  BUCKETING_ID_NOT_STRING: '%s: BucketingID attribute is not a string. Defaulted to userId',\n  EVALUATING_AUDIENCE: '%s: Starting to evaluate audience \"%s\" with conditions: %s.',\n  EVALUATING_AUDIENCES_COMBINED: '%s: Evaluating audiences for %s \"%s\": %s.',\n  AUDIENCE_EVALUATION_RESULT: '%s: Audience \"%s\" evaluated to %s.',\n  AUDIENCE_EVALUATION_RESULT_COMBINED: '%s: Audiences for %s %s collectively evaluated to %s.',\n  MISSING_ATTRIBUTE_VALUE:\n    '%s: Audience condition %s evaluated to UNKNOWN because no value was passed for user attribute \"%s\".',\n  UNEXPECTED_CONDITION_VALUE:\n    '%s: Audience condition %s evaluated to UNKNOWN because the condition value is not supported.',\n  UNEXPECTED_TYPE:\n    '%s: Audience condition %s evaluated to UNKNOWN because a value of type \"%s\" was passed for user attribute \"%s\".',\n  UNEXPECTED_TYPE_NULL:\n    '%s: Audience condition %s evaluated to UNKNOWN because a null value was passed for user attribute \"%s\".',\n  UNKNOWN_CONDITION_TYPE:\n    '%s: Audience condition %s has an unknown condition type. You may need to upgrade to a newer release of the Optimizely SDK.',\n  UNKNOWN_MATCH_TYPE:\n    '%s: Audience condition %s uses an unknown match type. You may need to upgrade to a newer release of the Optimizely SDK.',\n  UPDATED_OPTIMIZELY_CONFIG: '%s: Updated Optimizely config to revision %s (project id %s)',\n  OUT_OF_BOUNDS:\n    '%s: Audience condition %s evaluated to UNKNOWN because the number value for user attribute \"%s\" is not in the range [-2^53, +2^53].',\n  UNABLE_TO_ATTACH_UNLOAD: '%s: unable to bind optimizely.close() to page unload event: \"%s\"',\n};\n\nexport var RESERVED_EVENT_KEYWORDS = {\n  REVENUE: 'revenue',\n  VALUE: 'value',\n};\n\nexport var CONTROL_ATTRIBUTES = {\n  BOT_FILTERING: '$opt_bot_filtering',\n  BUCKETING_ID: '$opt_bucketing_id',\n  STICKY_BUCKETING_KEY: '$opt_experiment_bucket_map',\n  USER_AGENT: '$opt_user_agent',\n};\n\nexport var JAVASCRIPT_CLIENT_ENGINE = 'javascript-sdk';\nexport var NODE_CLIENT_ENGINE = 'node-sdk';\nexport var REACT_CLIENT_ENGINE = 'react-sdk';\nexport var NODE_CLIENT_VERSION = '4.2.1';\n\nexport var VALID_CLIENT_ENGINES = [\n  NODE_CLIENT_ENGINE,\n  REACT_CLIENT_ENGINE,\n  JAVASCRIPT_CLIENT_ENGINE,\n];\n\nexport var NOTIFICATION_TYPES = notificationTypesEnum;\n\nexport var DECISION_NOTIFICATION_TYPES = {\n  AB_TEST: 'ab-test',\n  FEATURE: 'feature',\n  FEATURE_TEST: 'feature-test',\n  FEATURE_VARIABLE: 'feature-variable',\n  ALL_FEATURE_VARIABLES: 'all-feature-variables',\n};\n\n/*\n * Represents the source of a decision for feature management. When a feature\n * is accessed through isFeatureEnabled or getVariableValue APIs, the decision\n * source is used to decide whether to dispatch an impression event to\n * Optimizely.\n */\nexport var DECISION_SOURCES = {\n  FEATURE_TEST: 'feature-test',\n  ROLLOUT: 'rollout',\n};\n\nexport var AUDIENCE_EVALUATION_TYPES = {\n  RULE: 'rule',\n  EXPERIMENT: 'experiment',\n}\n\n/*\n * Possible types of variables attached to features\n */\nexport var FEATURE_VARIABLE_TYPES = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json',\n};\n\n/*\n * Supported datafile versions\n */\nexport var DATAFILE_VERSIONS = {\n  V2: '2',\n  V3: '3',\n  V4: '4',\n};\n\nexport default {\n  LOG_LEVEL: LOG_LEVEL,\n  ERROR_MESSAGES: ERROR_MESSAGES,\n  LOG_MESSAGES: LOG_MESSAGES,\n  RESERVED_EVENT_KEYWORDS: RESERVED_EVENT_KEYWORDS,\n  CONTROL_ATTRIBUTES: CONTROL_ATTRIBUTES,\n  JAVASCRIPT_CLIENT_ENGINE: JAVASCRIPT_CLIENT_ENGINE,\n  NODE_CLIENT_ENGINE: NODE_CLIENT_ENGINE,\n  REACT_CLIENT_ENGINE: REACT_CLIENT_ENGINE,\n  NODE_CLIENT_VERSION: NODE_CLIENT_VERSION,\n  VALID_CLIENT_ENGINES: VALID_CLIENT_ENGINES,\n  NOTIFICATION_TYPES: NOTIFICATION_TYPES,\n  DECISION_NOTIFICATION_TYPES: DECISION_NOTIFICATION_TYPES,\n  DECISION_SOURCES: DECISION_SOURCES,\n  FEATURE_VARIABLE_TYPES: FEATURE_VARIABLE_TYPES,\n  DATAFILE_VERSIONS: DATAFILE_VERSIONS,\n  AUDIENCE_EVALUATION_TYPES: AUDIENCE_EVALUATION_TYPES\n}\n","/**\n * Copyright 2016, 2018-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport { \n  ERROR_MESSAGES, \n  DATAFILE_VERSIONS,\n} from '../enums';\n\nvar MODULE_NAME = 'CONFIG_VALIDATOR';\nvar SUPPORTED_VERSIONS = [DATAFILE_VERSIONS.V2, DATAFILE_VERSIONS.V3, DATAFILE_VERSIONS.V4];\n\n/**\n * Validates the given config options\n * @param  {Object} config\n * @param  {Object} config.errorHandler\n * @param  {Object} config.eventDispatcher\n * @param  {Object} config.logger\n * @return {Boolean} True if the config options are valid\n * @throws If any of the config options are not valid\n */\nexport var validate = function(config) {\n  if (config.errorHandler && typeof config.errorHandler.handleError !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_ERROR_HANDLER, MODULE_NAME));\n  }\n\n  if (config.eventDispatcher && typeof config.eventDispatcher.dispatchEvent !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EVENT_DISPATCHER, MODULE_NAME));\n  }\n\n  if (config.logger && typeof config.logger.log !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_LOGGER, MODULE_NAME));\n  }\n\n  return true;\n};\n\n/**\n * Validates the datafile\n * @param {string}  datafile\n * @return {Boolean} True if the datafile is valid\n * @throws If the datafile is not valid for any of the following reasons:\n - The datafile string is undefined\n - The datafile string cannot be parsed as a JSON object\n - The datafile version is not supported\n */\nexport var validateDatafile = function(datafile) {\n  if (!datafile) {\n    throw new Error(sprintf(ERROR_MESSAGES.NO_DATAFILE_SPECIFIED, MODULE_NAME));\n  }\n\n  if (typeof datafile === 'string' || datafile instanceof String) {\n    // Attempt to parse the datafile string\n    try {\n      datafile = JSON.parse(datafile);\n    } catch (ex) {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_DATAFILE_MALFORMED, MODULE_NAME));\n    }\n  }\n\n  if (SUPPORTED_VERSIONS.indexOf(datafile.version) === -1) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_DATAFILE_VERSION, MODULE_NAME, datafile.version));\n  }\n\n  return true;\n};\n\n/**\n * Provides utility methods for validating that the configuration options are valid\n */\nexport default {\n  validate: validate,\n  validateDatafile: validateDatafile,\n};\n","/**\n * Copyright 2016, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Default error handler implementation\n */\nexport var handleError = function() {\n  // no-op\n}\n\nexport default {\n  handleError,\n}\n","/**\n * Copyright 2016-2017, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar POST_METHOD = 'POST';\nvar GET_METHOD = 'GET';\nvar READYSTATE_COMPLETE = 4;\n\n/**\n * Sample event dispatcher implementation for tracking impression and conversions\n * Users of the SDK can provide their own implementation\n * @param  {Object} eventObj\n * @param  {Function} callback\n */\nexport var dispatchEvent = function(eventObj, callback) {\n  var url = eventObj.url;\n  var params = eventObj.params;\n  var req;\n  if (eventObj.httpVerb === POST_METHOD) {\n    req = new XMLHttpRequest();\n    req.open(POST_METHOD, url, true);\n    req.setRequestHeader('Content-Type', 'application/json');\n    req.onreadystatechange = function() {\n      if (req.readyState === READYSTATE_COMPLETE && callback && typeof callback === 'function') {\n        try {\n          callback({ statusCode: req.status });\n        } catch (e) {\n          // TODO: Log this somehow (consider adding a logger to the EventDispatcher interface)\n        }\n      }\n    };\n    req.send(JSON.stringify(params));\n  } else {\n    // add param for cors headers to be sent by the log endpoint\n    url += '?wxhr=true';\n    if (params) {\n      url += '&' + toQueryString(params);\n    }\n\n    req = new XMLHttpRequest();\n    req.open(GET_METHOD, url, true);\n    req.onreadystatechange = function() {\n      if (req.readyState === READYSTATE_COMPLETE && callback && typeof callback === 'function') {\n        try {\n          callback();\n        } catch (e) {\n          // TODO: Log this somehow (consider adding a logger to the EventDispatcher interface)\n        }\n      }\n    };\n    req.send();\n  }\n}\n\nvar toQueryString = function(obj) {\n  return Object.keys(obj)\n    .map(function(k) {\n      return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]);\n    })\n    .join('&');\n};\n\nexport default {\n  dispatchEvent,\n};\n","/**\n * Copyright 2016-2017, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ConsoleLogHandler } from '@optimizely/js-sdk-logging';\n\nfunction NoOpLogger() {}\n\nNoOpLogger.prototype.log = function() {};\n\nexport var createLogger = function(opts) {\n  return new ConsoleLogHandler(opts);\n};\n\nexport var createNoOpLogger = function() {\n  return new NoOpLogger();\n};\n\nexport default {\n  createLogger,\n  createNoOpLogger,\n};\n","/**\n * Copyright 2016, 2018-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport fns from '../../utils/fns';\nimport { ERROR_MESSAGES } from '../enums';\n\nvar MODULE_NAME = 'ATTRIBUTES_VALIDATOR';\n\n/**\n * Validates user's provided attributes\n * @param  {Object}  attributes\n * @return {boolean} True if the attributes are valid\n * @throws If the attributes are not valid\n */\nexport var validate = function(attributes) {\n  if (typeof attributes === 'object' && !Array.isArray(attributes) && attributes !== null) {\n    Object.keys(attributes).forEach(function(key) {\n      if (typeof attributes[key] === 'undefined') {\n        throw new Error(sprintf(ERROR_MESSAGES.UNDEFINED_ATTRIBUTE, MODULE_NAME, key));\n      }\n    });\n    return true;\n  } else {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_ATTRIBUTES, MODULE_NAME));\n  }\n};\n\nexport var isAttributeValid = function(attributeKey, attributeValue) {\n  return (\n    typeof attributeKey === 'string' &&\n    (typeof attributeValue === 'string' ||\n      typeof attributeValue === 'boolean' ||\n      (fns.isNumber(attributeValue) && fns.isSafeInteger(attributeValue)))\n  );\n};\n\n/**\n * Provides utility method for validating that the attributes user has provided are valid\n */\nexport default {\n  validate: validate,\n  isAttributeValid: isAttributeValid,\n};\n","(function(){\n  var _global = this;\n\n  /**\n   * JS Implementation of MurmurHash2\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} str ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV2(str, seed) {\n    var\n      l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n    while (l >= 4) {\n      k =\n        ((str.charCodeAt(i) & 0xff)) |\n        ((str.charCodeAt(++i) & 0xff) << 8) |\n        ((str.charCodeAt(++i) & 0xff) << 16) |\n        ((str.charCodeAt(++i) & 0xff) << 24);\n\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n      k ^= k >>> 24;\n      k = (((k & 0xffff) * 0x5bd1e995) + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n      l -= 4;\n      ++i;\n    }\n\n    switch (l) {\n    case 3: h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2: h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1: h ^= (str.charCodeAt(i) & 0xff);\n            h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    }\n\n    h ^= h >>> 13;\n    h = (((h & 0xffff) * 0x5bd1e995) + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16));\n    h ^= h >>> 15;\n\n    return h >>> 0;\n  };\n\n  /**\n   * JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n   *\n   * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n   * @see http://github.com/garycourt/murmurhash-js\n   * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n   * @see http://sites.google.com/site/murmurhash/\n   *\n   * @param {string} key ASCII only\n   * @param {number} seed Positive integer only\n   * @return {number} 32-bit positive integer hash\n   */\n  function MurmurHashV3(key, seed) {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i;\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n          ((key.charCodeAt(i) & 0xff)) |\n          ((key.charCodeAt(++i) & 0xff) << 8) |\n          ((key.charCodeAt(++i) & 0xff) << 16) |\n          ((key.charCodeAt(++i) & 0xff) << 24);\n      ++i;\n\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n      h1 ^= k1;\n          h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n      case 1: k1 ^= (key.charCodeAt(i) & 0xff);\n\n      k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n  }\n\n  var murmur = MurmurHashV3;\n  murmur.v2 = MurmurHashV2;\n  murmur.v3 = MurmurHashV3;\n\n  if (typeof(module) != 'undefined') {\n    module.exports = murmur;\n  } else {\n    var _previousRoot = _global.murmur;\n    murmur.noConflict = function() {\n      _global.murmur = _previousRoot;\n      return murmur;\n    }\n    _global.murmur = murmur;\n  }\n}());\n","/**\n * Copyright 2016, 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Bucketer API for determining the variation id from the specified parameters\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\nimport murmurhash from 'murmurhash';\n\nimport {\n  ERROR_MESSAGES,\n  LOG_LEVEL,\n  LOG_MESSAGES,\n} from '../../utils/enums';\n\nvar HASH_SEED = 1;\nvar MAX_HASH_VALUE = Math.pow(2, 32);\nvar MAX_TRAFFIC_VALUE = 10000;\nvar MODULE_NAME = 'BUCKETER';\nvar RANDOM_POLICY = 'random';\n\n/**\n * Determines ID of variation to be shown for the given input params\n * @param  {Object}         bucketerParams\n * @param  {string}         bucketerParams.experimentId\n * @param  {string}         bucketerParams.experimentKey\n * @param  {string}         bucketerParams.userId\n * @param  {Object[]}       bucketerParams.trafficAllocationConfig\n * @param  {Array}          bucketerParams.experimentKeyMap\n * @param  {Object}         bucketerParams.groupIdMap\n * @param  {Object}         bucketerParams.variationIdMap\n * @param  {string}         bucketerParams.varationIdMap[].key\n * @param  {Object}         bucketerParams.logger\n * @param  {string}         bucketerParams.bucketingId\n * @return Variation ID that user has been bucketed into, null if user is not bucketed into any experiment\n */\nexport var bucket = function(bucketerParams) {\n  // Check if user is in a random group; if so, check if user is bucketed into a specific experiment\n  var experiment = bucketerParams.experimentKeyMap[bucketerParams.experimentKey];\n  var groupId = experiment['groupId'];\n  if (groupId) {\n    var group = bucketerParams.groupIdMap[groupId];\n    if (!group) {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_GROUP_ID, MODULE_NAME, groupId));\n    }\n    if (group.policy === RANDOM_POLICY) {\n      var bucketedExperimentId = this.bucketUserIntoExperiment(\n        group,\n        bucketerParams.bucketingId,\n        bucketerParams.userId,\n        bucketerParams.logger\n      );\n\n      // Return if user is not bucketed into any experiment\n      if (bucketedExperimentId === null) {\n        var notbucketedInAnyExperimentLogMessage = sprintf(\n          LOG_MESSAGES.USER_NOT_IN_ANY_EXPERIMENT,\n          MODULE_NAME,\n          bucketerParams.userId,\n          groupId\n        );\n        bucketerParams.logger.log(LOG_LEVEL.INFO, notbucketedInAnyExperimentLogMessage);\n        return null;\n      }\n\n      // Return if user is bucketed into a different experiment than the one specified\n      if (bucketedExperimentId !== bucketerParams.experimentId) {\n        var notBucketedIntoExperimentOfGroupLogMessage = sprintf(\n          LOG_MESSAGES.USER_NOT_BUCKETED_INTO_EXPERIMENT_IN_GROUP,\n          MODULE_NAME,\n          bucketerParams.userId,\n          bucketerParams.experimentKey,\n          groupId\n        );\n        bucketerParams.logger.log(LOG_LEVEL.INFO, notBucketedIntoExperimentOfGroupLogMessage);\n        return null;\n      }\n\n      // Continue bucketing if user is bucketed into specified experiment\n      var bucketedIntoExperimentOfGroupLogMessage = sprintf(\n        LOG_MESSAGES.USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP,\n        MODULE_NAME,\n        bucketerParams.userId,\n        bucketerParams.experimentKey,\n        groupId\n      );\n      bucketerParams.logger.log(LOG_LEVEL.INFO, bucketedIntoExperimentOfGroupLogMessage);\n    }\n  }\n  var bucketingId = sprintf('%s%s', bucketerParams.bucketingId, bucketerParams.experimentId);\n  var bucketValue = this._generateBucketValue(bucketingId);\n\n  var bucketedUserLogMessage = sprintf(\n    LOG_MESSAGES.USER_ASSIGNED_TO_EXPERIMENT_BUCKET,\n    MODULE_NAME,\n    bucketValue,\n    bucketerParams.userId\n  );\n  bucketerParams.logger.log(LOG_LEVEL.DEBUG, bucketedUserLogMessage);\n\n  var entityId = this._findBucket(bucketValue, bucketerParams.trafficAllocationConfig);\n\n  if (!bucketerParams.variationIdMap.hasOwnProperty(entityId)) {\n    if (entityId) {\n      var invalidVariationIdLogMessage = sprintf(LOG_MESSAGES.INVALID_VARIATION_ID, MODULE_NAME);\n      bucketerParams.logger.log(LOG_LEVEL.WARNING, invalidVariationIdLogMessage);\n    }\n    return null;\n  }\n\n  return entityId;\n};\n\n/**\n * Returns bucketed experiment ID to compare against experiment user is being called into\n * @param {Object} group        Group that experiment is in\n * @param {string} bucketingId  Bucketing ID\n * @param {string} userId       ID of user to be bucketed into experiment\n * @param {Object} logger       Logger implementation\n * @return {string|null} ID of experiment if user is bucketed into experiment within the group, null otherwise\n */\nexport var bucketUserIntoExperiment = function(group, bucketingId, userId, logger) {\n  var bucketingKey = sprintf('%s%s', bucketingId, group.id);\n  var bucketValue = this._generateBucketValue(bucketingKey);\n  logger.log(\n    LOG_LEVEL.DEBUG,\n    sprintf(LOG_MESSAGES.USER_ASSIGNED_TO_EXPERIMENT_BUCKET, MODULE_NAME, bucketValue, userId)\n  );\n  var trafficAllocationConfig = group.trafficAllocation;\n  var bucketedExperimentId = this._findBucket(bucketValue, trafficAllocationConfig);\n  return bucketedExperimentId;\n};\n\n/**\n * Returns entity ID associated with bucket value\n * @param  {string}   bucketValue\n * @param  {Object[]} trafficAllocationConfig\n * @param  {number}   trafficAllocationConfig[].endOfRange\n * @param  {number}   trafficAllocationConfig[].entityId\n * @return {string|null}   Entity ID for bucketing if bucket value is within traffic allocation boundaries, null otherwise\n */\nexport var _findBucket = function(bucketValue, trafficAllocationConfig) {\n  for (var i = 0; i < trafficAllocationConfig.length; i++) {\n    if (bucketValue < trafficAllocationConfig[i].endOfRange) {\n      return trafficAllocationConfig[i].entityId;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper function to generate bucket value in half-closed interval [0, MAX_TRAFFIC_VALUE)\n * @param  {string} bucketingKey String value for bucketing\n * @return {string} the generated bucket value\n * @throws If bucketing value is not a valid string\n */\nexport var _generateBucketValue = function(bucketingKey) {\n  try {\n    // NOTE: the mmh library already does cast the hash value as an unsigned 32bit int\n    // https://github.com/perezd/node-murmurhash/blob/master/murmurhash.js#L115\n    var hashValue = murmurhash.v3(bucketingKey, HASH_SEED);\n    var ratio = hashValue / MAX_HASH_VALUE;\n    return parseInt(ratio * MAX_TRAFFIC_VALUE, 10);\n  } catch (ex) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_BUCKETING_ID, MODULE_NAME, bucketingKey, ex.message));\n  }\n};\n\nexport default {\n  bucket: bucket,\n  bucketUserIntoExperiment: bucketUserIntoExperiment,\n  _findBucket: _findBucket,\n  _generateBucketValue: _generateBucketValue,\n};\n","/**\n * Copyright 2016-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf, objectValues } from '@optimizely/js-sdk-utils';\n\nimport fns from '../../utils/fns';\nimport {\n  ERROR_MESSAGES,\n  LOG_MESSAGES,\n  LOG_LEVEL,\n  FEATURE_VARIABLE_TYPES,\n} from '../../utils/enums';\nimport configValidator from '../../utils/config_validator';\n\nvar EXPERIMENT_RUNNING_STATUS = 'Running';\nvar RESERVED_ATTRIBUTE_PREFIX = '$opt_';\nvar MODULE_NAME = 'PROJECT_CONFIG';\n\nfunction createMutationSafeDatafileCopy(datafile) {\n  var datafileCopy = fns.assign({}, datafile);\n  datafileCopy.audiences = (datafile.audiences || []).map(function(audience) {\n    return fns.assign({}, audience);\n  });\n  datafileCopy.experiments = (datafile.experiments || []).map(function(experiment) {\n    return fns.assign({}, experiment);\n  });\n  datafileCopy.featureFlags = (datafile.featureFlags || []).map(function(featureFlag) {\n    return fns.assign({}, featureFlag);\n  });\n  datafileCopy.groups = (datafile.groups || []).map(function(group) {\n    var groupCopy = fns.assign({}, group);\n    groupCopy.experiments = (group.experiments || []).map(function(experiment) {\n      return fns.assign({}, experiment);\n    });\n    return groupCopy;\n  });\n  datafileCopy.rollouts = (datafile.rollouts || []).map(function(rollout) {\n    var rolloutCopy = fns.assign({}, rollout);\n    rolloutCopy.experiments = (rollout.experiments || []).map(function(experiment) {\n      return fns.assign({}, experiment);\n    });\n    return rolloutCopy;\n  });\n  return datafileCopy;\n}\n\n/**\n * Creates projectConfig object to be used for quick project property lookup\n * @param  {Object} datafile JSON datafile representing the project\n * @return {Object} Object representing project configuration\n */\nexport var createProjectConfig = function(datafile) {\n  var projectConfig = createMutationSafeDatafileCopy(datafile);\n\n  /*\n   * Conditions of audiences in projectConfig.typedAudiences are not\n   * expected to be string-encoded as they are here in projectConfig.audiences.\n   */\n  (projectConfig.audiences || []).forEach(function(audience) {\n    audience.conditions = JSON.parse(audience.conditions);\n  });\n  projectConfig.audiencesById = fns.keyBy(projectConfig.audiences, 'id');\n  fns.assign(projectConfig.audiencesById, fns.keyBy(projectConfig.typedAudiences, 'id'));\n\n  projectConfig.attributeKeyMap = fns.keyBy(projectConfig.attributes, 'key');\n  projectConfig.eventKeyMap = fns.keyBy(projectConfig.events, 'key');\n  projectConfig.groupIdMap = fns.keyBy(projectConfig.groups, 'id');\n\n  var experiments;\n  Object.keys(projectConfig.groupIdMap || {}).forEach(function(Id) {\n    experiments = projectConfig.groupIdMap[Id].experiments;\n    (experiments || []).forEach(function(experiment) {\n      projectConfig.experiments.push(fns.assign(experiment, { groupId: Id }));\n    });\n  });\n\n  projectConfig.rolloutIdMap = fns.keyBy(projectConfig.rollouts || [], 'id');\n  objectValues(projectConfig.rolloutIdMap || {}).forEach(function (rollout) {\n    (rollout.experiments || []).forEach(function(experiment) {\n      projectConfig.experiments.push(experiment);\n      // Creates { <variationKey>: <variation> } map inside of the experiment\n      experiment.variationKeyMap = fns.keyBy(experiment.variations, 'key');\n    });\n  });\n\n  projectConfig.experimentKeyMap = fns.keyBy(projectConfig.experiments, 'key');\n  projectConfig.experimentIdMap = fns.keyBy(projectConfig.experiments, 'id');\n\n  projectConfig.variationIdMap = {};\n  projectConfig.variationVariableUsageMap = {};\n  (projectConfig.experiments || []).forEach(function(experiment) {\n    // Creates { <variationKey>: <variation> } map inside of the experiment\n    experiment.variationKeyMap = fns.keyBy(experiment.variations, 'key');\n\n    // Creates { <variationId>: { key: <variationKey>, id: <variationId> } } mapping for quick lookup\n    fns.assign(projectConfig.variationIdMap, fns.keyBy(experiment.variations, 'id'));\n    objectValues(experiment.variationKeyMap || {}).forEach(function(variation) {\n      if (variation.variables) {\n        projectConfig.variationVariableUsageMap[variation.id] = fns.keyBy(variation.variables, 'id');\n      }\n    });\n  });\n\n  // Object containing experiment Ids that exist in any feature\n  // for checking that experiment is a feature experiment or not.\n  projectConfig.experimentFeatureMap = {};\n\n  projectConfig.featureKeyMap = fns.keyBy(projectConfig.featureFlags || [], 'key');\n  objectValues(projectConfig.featureKeyMap || {}).forEach(function(feature) {\n    // Json type is represented in datafile as a subtype of string for the sake of backwards compatibility.\n    // Converting it to a first-class json type while creating Project Config\n    feature.variables.forEach(function(variable) {\n      if (variable.type === FEATURE_VARIABLE_TYPES.STRING && variable.subType === FEATURE_VARIABLE_TYPES.JSON) {\n        variable.type = FEATURE_VARIABLE_TYPES.JSON;\n        delete variable.subType;\n      }\n    });\n\n    feature.variableKeyMap = fns.keyBy(feature.variables, 'key');\n    (feature.experimentIds || []).forEach(function(experimentId) {\n      // Add this experiment in experiment-feature map.\n      if (projectConfig.experimentFeatureMap[experimentId]) {\n        projectConfig.experimentFeatureMap[experimentId].push(feature.id);\n      } else {\n        projectConfig.experimentFeatureMap[experimentId] = [feature.id];\n      }\n\n      var experimentInFeature = projectConfig.experimentIdMap[experimentId];\n      // Experiments in feature can only belong to one mutex group.\n      if (experimentInFeature.groupId && !feature.groupId) {\n        feature.groupId = experimentInFeature.groupId;\n      }\n    });\n  });\n\n  return projectConfig;\n};\n\n/**\n * Get experiment ID for the provided experiment key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Experiment key for which ID is to be determined\n * @return {string} Experiment ID corresponding to the provided experiment key\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentId = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n  return experiment.id;\n};\n\n/**\n * Get layer ID for the provided experiment key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentId Experiment ID for which layer ID is to be determined\n * @return {string} Layer ID corresponding to the provided experiment key\n * @throws If experiment key is not in datafile\n */\nexport var getLayerId = function(projectConfig, experimentId) {\n  var experiment = projectConfig.experimentIdMap[experimentId];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_ID, MODULE_NAME, experimentId));\n  }\n  return experiment.layerId;\n};\n\n/**\n * Get attribute ID for the provided attribute key\n * @param  {Object}      projectConfig Object representing project configuration\n * @param  {string}      attributeKey  Attribute key for which ID is to be determined\n * @param  {Object}      logger\n * @return {string|null} Attribute ID corresponding to the provided attribute key. Attribute key if it is a reserved attribute.\n */\nexport var getAttributeId = function(projectConfig, attributeKey, logger) {\n  var attribute = projectConfig.attributeKeyMap[attributeKey];\n  var hasReservedPrefix = attributeKey.indexOf(RESERVED_ATTRIBUTE_PREFIX) === 0;\n  if (attribute) {\n    if (hasReservedPrefix) {\n      logger.log(\n        LOG_LEVEL.WARN,\n        sprintf(\n          'Attribute %s unexpectedly has reserved prefix %s; using attribute ID instead of reserved attribute name.',\n          attributeKey,\n          RESERVED_ATTRIBUTE_PREFIX\n        )\n      );\n    }\n    return attribute.id;\n  } else if (hasReservedPrefix) {\n    return attributeKey;\n  }\n\n  logger.log(LOG_LEVEL.DEBUG, sprintf(ERROR_MESSAGES.UNRECOGNIZED_ATTRIBUTE, MODULE_NAME, attributeKey));\n  return null;\n};\n\n/**\n * Get event ID for the provided\n * @param  {Object}      projectConfig Object representing project configuration\n * @param  {string}      eventKey      Event key for which ID is to be determined\n * @return {string|null} Event ID corresponding to the provided event key\n */\nexport var getEventId = function(projectConfig, eventKey) {\n  var event = projectConfig.eventKeyMap[eventKey];\n  if (event) {\n    return event.id;\n  }\n  return null;\n};\n\n/**\n * Get experiment status for the provided experiment key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Experiment key for which status is to be determined\n * @return {string} Experiment status corresponding to the provided experiment key\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentStatus = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n  return experiment.status;\n};\n\n/**\n * Returns whether experiment has a status of 'Running'\n * @param  {Object}  projectConfig Object representing project configuration\n * @param  {string}  experimentKey Experiment key for which status is to be compared with 'Running'\n * @return {Boolean}               true if experiment status is set to 'Running', false otherwise\n */\nexport var isActive = function(projectConfig, experimentKey) {\n  return this.getExperimentStatus(projectConfig, experimentKey) === EXPERIMENT_RUNNING_STATUS;\n};\n\n/**\n * Determine for given experiment if event is running, which determines whether should be dispatched or not\n */\nexport var isRunning = function(projectConfig, experimentKey) {\n  return this.getExperimentStatus(projectConfig, experimentKey) === EXPERIMENT_RUNNING_STATUS;\n};\n\n/**\n * Get audience conditions for the experiment\n * @param  {Object}         projectConfig Object representing project configuration\n * @param  {string}         experimentKey Experiment key for which audience conditions are to be determined\n * @return {Array}          Audience conditions for the experiment - can be an array of audience IDs, or a\n *                          nested array of conditions\n *                          Examples: [\"5\", \"6\"], [\"and\", [\"or\", \"1\", \"2\"], \"3\"]\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentAudienceConditions = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n\n  return experiment.audienceConditions || experiment.audienceIds;\n};\n\n/**\n * Get variation key given experiment key and variation ID\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} variationId   ID of the variation\n * @return {string} Variation key or null if the variation ID is not found\n */\nexport var getVariationKeyFromId = function(projectConfig, variationId) {\n  if (projectConfig.variationIdMap.hasOwnProperty(variationId)) {\n    return projectConfig.variationIdMap[variationId].key;\n  }\n  return null;\n};\n\n/**\n * Get the variation ID given the experiment key and variation key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Key of the experiment the variation belongs to\n * @param  {string} variationKey  The variation key\n * @return {string} the variation ID\n */\nexport var getVariationIdFromExperimentAndVariationKey = function(projectConfig, experimentKey, variationKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (experiment.variationKeyMap.hasOwnProperty(variationKey)) {\n    return experiment.variationKeyMap[variationKey].id;\n  }\n  return null;\n};\n\n/**\n * Get experiment from provided experiment key\n * @param  {Object} projectConfig  Object representing project configuration\n * @param  {string} experimentKey  Event key for which experiment IDs are to be retrieved\n * @return {Object} experiment\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentFromKey = function(projectConfig, experimentKey) {\n  if (projectConfig.experimentKeyMap.hasOwnProperty(experimentKey)) {\n    var experiment = projectConfig.experimentKeyMap[experimentKey];\n    if (experiment) {\n      return experiment;\n    }\n  }\n\n  throw new Error(sprintf(ERROR_MESSAGES.EXPERIMENT_KEY_NOT_IN_DATAFILE, MODULE_NAME, experimentKey));\n};\n\n/**\n * Given an experiment key, returns the traffic allocation within that experiment\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Key representing the experiment\n * @return {Array<Object>}        Traffic allocation for the experiment\n * @throws If experiment key is not in datafile\n */\nexport var getTrafficAllocation = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n  return experiment.trafficAllocation;\n};\n\n/**\n * Get experiment from provided experiment id. Log an error if no experiment\n * exists in the project config with the given ID.\n * @param  {Object} projectConfig  Object representing project configuration\n * @param  {string} experimentId  ID of desired experiment object\n * @return {Object} Experiment object\n */\nexport var getExperimentFromId = function(projectConfig, experimentId, logger) {\n  if (projectConfig.experimentIdMap.hasOwnProperty(experimentId)) {\n    var experiment = projectConfig.experimentIdMap[experimentId];\n    if (experiment) {\n      return experiment;\n    }\n  }\n\n  logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_ID, MODULE_NAME, experimentId));\n  return null;\n};\n\n/**\n * Get feature from provided feature key. Log an error if no feature exists in\n * the project config with the given key.\n * @param {Object} projectConfig\n * @param {string} featureKey\n * @param {Object} logger\n * @return {Object|null} Feature object, or null if no feature with the given\n * key exists\n */\nexport var getFeatureFromKey = function(projectConfig, featureKey, logger) {\n  if (projectConfig.featureKeyMap.hasOwnProperty(featureKey)) {\n    var feature = projectConfig.featureKeyMap[featureKey];\n    if (feature) {\n      return feature;\n    }\n  }\n\n  logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.FEATURE_NOT_IN_DATAFILE, MODULE_NAME, featureKey));\n  return null;\n};\n\n/**\n * Get the variable with the given key associated with the feature with the\n * given key. If the feature key or the variable key are invalid, log an error\n * message.\n * @param {Object} projectConfig\n * @param {string} featureKey\n * @param {string} variableKey\n * @param {Object} logger\n * @return {Object|null} Variable object, or null one or both of the given\n * feature and variable keys are invalid\n */\nexport var getVariableForFeature = function(projectConfig, featureKey, variableKey, logger) {\n  var feature = projectConfig.featureKeyMap[featureKey];\n  if (!feature) {\n    logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.FEATURE_NOT_IN_DATAFILE, MODULE_NAME, featureKey));\n    return null;\n  }\n\n  var variable = feature.variableKeyMap[variableKey];\n  if (!variable) {\n    logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.VARIABLE_KEY_NOT_IN_DATAFILE, MODULE_NAME, variableKey, featureKey)\n    );\n    return null;\n  }\n\n  return variable;\n};\n\n/**\n * Get the value of the given variable for the given variation. If the given\n * variable has no value for the given variation, return null. Log an error message if the variation is invalid. If the\n * variable or variation are invalid, return null.\n * @param {Object} projectConfig\n * @param {Object} variable\n * @param {Object} variation\n * @param {Object} logger\n * @return {string|null} The value of the given variable for the given\n * variation, or null if the given variable has no value\n * for the given variation or if the variation or variable are invalid\n */\nexport var getVariableValueForVariation = function(projectConfig, variable, variation, logger) {\n  if (!variable || !variation) {\n    return null;\n  }\n\n  if (!projectConfig.variationVariableUsageMap.hasOwnProperty(variation.id)) {\n    logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.VARIATION_ID_NOT_IN_DATAFILE_NO_EXPERIMENT, MODULE_NAME, variation.id)\n    );\n    return null;\n  }\n\n  var variableUsages = projectConfig.variationVariableUsageMap[variation.id];\n  var variableUsage = variableUsages[variable.id];\n\n  return variableUsage ? variableUsage.value : null;\n};\n\n/**\n * Given a variable value in string form, try to cast it to the argument type.\n * If the type cast succeeds, return the type casted value, otherwise log an\n * error and return null.\n * @param {string} variableValue  Variable value in string form\n * @param {string} variableType   Type of the variable whose value was passed\n *                                in the first argument. Must be one of\n *                                FEATURE_VARIABLE_TYPES in\n *                                lib/utils/enums/index.js. The return value's\n *                                type is determined by this argument (boolean\n *                                for BOOLEAN, number for INTEGER or DOUBLE,\n *                                and string for STRING).\n * @param {Object} logger         Logger instance\n * @returns {*}                   Variable value of the appropriate type, or\n *                                null if the type cast failed\n */\nexport var getTypeCastValue = function(variableValue, variableType, logger) {\n  var castValue;\n\n  switch (variableType) {\n    case FEATURE_VARIABLE_TYPES.BOOLEAN:\n      if (variableValue !== 'true' && variableValue !== 'false') {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      } else {\n        castValue = variableValue === 'true';\n      }\n      break;\n\n    case FEATURE_VARIABLE_TYPES.INTEGER:\n      castValue = parseInt(variableValue, 10);\n      if (isNaN(castValue)) {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      }\n      break;\n\n    case FEATURE_VARIABLE_TYPES.DOUBLE:\n      castValue = parseFloat(variableValue);\n      if (isNaN(castValue)) {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      }\n      break;\n\n    case FEATURE_VARIABLE_TYPES.JSON:\n      try {\n        castValue = JSON.parse(variableValue);\n      } catch (e) {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      }\n      break;\n\n    default:\n      // type is STRING\n      castValue = variableValue;\n      break;\n  }\n\n  return castValue;\n};\n\n/**\n * Returns an object containing all audiences in the project config. Keys are audience IDs\n * and values are audience objects.\n * @param projectConfig\n * @returns {Object}\n */\nexport var getAudiencesById = function(projectConfig) {\n  return projectConfig.audiencesById;\n};\n\n/**\n * Returns true if an event with the given key exists in the datafile, and false otherwise\n * @param {Object} projectConfig\n * @param {string} eventKey\n * @returns {boolean}\n */\nexport var eventWithKeyExists = function(projectConfig, eventKey) {\n  return projectConfig.eventKeyMap.hasOwnProperty(eventKey);\n};\n\n/**\n *\n * @param {Object} projectConfig\n * @param {string} experimentId\n * @returns {boolean} Returns true if experiment belongs to\n * any feature, false otherwise.\n */\nexport var isFeatureExperiment = function(projectConfig, experimentId) {\n  return projectConfig.experimentFeatureMap.hasOwnProperty(experimentId);\n};\n\n/**\n * Try to create a project config object from the given datafile and\n * configuration properties.\n * If successful, return the project config object, otherwise throws an error\n * @param  {Object} config\n * @param  {Object} config.datafile\n * @param  {Object} config.jsonSchemaValidator\n * @param  {Object} config.logger\n * @return {Object} Project config object\n */\nexport var tryCreatingProjectConfig = function(config) {\n  configValidator.validateDatafile(config.datafile);\n  if (!config.jsonSchemaValidator) {\n    config.logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.SKIPPING_JSON_VALIDATION, MODULE_NAME));\n  } else {\n    config.jsonSchemaValidator.validate(config.datafile);\n    config.logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.VALID_DATAFILE, MODULE_NAME));\n  }\n  return this.createProjectConfig(config.datafile);\n};\n\nexport default {\n  createProjectConfig: createProjectConfig,\n  getExperimentId: getExperimentId,\n  getLayerId: getLayerId,\n  getAttributeId: getAttributeId,\n  getEventId: getEventId,\n  getExperimentStatus: getExperimentStatus,\n  isActive: isActive,\n  isRunning: isRunning,\n  getExperimentAudienceConditions: getExperimentAudienceConditions,\n  getVariationKeyFromId: getVariationKeyFromId,\n  getVariationIdFromExperimentAndVariationKey: getVariationIdFromExperimentAndVariationKey,\n  getExperimentFromKey: getExperimentFromKey,\n  getTrafficAllocation: getTrafficAllocation,\n  getExperimentFromId: getExperimentFromId,\n  getFeatureFromKey: getFeatureFromKey,\n  getVariableForFeature: getVariableForFeature,\n  getVariableValueForVariation: getVariableValueForVariation,\n  getTypeCastValue: getTypeCastValue,\n  getAudiencesById: getAudiencesById,\n  eventWithKeyExists: eventWithKeyExists,\n  isFeatureExperiment: isFeatureExperiment,\n  tryCreatingProjectConfig: tryCreatingProjectConfig,\n};\n","/****************************************************************************\n * Copyright 2018, 2020, Optimizely, Inc. and contributors                  *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\nvar AND_CONDITION = 'and';\nvar OR_CONDITION = 'or';\nvar NOT_CONDITION = 'not';\n\nvar DEFAULT_OPERATOR_TYPES = [AND_CONDITION, OR_CONDITION, NOT_CONDITION];\n\n/**\n * Top level method to evaluate conditions\n * @param  {Array|*}    conditions      Nested array of and/or conditions, or a single leaf\n *                                      condition value of any type\n *                                      Example: ['and', '0', ['or', '1', '2']]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition\n *                                      values\n * @return {?Boolean}                   Result of evaluating the conditions using the operator\n *                                      rules and the leaf evaluator. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated\n */\nexport var evaluate = function(conditions, leafEvaluator) {\n  if (Array.isArray(conditions)) {\n    var firstOperator = conditions[0];\n    var restOfConditions = conditions.slice(1);\n\n    if (DEFAULT_OPERATOR_TYPES.indexOf(firstOperator) === -1) {\n      // Operator to apply is not explicit - assume 'or'\n      firstOperator = OR_CONDITION;\n      restOfConditions = conditions;\n    }\n\n    switch (firstOperator) {\n      case AND_CONDITION:\n        return andEvaluator(restOfConditions, leafEvaluator);\n      case NOT_CONDITION:\n        return notEvaluator(restOfConditions, leafEvaluator);\n      default:\n        // firstOperator is OR_CONDITION\n        return orEvaluator(restOfConditions, leafEvaluator);\n    }\n  }\n\n  var leafCondition = conditions;\n  return leafEvaluator(leafCondition);\n};\n\n/**\n * Evaluates an array of conditions as if the evaluator had been applied\n * to each entry and the results AND-ed together.\n * @param  {Array}      conditions      Array of conditions ex: [operand_1, operand_2]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition values\n * @return {?Boolean}                   Result of evaluating the conditions. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated.\n */\nfunction andEvaluator(conditions, leafEvaluator) {\n  var sawNullResult = false;\n  for (var i = 0; i < conditions.length; i++) {\n    var conditionResult = evaluate(conditions[i], leafEvaluator);\n    if (conditionResult === false) {\n      return false;\n    }\n    if (conditionResult === null) {\n      sawNullResult = true;\n    }\n  }\n  return sawNullResult ? null : true;\n}\n\n/**\n * Evaluates an array of conditions as if the evaluator had been applied\n * to a single entry and NOT was applied to the result.\n * @param  {Array}      conditions      Array of conditions ex: [operand_1]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition values\n * @return {?Boolean}                   Result of evaluating the conditions. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated.\n */\nfunction notEvaluator(conditions, leafEvaluator) {\n  if (conditions.length > 0) {\n    var result = evaluate(conditions[0], leafEvaluator);\n    return result === null ? null : !result;\n  }\n  return null;\n}\n\n/**\n * Evaluates an array of conditions as if the evaluator had been applied\n * to each entry and the results OR-ed together.\n * @param  {Array}      conditions      Array of conditions ex: [operand_1, operand_2]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition values\n * @return {?Boolean}                   Result of evaluating the conditions. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated.\n */\nfunction orEvaluator(conditions, leafEvaluator) {\n  var sawNullResult = false;\n  for (var i = 0; i < conditions.length; i++) {\n    var conditionResult = evaluate(conditions[i], leafEvaluator);\n    if (conditionResult === true) {\n      return true;\n    }\n    if (conditionResult === null) {\n      sawNullResult = true;\n    }\n  }\n  return sawNullResult ? null : false;\n}\n\nexport default {\n  evaluate: evaluate,\n};\n","/****************************************************************************\n * Copyright 2018-2019, 2020 Optimizely, Inc. and contributors              *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport fns from '../../utils/fns';\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n} from '../../utils/enums';\n\nvar MODULE_NAME = 'CUSTOM_ATTRIBUTE_CONDITION_EVALUATOR';\n\nvar EXACT_MATCH_TYPE = 'exact';\nvar EXISTS_MATCH_TYPE = 'exists';\nvar GREATER_THAN_MATCH_TYPE = 'gt';\nvar LESS_THAN_MATCH_TYPE = 'lt';\nvar SUBSTRING_MATCH_TYPE = 'substring';\n\nvar MATCH_TYPES = [\n  EXACT_MATCH_TYPE,\n  EXISTS_MATCH_TYPE,\n  GREATER_THAN_MATCH_TYPE,\n  LESS_THAN_MATCH_TYPE,\n  SUBSTRING_MATCH_TYPE,\n];\n\nvar EVALUATORS_BY_MATCH_TYPE = {};\nEVALUATORS_BY_MATCH_TYPE[EXACT_MATCH_TYPE] = exactEvaluator;\nEVALUATORS_BY_MATCH_TYPE[EXISTS_MATCH_TYPE] = existsEvaluator;\nEVALUATORS_BY_MATCH_TYPE[GREATER_THAN_MATCH_TYPE] = greaterThanEvaluator;\nEVALUATORS_BY_MATCH_TYPE[LESS_THAN_MATCH_TYPE] = lessThanEvaluator;\nEVALUATORS_BY_MATCH_TYPE[SUBSTRING_MATCH_TYPE] = substringEvaluator;\n\n/**\n * Given a custom attribute audience condition and user attributes, evaluate the\n * condition against the attributes.\n * @param  {Object}     condition\n * @param  {Object}     userAttributes\n * @param  {Object}     logger\n * @return {?Boolean}   true/false if the given user attributes match/don't match the given condition,\n *                                      null if the given user attributes and condition can't be evaluated\n * TODO: Change to accept and object with named properties\n */\nexport var evaluate = function(condition, userAttributes, logger) {\n  var conditionMatch = condition.match;\n  if (typeof conditionMatch !== 'undefined' && MATCH_TYPES.indexOf(conditionMatch) === -1) {\n    logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.UNKNOWN_MATCH_TYPE, MODULE_NAME, JSON.stringify(condition)));\n    return null;\n  }\n\n  var attributeKey = condition.name;\n  if (!userAttributes.hasOwnProperty(attributeKey) && conditionMatch != EXISTS_MATCH_TYPE) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.MISSING_ATTRIBUTE_VALUE, MODULE_NAME, JSON.stringify(condition), attributeKey)\n    );\n    return null;\n  }\n\n  var evaluatorForMatch = EVALUATORS_BY_MATCH_TYPE[conditionMatch] || exactEvaluator;\n  return evaluatorForMatch(condition, userAttributes, logger);\n};\n\n/**\n * Returns true if the value is valid for exact conditions. Valid values include\n * strings, booleans, and numbers that aren't NaN, -Infinity, or Infinity.\n * @param value\n * @returns {Boolean}\n */\nfunction isValueTypeValidForExactConditions(value) {\n  return typeof value === 'string' || typeof value === 'boolean' || fns.isNumber(value);\n}\n\n/**\n * Evaluate the given exact match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @return  {?Boolean}  true if the user attribute value is equal (===) to the condition value,\n *                      false if the user attribute value is not equal (!==) to the condition value,\n *                      null if the condition value or user attribute value has an invalid type, or\n *                      if there is a mismatch between the user attribute type and the condition value\n *                      type\n */\nfunction exactEvaluator(condition, userAttributes, logger) {\n  var conditionValue = condition.value;\n  var conditionValueType = typeof conditionValue;\n  var conditionName = condition.name;\n  var userValue = userAttributes[conditionName];\n  var userValueType = typeof userValue;\n\n  if (\n    !isValueTypeValidForExactConditions(conditionValue) ||\n    (fns.isNumber(conditionValue) && !fns.isSafeInteger(conditionValue))\n  ) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (!isValueTypeValidForExactConditions(userValue) || conditionValueType !== userValueType) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  if (fns.isNumber(userValue) && !fns.isSafeInteger(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.OUT_OF_BOUNDS, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  return conditionValue === userValue;\n}\n\n/**\n * Evaluate the given exists match condition for the given user attributes\n * @param   {Object}  condition\n * @param   {Object}  userAttributes\n * @returns {Boolean} true if both:\n *                      1) the user attributes have a value for the given condition, and\n *                      2) the user attribute value is neither null nor undefined\n *                    Returns false otherwise\n */\nfunction existsEvaluator(condition, userAttributes) {\n  var userValue = userAttributes[condition.name];\n  return typeof userValue !== 'undefined' && userValue !== null;\n}\n\n/**\n * Evaluate the given greater than match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @returns {?Boolean}  true if the user attribute value is greater than the condition value,\n *                      false if the user attribute value is less than or equal to the condition value,\n *                      null if the condition value isn't a number or the user attribute value\n *                      isn't a number\n */\nfunction greaterThanEvaluator(condition, userAttributes, logger) {\n  var conditionName = condition.name;\n  var userValue = userAttributes[conditionName];\n  var userValueType = typeof userValue;\n  var conditionValue = condition.value;\n\n  if (!fns.isSafeInteger(conditionValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isNumber(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isSafeInteger(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.OUT_OF_BOUNDS, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  return userValue > conditionValue;\n}\n\n/**\n * Evaluate the given less than match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @returns {?Boolean}  true if the user attribute value is less than the condition value,\n *                      false if the user attribute value is greater than or equal to the condition value,\n *                      null if the condition value isn't a number or the user attribute value isn't a\n *                      number\n */\nfunction lessThanEvaluator(condition, userAttributes, logger) {\n  var conditionName = condition.name;\n  var userValue = userAttributes[condition.name];\n  var userValueType = typeof userValue;\n  var conditionValue = condition.value;\n\n  if (!fns.isSafeInteger(conditionValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isNumber(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isSafeInteger(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.OUT_OF_BOUNDS, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  return userValue < conditionValue;\n}\n\n/**\n * Evaluate the given substring match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @returns {?Boolean}  true if the condition value is a substring of the user attribute value,\n *                      false if the condition value is not a substring of the user attribute value,\n *                      null if the condition value isn't a string or the user attribute value\n *                      isn't a string\n */\nfunction substringEvaluator(condition, userAttributes, logger) {\n  var conditionName = condition.name;\n  var userValue = userAttributes[condition.name];\n  var userValueType = typeof userValue;\n  var conditionValue = condition.value;\n\n  if (typeof conditionValue !== 'string') {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (typeof userValue !== 'string') {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  return userValue.indexOf(conditionValue) !== -1;\n}\n\nexport default {\n  evaluate: evaluate,\n};\n","/**\n * Copyright 2016, 2018-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\nimport { getLogger } from '@optimizely/js-sdk-logging';\n\nimport fns from '../../utils/fns';\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n  ERROR_MESSAGES,\n} from '../../utils/enums';\nimport conditionTreeEvaluator from '../condition_tree_evaluator';\nimport customAttributeConditionEvaluator from '../custom_attribute_condition_evaluator';\n\nvar logger = getLogger();\nvar MODULE_NAME = 'AUDIENCE_EVALUATOR';\n\n/**\n * Construct an instance of AudienceEvaluator with given options\n * @param {Object=} UNSTABLE_conditionEvaluators A map of condition evaluators provided by the consumer. This enables matching\n *                                                   condition types which are not supported natively by the SDK. Note that built in\n *                                                   Optimizely evaluators cannot be overridden.\n * @constructor\n */\nfunction AudienceEvaluator(UNSTABLE_conditionEvaluators) {\n  this.typeToEvaluatorMap = fns.assign({}, UNSTABLE_conditionEvaluators, {\n    custom_attribute: customAttributeConditionEvaluator,\n  });\n}\n\n/**\n * Determine if the given user attributes satisfy the given audience conditions\n * @param  {Array|String|null|undefined}  audienceConditions    Audience conditions to match the user attributes against - can be an array\n *                                                              of audience IDs, a nested array of conditions, or a single leaf condition.\n *                                                              Examples: [\"5\", \"6\"], [\"and\", [\"or\", \"1\", \"2\"], \"3\"], \"1\"\n * @param  {Object}                       audiencesById         Object providing access to full audience objects for audience IDs\n *                                                              contained in audienceConditions. Keys should be audience IDs, values\n *                                                              should be full audience objects with conditions properties\n * @param  {Object}                       [userAttributes]      User attributes which will be used in determining if audience conditions\n *                                                              are met. If not provided, defaults to an empty object\n * @return {Boolean}                                            true if the user attributes match the given audience conditions, false\n *                                                              otherwise\n */\nAudienceEvaluator.prototype.evaluate = function(audienceConditions, audiencesById, userAttributes) {\n  // if there are no audiences, return true because that means ALL users are included in the experiment\n  if (!audienceConditions || audienceConditions.length === 0) {\n    return true;\n  }\n\n  if (!userAttributes) {\n    userAttributes = {};\n  }\n\n  var evaluateAudience = function(audienceId) {\n    var audience = audiencesById[audienceId];\n    if (audience) {\n      logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.EVALUATING_AUDIENCE, MODULE_NAME, audienceId, JSON.stringify(audience.conditions))\n      );\n      var result = conditionTreeEvaluator.evaluate(\n        audience.conditions,\n        this.evaluateConditionWithUserAttributes.bind(this, userAttributes)\n      );\n      var resultText = result === null ? 'UNKNOWN' : result.toString().toUpperCase();\n      logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.AUDIENCE_EVALUATION_RESULT, MODULE_NAME, audienceId, resultText));\n      return result;\n    }\n\n    return null;\n  }.bind(this);\n\n  return conditionTreeEvaluator.evaluate(audienceConditions, evaluateAudience) || false;\n};\n\n/**\n * Wrapper around evaluator.evaluate that is passed to the conditionTreeEvaluator.\n * Evaluates the condition provided given the user attributes if an evaluator has been defined for the condition type.\n * @param  {Object} userAttributes     A map of user attributes.\n * @param  {Object} condition          A single condition object to evaluate.\n * @return {Boolean|null}              true if the condition is satisfied, null if a matcher is not found.\n */\nAudienceEvaluator.prototype.evaluateConditionWithUserAttributes = function(userAttributes, condition) {\n  var evaluator = this.typeToEvaluatorMap[condition.type];\n  if (!evaluator) {\n    logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.UNKNOWN_CONDITION_TYPE, MODULE_NAME, JSON.stringify(condition)));\n    return null;\n  }\n  try {\n    return evaluator.evaluate(condition, userAttributes, logger);\n  } catch (err) {\n    logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.CONDITION_EVALUATOR_ERROR, MODULE_NAME, condition.type, err.message)\n    );\n  }\n  return null;\n};\n\nexport default AudienceEvaluator;\n","/**\n * Copyright 2018, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Validates provided value is a non-empty string\n * @param  {string}  input\n * @return {boolean} True for non-empty string, false otherwise\n */\nexport var validate = function(input) {\n  return typeof input === 'string' && input !== '';\n};\n\nexport default {\n  validate: validate,\n};\n","/****************************************************************************\n * Copyright 2017-2020 Optimizely, Inc. and contributors                    *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\nimport { sprintf } from'@optimizely/js-sdk-utils';\n\nimport bucketer from '../bucketer';\nimport enums from '../../utils/enums';\nimport fns from '../../utils/fns';\nimport projectConfig from '../project_config';\nimport AudienceEvaluator from '../audience_evaluator';\nimport stringValidator from '../../utils/string_value_validator';\n\nvar MODULE_NAME = 'DECISION_SERVICE';\nvar ERROR_MESSAGES = enums.ERROR_MESSAGES;\nvar LOG_LEVEL = enums.LOG_LEVEL;\nvar LOG_MESSAGES = enums.LOG_MESSAGES;\nvar DECISION_SOURCES = enums.DECISION_SOURCES;\nvar AUDIENCE_EVALUATION_TYPES = enums.AUDIENCE_EVALUATION_TYPES;\n\n/**\n * Optimizely's decision service that determines which variation of an experiment the user will be allocated to.\n *\n * The decision service contains all logic around how a user decision is made. This includes all of the following (in order):\n *   1. Checking experiment status\n *   2. Checking forced bucketing\n *   3. Checking whitelisting\n *   4. Checking user profile service for past bucketing decisions (sticky bucketing)\n *   5. Checking audience targeting\n *   6. Using Murmurhash3 to bucket the user.\n *\n * @constructor\n * @param   {Object} options\n * @param   {Object} options.userProfileService An instance of the user profile service for sticky bucketing.\n * @param   {Object} options.logger An instance of a logger to log messages.\n * @returns {Object}\n */\nfunction DecisionService(options) {\n  this.audienceEvaluator = new AudienceEvaluator(options.UNSTABLE_conditionEvaluators);\n  this.forcedVariationMap = {};\n  this.logger = options.logger;\n  this.userProfileService = options.userProfileService || null;\n}\n\n/**\n * Gets variation where visitor will be bucketed.\n * @param  {Object}      configObj      The parsed project configuration object\n * @param  {string}      experimentKey\n * @param  {string}      userId\n * @param  {Object}      attributes\n * @return {string|null} the variation the user is bucketed into.\n */\nDecisionService.prototype.getVariation = function(configObj, experimentKey, userId, attributes) {\n  // by default, the bucketing ID should be the user ID\n  var bucketingId = this._getBucketingId(userId, attributes);\n\n  if (!this.__checkIfExperimentIsActive(configObj, experimentKey)) {\n    return null;\n  }\n  var experiment = configObj.experimentKeyMap[experimentKey];\n  var forcedVariationKey = this.getForcedVariation(configObj, experimentKey, userId);\n  if (forcedVariationKey) {\n    return forcedVariationKey;\n  }\n\n  var variation = this.__getWhitelistedVariation(experiment, userId);\n  if (variation) {\n    return variation.key;\n  }\n\n  // check for sticky bucketing\n  var experimentBucketMap = this.__resolveExperimentBucketMap(userId, attributes);\n  variation = this.__getStoredVariation(configObj, experiment, userId, experimentBucketMap);\n  if (variation) {\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.RETURNING_STORED_VARIATION, MODULE_NAME, variation.key, experimentKey, userId)\n    );\n    return variation.key;\n  }\n\n  // Perform regular targeting and bucketing\n  if (!this.__checkIfUserIsInAudience(configObj, experimentKey, AUDIENCE_EVALUATION_TYPES.EXPERIMENT, userId, attributes, '')) {\n    var userDoesNotMeetConditionsLogMessage = sprintf(\n      LOG_MESSAGES.USER_NOT_IN_EXPERIMENT,\n      MODULE_NAME,\n      userId,\n      experimentKey\n    );\n    this.logger.log(LOG_LEVEL.INFO, userDoesNotMeetConditionsLogMessage);\n    return null;\n  }\n\n  var bucketerParams = this.__buildBucketerParams(configObj, experimentKey, bucketingId, userId);\n  var variationId = bucketer.bucket(bucketerParams);\n  variation = configObj.variationIdMap[variationId];\n  if (!variation) {\n    var userHasNoVariationLogMessage = sprintf(\n      LOG_MESSAGES.USER_HAS_NO_VARIATION,\n      MODULE_NAME,\n      userId,\n      experimentKey\n    );\n    this.logger.log(LOG_LEVEL.DEBUG, userHasNoVariationLogMessage);\n    return null;\n  }\n\n  var userInVariationLogMessage = sprintf(\n    LOG_MESSAGES.USER_HAS_VARIATION,\n    MODULE_NAME,\n    userId,\n    variation.key,\n    experimentKey\n  );\n  this.logger.log(LOG_LEVEL.INFO, userInVariationLogMessage);\n  // persist bucketing\n  this.__saveUserProfile(experiment, variation, userId, experimentBucketMap);\n\n  return variation.key;\n};\n\n/**\n * Merges attributes from attributes[STICKY_BUCKETING_KEY] and userProfileService\n * @param  {Object} attributes\n * @return {Object} finalized copy of experiment_bucket_map\n */\nDecisionService.prototype.__resolveExperimentBucketMap = function(userId, attributes) {\n  attributes = attributes || {};\n  var userProfile = this.__getUserProfile(userId) || {};\n  var attributeExperimentBucketMap = attributes[enums.CONTROL_ATTRIBUTES.STICKY_BUCKETING_KEY];\n  return fns.assign({}, userProfile.experiment_bucket_map, attributeExperimentBucketMap);\n};\n\n/**\n * Checks whether the experiment is running\n * @param  {Object}  configObj     The parsed project configuration object\n * @param  {string}  experimentKey Key of experiment being validated\n * @param  {string}  userId        ID of user\n * @return {boolean} True if experiment is running\n */\nDecisionService.prototype.__checkIfExperimentIsActive = function(configObj, experimentKey) {\n  if (!projectConfig.isActive(configObj, experimentKey)) {\n    var experimentNotRunningLogMessage = sprintf(LOG_MESSAGES.EXPERIMENT_NOT_RUNNING, MODULE_NAME, experimentKey);\n    this.logger.log(LOG_LEVEL.INFO, experimentNotRunningLogMessage);\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks if user is whitelisted into any variation and return that variation if so\n * @param  {Object} experiment\n * @param  {string} userId\n * @return {string|null} Forced variation if it exists for user ID, otherwise null\n */\nDecisionService.prototype.__getWhitelistedVariation = function(experiment, userId) {\n  if (experiment.forcedVariations && experiment.forcedVariations.hasOwnProperty(userId)) {\n    var forcedVariationKey = experiment.forcedVariations[userId];\n    if (experiment.variationKeyMap.hasOwnProperty(forcedVariationKey)) {\n      var forcedBucketingSucceededMessageLog = sprintf(\n        LOG_MESSAGES.USER_FORCED_IN_VARIATION,\n        MODULE_NAME,\n        userId,\n        forcedVariationKey\n      );\n      this.logger.log(LOG_LEVEL.INFO, forcedBucketingSucceededMessageLog);\n      return experiment.variationKeyMap[forcedVariationKey];\n    } else {\n      var forcedBucketingFailedMessageLog = sprintf(\n        LOG_MESSAGES.FORCED_BUCKETING_FAILED,\n        MODULE_NAME,\n        forcedVariationKey,\n        userId\n      );\n      this.logger.log(LOG_LEVEL.ERROR, forcedBucketingFailedMessageLog);\n      return null;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Checks whether the user is included in experiment audience\n * @param  {Object}  configObj            The parsed project configuration object\n * @param  {string}  experimentKey        Key of experiment being validated\n * @param  {string}  evaluationAttribute  String representing experiment key or rule\n * @param  {string}  userId               ID of user\n * @param  {Object}  attributes           Optional parameter for user's attributes\n * @param  {string}  loggingKey           String representing experiment key or rollout rule. To be used in log messages only.\n * @return {boolean} True if user meets audience conditions\n */\nDecisionService.prototype.__checkIfUserIsInAudience = function(configObj, experimentKey, evaluationAttribute, userId, attributes, loggingKey) {\n  var experimentAudienceConditions = projectConfig.getExperimentAudienceConditions(configObj, experimentKey);\n  var audiencesById = projectConfig.getAudiencesById(configObj);\n  this.logger.log(\n    LOG_LEVEL.DEBUG,\n    sprintf(\n      LOG_MESSAGES.EVALUATING_AUDIENCES_COMBINED,\n      MODULE_NAME,\n      evaluationAttribute,\n      loggingKey || experimentKey,\n      JSON.stringify(experimentAudienceConditions)\n    )\n  );\n  var result = this.audienceEvaluator.evaluate(experimentAudienceConditions, audiencesById, attributes);\n  this.logger.log(\n    LOG_LEVEL.INFO,\n    sprintf(\n      LOG_MESSAGES.AUDIENCE_EVALUATION_RESULT_COMBINED,\n      MODULE_NAME,\n      evaluationAttribute,\n      loggingKey || experimentKey,\n      result.toString().toUpperCase()\n    )\n  );\n\n  return result;\n};\n\n/**\n * Given an experiment key and user ID, returns params used in bucketer call\n * @param  configObj     The parsed project configuration object\n * @param  experimentKey Experiment key used for bucketer\n * @param  bucketingId   ID to bucket user into\n * @param  userId        ID of user to be bucketed\n * @return {Object}\n */\nDecisionService.prototype.__buildBucketerParams = function(configObj, experimentKey, bucketingId, userId) {\n  var bucketerParams = {};\n  bucketerParams.experimentKey = experimentKey;\n  bucketerParams.experimentId = projectConfig.getExperimentId(configObj, experimentKey);\n  bucketerParams.userId = userId;\n  bucketerParams.trafficAllocationConfig = projectConfig.getTrafficAllocation(configObj, experimentKey);\n  bucketerParams.experimentKeyMap = configObj.experimentKeyMap;\n  bucketerParams.groupIdMap = configObj.groupIdMap;\n  bucketerParams.variationIdMap = configObj.variationIdMap;\n  bucketerParams.logger = this.logger;\n  bucketerParams.bucketingId = bucketingId;\n  return bucketerParams;\n};\n\n/**\n * Pull the stored variation out of the experimentBucketMap for an experiment/userId\n * @param  {Object} configObj           The parsed project configuration object\n * @param  {Object} experiment\n * @param  {String} userId\n * @param  {Object} experimentBucketMap mapping experiment => { variation_id: <variationId> }\n * @return {Object} the stored variation or null if the user profile does not have one for the given experiment\n */\nDecisionService.prototype.__getStoredVariation = function(configObj, experiment, userId, experimentBucketMap) {\n  if (experimentBucketMap.hasOwnProperty(experiment.id)) {\n    var decision = experimentBucketMap[experiment.id];\n    var variationId = decision.variation_id;\n    if (configObj.variationIdMap.hasOwnProperty(variationId)) {\n      return configObj.variationIdMap[decision.variation_id];\n    } else {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.SAVED_VARIATION_NOT_FOUND, MODULE_NAME, userId, variationId, experiment.key)\n      );\n    }\n  }\n\n  return null;\n};\n\n/**\n * Get the user profile with the given user ID\n * @param  {string} userId\n * @return {Object|undefined} the stored user profile or undefined if one isn't found\n */\nDecisionService.prototype.__getUserProfile = function(userId) {\n  var userProfile = {\n    user_id: userId,\n    experiment_bucket_map: {},\n  };\n\n  if (!this.userProfileService) {\n    return userProfile;\n  }\n\n  try {\n    return this.userProfileService.lookup(userId);\n  } catch (ex) {\n    this.logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.USER_PROFILE_LOOKUP_ERROR, MODULE_NAME, userId, ex.message)\n    );\n  }\n};\n\n/**\n * Saves the bucketing decision to the user profile\n * @param {Object} userProfile\n * @param {Object} experiment\n * @param {Object} variation\n * @param {Object} experimentBucketMap\n */\nDecisionService.prototype.__saveUserProfile = function(experiment, variation, userId, experimentBucketMap) {\n  if (!this.userProfileService) {\n    return;\n  }\n\n  try {\n    experimentBucketMap[experiment.id] = {\n      variation_id: variation.id\n    };\n\n    this.userProfileService.save({\n      user_id: userId,\n      experiment_bucket_map: experimentBucketMap,\n    });\n\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.SAVED_VARIATION, MODULE_NAME, variation.key, experiment.key, userId)\n    );\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.USER_PROFILE_SAVE_ERROR, MODULE_NAME, userId, ex.message));\n  }\n};\n\n/**\n * Given a feature, user ID, and attributes, returns an object representing a\n * decision. If the user was bucketed into a variation for the given feature\n * and attributes, the returned decision object will have variation and\n * experiment properties (both objects), as well as a decisionSource property.\n * decisionSource indicates whether the decision was due to a rollout or an\n * experiment.\n * @param   {Object} configObj  The parsed project configuration object\n * @param   {Object} feature    A feature flag object from project configuration\n * @param   {String} userId     A string identifying the user, for bucketing\n * @param   {Object} attributes Optional user attributes\n * @return  {Object} An object with experiment, variation, and decisionSource\n * properties. If the user was not bucketed into a variation, the variation\n * property is null.\n */\nDecisionService.prototype.getVariationForFeature = function(configObj, feature, userId, attributes) {\n  var experimentDecision = this._getVariationForFeatureExperiment(configObj, feature, userId, attributes);\n  if (experimentDecision.variation !== null) {\n    return experimentDecision;\n  }\n\n  var rolloutDecision = this._getVariationForRollout(configObj, feature, userId, attributes);\n  if (rolloutDecision.variation !== null) {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.USER_IN_ROLLOUT, MODULE_NAME, userId, feature.key));\n    return rolloutDecision;\n  }\n\n  this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.USER_NOT_IN_ROLLOUT, MODULE_NAME, userId, feature.key));\n  return rolloutDecision;\n};\n\nDecisionService.prototype._getVariationForFeatureExperiment = function(configObj, feature, userId, attributes) {\n  var experiment = null;\n  var variationKey = null;\n\n  if (feature.hasOwnProperty('groupId')) {\n    var group = configObj.groupIdMap[feature.groupId];\n    if (group) {\n      experiment = this._getExperimentInGroup(configObj, group, userId);\n      if (experiment && feature.experimentIds.indexOf(experiment.id) !== -1) {\n        variationKey = this.getVariation(configObj, experiment.key, userId, attributes);\n      }\n    }\n  } else if (feature.experimentIds.length > 0) {\n    // If the feature does not have a group ID, then it can only be associated\n    // with one experiment, so we look at the first experiment ID only\n    experiment = projectConfig.getExperimentFromId(configObj, feature.experimentIds[0], this.logger);\n    if (experiment) {\n      variationKey = this.getVariation(configObj, experiment.key, userId, attributes);\n    }\n  } else {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.FEATURE_HAS_NO_EXPERIMENTS, MODULE_NAME, feature.key));\n  }\n\n  var variation = null;\n  if (variationKey !== null && experiment !== null) {\n    variation = experiment.variationKeyMap[variationKey];\n  }\n  return {\n    experiment: experiment,\n    variation: variation,\n    decisionSource: DECISION_SOURCES.FEATURE_TEST,\n  };\n};\n\nDecisionService.prototype._getExperimentInGroup = function(configObj, group, userId) {\n  var experimentId = bucketer.bucketUserIntoExperiment(group, userId, userId, this.logger);\n  if (experimentId) {\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP, MODULE_NAME, userId, experimentId, group.id)\n    );\n    var experiment = projectConfig.getExperimentFromId(configObj, experimentId, this.logger);\n    if (experiment) {\n      return experiment;\n    }\n  }\n\n  this.logger.log(\n    LOG_LEVEL.INFO,\n    sprintf(LOG_MESSAGES.USER_NOT_BUCKETED_INTO_ANY_EXPERIMENT_IN_GROUP, MODULE_NAME, userId, group.id)\n  );\n  return null;\n};\n\nDecisionService.prototype._getVariationForRollout = function(configObj, feature, userId, attributes) {\n  if (!feature.rolloutId) {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.NO_ROLLOUT_EXISTS, MODULE_NAME, feature.key));\n    return {\n      experiment: null,\n      variation: null,\n      decisionSource: DECISION_SOURCES.ROLLOUT,\n    };\n  }\n\n  var rollout = configObj.rolloutIdMap[feature.rolloutId];\n  if (!rollout) {\n    this.logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.INVALID_ROLLOUT_ID, MODULE_NAME, feature.rolloutId, feature.key)\n    );\n    return {\n      experiment: null,\n      variation: null,\n      decisionSource: DECISION_SOURCES.ROLLOUT,\n    };\n  }\n\n  if (rollout.experiments.length === 0) {\n    this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.ROLLOUT_HAS_NO_EXPERIMENTS, MODULE_NAME, feature.rolloutId));\n    return {\n      experiment: null,\n      variation: null,\n      decisionSource: DECISION_SOURCES.ROLLOUT,\n    };\n  }\n\n  var bucketingId = this._getBucketingId(userId, attributes);\n\n  // The end index is length - 1 because the last experiment is assumed to be\n  // \"everyone else\", which will be evaluated separately outside this loop\n  var endIndex = rollout.experiments.length - 1;\n  var index;\n  var rolloutRule;\n  var bucketerParams;\n  var variationId;\n  var variation;\n  var loggingKey;\n  for (index = 0; index < endIndex; index++) {\n    rolloutRule = configObj.experimentKeyMap[rollout.experiments[index].key];\n    loggingKey = index + 1;\n\n    if (!this.__checkIfUserIsInAudience(configObj, rolloutRule.key, AUDIENCE_EVALUATION_TYPES.RULE, userId, attributes, loggingKey)) {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_DOESNT_MEET_CONDITIONS_FOR_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n      );\n      continue;\n    }\n\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_MEETS_CONDITIONS_FOR_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n    );\n    bucketerParams = this.__buildBucketerParams(configObj, rolloutRule.key, bucketingId, userId);\n    variationId = bucketer.bucket(bucketerParams);\n    variation = configObj.variationIdMap[variationId];\n    if (variation) {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_BUCKETED_INTO_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n      );\n      return {\n        experiment: rolloutRule,\n        variation: variation,\n        decisionSource: DECISION_SOURCES.ROLLOUT,\n      };\n    } else {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_NOT_BUCKETED_INTO_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n      );\n      break;\n    }\n  }\n\n  var everyoneElseRule = configObj.experimentKeyMap[rollout.experiments[endIndex].key];\n  if (this.__checkIfUserIsInAudience(configObj, everyoneElseRule.key, AUDIENCE_EVALUATION_TYPES.RULE, userId, attributes, 'Everyone Else')) {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_MEETS_CONDITIONS_FOR_TARGETING_RULE, MODULE_NAME, userId, 'Everyone Else')\n    );\n    bucketerParams = this.__buildBucketerParams(configObj, everyoneElseRule.key, bucketingId, userId);\n    variationId = bucketer.bucket(bucketerParams);\n    variation = configObj.variationIdMap[variationId];\n    if (variation) {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_BUCKETED_INTO_EVERYONE_TARGETING_RULE, MODULE_NAME, userId)\n      );\n      return {\n        experiment: everyoneElseRule,\n        variation: variation,\n        decisionSource: DECISION_SOURCES.ROLLOUT,\n      };\n    } else {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_NOT_BUCKETED_INTO_EVERYONE_TARGETING_RULE, MODULE_NAME, userId)\n      );\n    }\n  }\n\n  return {\n    experiment: null,\n    variation: null,\n    decisionSource: DECISION_SOURCES.ROLLOUT,\n  };\n};\n\n/**\n * Get bucketing Id from user attributes.\n * @param {String} userId\n * @param {Object} attributes\n * @returns {String} Bucketing Id if it is a string type in attributes, user Id otherwise.\n */\nDecisionService.prototype._getBucketingId = function(userId, attributes) {\n  var bucketingId = userId;\n\n  // If the bucketing ID key is defined in attributes, than use that in place of the userID for the murmur hash key\n  if (\n    attributes != null &&\n    typeof attributes === 'object' &&\n    attributes.hasOwnProperty(enums.CONTROL_ATTRIBUTES.BUCKETING_ID)\n  ) {\n    if (typeof attributes[enums.CONTROL_ATTRIBUTES.BUCKETING_ID] === 'string') {\n      bucketingId = attributes[enums.CONTROL_ATTRIBUTES.BUCKETING_ID];\n      this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.VALID_BUCKETING_ID, MODULE_NAME, bucketingId));\n    } else {\n      this.logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.BUCKETING_ID_NOT_STRING, MODULE_NAME));\n    }\n  }\n\n  return bucketingId;\n};\n\n/**\n * Removes forced variation for given userId and experimentKey\n * @param  {string} userId         String representing the user id\n * @param  {number} experimentId   Number representing the experiment id\n * @param  {string} experimentKey  Key representing the experiment id\n * @throws If the user id is not valid or not in the forced variation map\n */\nDecisionService.prototype.removeForcedVariation = function(userId, experimentId, experimentKey) {\n  if (!userId) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_ID, MODULE_NAME));\n  }\n\n  if (this.forcedVariationMap.hasOwnProperty(userId)) {\n    delete this.forcedVariationMap[userId][experimentId];\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.VARIATION_REMOVED_FOR_USER, MODULE_NAME, experimentKey, userId)\n    );\n  } else {\n    throw new Error(sprintf(ERROR_MESSAGES.USER_NOT_IN_FORCED_VARIATION, MODULE_NAME, userId));\n  }\n};\n\n/**\n * Sets forced variation for given userId and experimentKey\n * @param  {string} userId        String representing the user id\n * @param  {number} experimentId  Number representing the experiment id\n * @param  {number} variationId   Number representing the variation id\n * @throws If the user id is not valid\n */\nDecisionService.prototype.__setInForcedVariationMap = function(userId, experimentId, variationId) {\n  if (this.forcedVariationMap.hasOwnProperty(userId)) {\n    this.forcedVariationMap[userId][experimentId] = variationId;\n  } else {\n    this.forcedVariationMap[userId] = {};\n    this.forcedVariationMap[userId][experimentId] = variationId;\n  }\n\n  this.logger.log(\n    LOG_LEVEL.DEBUG,\n    sprintf(LOG_MESSAGES.USER_MAPPED_TO_FORCED_VARIATION, MODULE_NAME, variationId, experimentId, userId)\n  );\n};\n\n/**\n * Gets the forced variation key for the given user and experiment.\n * @param  {Object} configObj        Object representing project configuration\n * @param  {string} experimentKey    Key for experiment.\n * @param  {string} userId           The user Id.\n * @return {string|null} Variation   The variation which the given user and experiment should be forced into.\n */\nDecisionService.prototype.getForcedVariation = function(configObj, experimentKey, userId) {\n  var experimentToVariationMap = this.forcedVariationMap[userId];\n  if (!experimentToVariationMap) {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.USER_HAS_NO_FORCED_VARIATION, MODULE_NAME, userId));\n    return null;\n  }\n\n  var experimentId;\n  try {\n    var experiment = projectConfig.getExperimentFromKey(configObj, experimentKey);\n    if (experiment.hasOwnProperty('id')) {\n      experimentId = experiment['id'];\n    } else {\n      // catching improperly formatted experiments\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(ERROR_MESSAGES.IMPROPERLY_FORMATTED_EXPERIMENT, MODULE_NAME, experimentKey)\n      );\n      return null;\n    }\n  } catch (ex) {\n    // catching experiment not in datafile\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    return null;\n  }\n\n  var variationId = experimentToVariationMap[experimentId];\n  if (!variationId) {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT, MODULE_NAME, experimentKey, userId)\n    );\n    return null;\n  }\n\n  var variationKey = projectConfig.getVariationKeyFromId(configObj, variationId);\n  if (variationKey) {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_HAS_FORCED_VARIATION, MODULE_NAME, variationKey, experimentKey, userId)\n    );\n  } else {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT, MODULE_NAME, experimentKey, userId)\n    );\n  }\n\n  return variationKey;\n};\n\n/**\n * Sets the forced variation for a user in a given experiment\n * @param  {Object} configObj      Object representing project configuration\n * @param  {string} experimentKey  Key for experiment.\n * @param  {string} userId         The user Id.\n * @param  {string} variationKey   Key for variation. If null, then clear the existing experiment-to-variation mapping\n * @return {boolean}               A boolean value that indicates if the set completed successfully.\n */\nDecisionService.prototype.setForcedVariation = function(configObj, experimentKey, userId, variationKey) {\n  if (variationKey != null && !stringValidator.validate(variationKey)) {\n    this.logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.INVALID_VARIATION_KEY, MODULE_NAME));\n    return false;\n  }\n\n  var experimentId;\n  try {\n    var experiment = projectConfig.getExperimentFromKey(configObj, experimentKey);\n    if (experiment.hasOwnProperty('id')) {\n      experimentId = experiment['id'];\n    } else {\n      // catching improperly formatted experiments\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(ERROR_MESSAGES.IMPROPERLY_FORMATTED_EXPERIMENT, MODULE_NAME, experimentKey)\n      );\n      return false;\n    }\n  } catch (ex) {\n    // catching experiment not in datafile\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    return false;\n  }\n\n  if (variationKey == null) {\n    try {\n      this.removeForcedVariation(userId, experimentId, experimentKey, this.logger);\n      return true;\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.ERROR, ex.message);\n      return false;\n    }\n  }\n\n  var variationId = projectConfig.getVariationIdFromExperimentAndVariationKey(configObj, experimentKey, variationKey);\n\n  if (!variationId) {\n    this.logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.NO_VARIATION_FOR_EXPERIMENT_KEY, MODULE_NAME, variationKey, experimentKey)\n    );\n    return false;\n  }\n\n  try {\n    this.__setInForcedVariationMap(userId, experimentId, variationId);\n    return true;\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    return false;\n  }\n};\n\n/**\n * Creates an instance of the DecisionService.\n * @param  {Object} options               Configuration options\n * @param  {Object} options.userProfileService\n * @param  {Object} options.logger\n * @return {Object} An instance of the DecisionService\n */\nexport var createDecisionService = function(options) {\n  return new DecisionService(options);\n};\n\nexport default {\n  createDecisionService: createDecisionService,\n};\n","/**\n * Copyright 2017, 2019-2020 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n  RESERVED_EVENT_KEYWORDS,\n} from '../enums';\n\n/**\n * Provides utility method for parsing event tag values\n */\nvar MODULE_NAME = 'EVENT_TAG_UTILS';\nvar REVENUE_EVENT_METRIC_NAME = RESERVED_EVENT_KEYWORDS.REVENUE;\nvar VALUE_EVENT_METRIC_NAME = RESERVED_EVENT_KEYWORDS.VALUE;\n\n/**\n * Grab the revenue value from the event tags. \"revenue\" is a reserved keyword.\n * @param {Object} eventTags\n * @param {Object} logger\n * @return {Integer|null}\n */\nexport var getRevenueValue = function(eventTags, logger) {\n  if (eventTags && eventTags.hasOwnProperty(REVENUE_EVENT_METRIC_NAME)) {\n    var rawValue = eventTags[REVENUE_EVENT_METRIC_NAME];\n    var parsedRevenueValue = parseInt(rawValue, 10);\n    if (isNaN(parsedRevenueValue)) {\n      logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.FAILED_TO_PARSE_REVENUE, MODULE_NAME, rawValue));\n      return null;\n    }\n    logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.PARSED_REVENUE_VALUE, MODULE_NAME, parsedRevenueValue));\n    return parsedRevenueValue;\n  }\n  return null;\n};\n\n/**\n * Grab the event value from the event tags. \"value\" is a reserved keyword.\n * @param {Object} eventTags\n * @param {Object} logger\n * @return {Number|null}\n */\nexport var getEventValue = function(eventTags, logger) {\n  if (eventTags && eventTags.hasOwnProperty(VALUE_EVENT_METRIC_NAME)) {\n    var rawValue = eventTags[VALUE_EVENT_METRIC_NAME];\n    var parsedEventValue = parseFloat(rawValue);\n    if (isNaN(parsedEventValue)) {\n      logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.FAILED_TO_PARSE_VALUE, MODULE_NAME, rawValue));\n      return null;\n    }\n    logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.PARSED_NUMERIC_VALUE, MODULE_NAME, parsedEventValue));\n    return parsedEventValue;\n  }\n  return null;\n};\n\nexport default {\n  getRevenueValue: getRevenueValue,\n  getEventValue: getEventValue,\n};\n","/**\n * Copyright 2016-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fns from '../../utils/fns';\nimport enums from '../../utils/enums';\nimport projectConfig from '../project_config';\nimport eventTagUtils from '../../utils/event_tag_utils';\nimport attributeValidator from '../../utils/attributes_validator';\n\nvar ACTIVATE_EVENT_KEY = 'campaign_activated';\nvar CUSTOM_ATTRIBUTE_FEATURE_TYPE = 'custom';\nvar ENDPOINT = 'https://logx.optimizely.com/v1/events';\nvar HTTP_VERB = 'POST';\n\n/**\n * Get params which are used same in both conversion and impression events\n * @param  {Object} options.attributes    Object representing user attributes and values which need to be recorded\n * @param  {string} options.clientEngine  The client we are using: node or javascript\n * @param  {string} options.clientVersion The version of the client\n * @param  {Object} options.configObj     Object representing project configuration, including datafile information and mappings for quick lookup\n * @param  {string} options.userId        ID for user\n * @param  {Object} options.Logger        logger\n * @return {Object}                       Common params with properties that are used in both conversion and impression events\n */\nfunction getCommonEventParams(options) {\n  var attributes = options.attributes;\n  var configObj = options.configObj;\n  var anonymize_ip = configObj.anonymizeIP;\n  var botFiltering = configObj.botFiltering;\n  if (anonymize_ip === null || anonymize_ip === undefined) {\n    anonymize_ip = false;\n  }\n\n  var visitor = {\n    snapshots: [],\n    visitor_id: options.userId,\n    attributes: [],\n  };\n\n  var commonParams = {\n    account_id: configObj.accountId,\n    project_id: configObj.projectId,\n    visitors: [visitor],\n    revision: configObj.revision,\n    client_name: options.clientEngine,\n    client_version: options.clientVersion,\n    anonymize_ip: anonymize_ip,\n    enrich_decisions: true,\n  };\n\n  // Omit attribute values that are not supported by the log endpoint.\n  Object.keys(attributes || {}).forEach(function(attributeKey) {\n    var attributeValue = attributes[attributeKey];\n    if (attributeValidator.isAttributeValid(attributeKey, attributeValue)) {\n      var attributeId = projectConfig.getAttributeId(options.configObj, attributeKey, options.logger);\n      if (attributeId) {\n        commonParams.visitors[0].attributes.push({\n          entity_id: attributeId,\n          key: attributeKey,\n          type: CUSTOM_ATTRIBUTE_FEATURE_TYPE,\n          value: attributes[attributeKey],\n        });\n      }\n    }\n  });\n\n  if (typeof botFiltering === 'boolean') {\n    commonParams.visitors[0].attributes.push({\n      entity_id: enums.CONTROL_ATTRIBUTES.BOT_FILTERING,\n      key: enums.CONTROL_ATTRIBUTES.BOT_FILTERING,\n      type: CUSTOM_ATTRIBUTE_FEATURE_TYPE,\n      value: botFiltering,\n    });\n  }\n  return commonParams;\n}\n\n/**\n * Creates object of params specific to impression events\n * @param  {Object} configObj    Object representing project configuration\n * @param  {string} experimentId ID of experiment for which impression needs to be recorded\n * @param  {string} variationId  ID for variation which would be presented to user\n * @return {Object}              Impression event params\n */\nfunction getImpressionEventParams(configObj, experimentId, variationId) {\n  var impressionEventParams = {\n    decisions: [\n      {\n        campaign_id: projectConfig.getLayerId(configObj, experimentId),\n        experiment_id: experimentId,\n        variation_id: variationId,\n      },\n    ],\n    events: [\n      {\n        entity_id: projectConfig.getLayerId(configObj, experimentId),\n        timestamp: fns.currentTimestamp(),\n        key: ACTIVATE_EVENT_KEY,\n        uuid: fns.uuid(),\n      },\n    ],\n  };\n  return impressionEventParams;\n}\n\n/**\n * Creates object of params specific to conversion events\n * @param  {Object} configObj                 Object representing project configuration\n * @param  {string} eventKey                  Event key representing the event which needs to be recorded\n * @param  {Object} eventTags                 Values associated with the event.\n * @param  {Object} logger                    Logger object\n * @return {Object}                           Conversion event params\n */\nfunction getVisitorSnapshot(configObj, eventKey, eventTags, logger) {\n  var snapshot = {\n    events: [],\n  };\n\n  var eventDict = {\n    entity_id: projectConfig.getEventId(configObj, eventKey),\n    timestamp: fns.currentTimestamp(),\n    uuid: fns.uuid(),\n    key: eventKey,\n  };\n\n  if (eventTags) {\n    var revenue = eventTagUtils.getRevenueValue(eventTags, logger);\n    if (revenue !== null) {\n      eventDict[enums.RESERVED_EVENT_KEYWORDS.REVENUE] = revenue;\n    }\n\n    var eventValue = eventTagUtils.getEventValue(eventTags, logger);\n    if (eventValue !== null) {\n      eventDict[enums.RESERVED_EVENT_KEYWORDS.VALUE] = eventValue;\n    }\n\n    eventDict['tags'] = eventTags;\n  }\n  snapshot.events.push(eventDict);\n\n  return snapshot;\n}\n\n/**\n * Create impression event params to be sent to the logging endpoint\n * @param  {Object} options               Object containing values needed to build impression event\n * @param  {Object} options.attributes    Object representing user attributes and values which need to be recorded\n * @param  {string} options.clientEngine  The client we are using: node or javascript\n * @param  {string} options.clientVersion The version of the client\n * @param  {Object} options.configObj     Object representing project configuration, including datafile information and mappings for quick lookup\n * @param  {string} options.experimentId  Experiment for which impression needs to be recorded\n * @param  {string} options.userId        ID for user\n * @param  {string} options.variationId   ID for variation which would be presented to user\n * @return {Object}                       Params to be used in impression event logging endpoint call\n */\nexport var getImpressionEvent = function(options) {\n  var impressionEvent = {\n    httpVerb: HTTP_VERB,\n  };\n\n  var commonParams = getCommonEventParams(options);\n  impressionEvent.url = ENDPOINT;\n\n  var impressionEventParams = getImpressionEventParams(options.configObj, options.experimentId, options.variationId);\n  // combine Event params into visitor obj\n  commonParams.visitors[0].snapshots.push(impressionEventParams);\n\n  impressionEvent.params = commonParams;\n\n  return impressionEvent;\n};\n\n/**\n * Create conversion event params to be sent to the logging endpoint\n * @param  {Object} options                           Object containing values needed to build conversion event\n * @param  {Object} options.attributes                Object representing user attributes and values which need to be recorded\n * @param  {string} options.clientEngine              The client we are using: node or javascript\n * @param  {string} options.clientVersion             The version of the client\n * @param  {Object} options.configObj                 Object representing project configuration, including datafile information and mappings for quick lookup\n * @param  {string} options.eventKey                  Event key representing the event which needs to be recorded\n * @param  {Object} options.eventTags                 Object with event-specific tags\n * @param  {Object} options.logger                    Logger object\n * @param  {string} options.userId                    ID for user\n * @return {Object}                                   Params to be used in conversion event logging endpoint call\n */\nexport var getConversionEvent = function(options) {\n  var conversionEvent = {\n    httpVerb: HTTP_VERB,\n  };\n\n  var commonParams = getCommonEventParams(options);\n  conversionEvent.url = ENDPOINT;\n\n  var snapshot = getVisitorSnapshot(options.configObj, options.eventKey, options.eventTags, options.logger);\n\n  commonParams.visitors[0].snapshots = [snapshot];\n  conversionEvent.params = commonParams;\n\n  return conversionEvent;\n};\n\nexport default {\n  getConversionEvent: getConversionEvent,\n  getImpressionEvent: getImpressionEvent,\n};\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getLogger } from '@optimizely/js-sdk-logging';\n\nimport fns from '../../utils/fns';\nimport projectConfig from '../project_config';\nimport eventTagUtils from '../../utils/event_tag_utils';\nimport attributesValidator from'../../utils/attributes_validator';\n\nvar logger = getLogger('EVENT_BUILDER');\n\n/**\n * Creates an ImpressionEvent object from decision data\n * @param {Object} config\n * @param {Object} config.configObj\n * @param {String} config.experimentKey\n * @param {String} config.variationKey\n * @param {String} config.userId\n * @param {Object} config.userAttributes\n * @param {String} config.clientEngine\n * @param {String} config.clientVersion\n * @return {Object} an ImpressionEvent object\n */\nexport var buildImpressionEvent = function(config) {\n  var configObj = config.configObj;\n  var experimentKey = config.experimentKey;\n  var variationKey = config.variationKey;\n  var userId = config.userId;\n  var userAttributes = config.userAttributes;\n  var clientEngine = config.clientEngine;\n  var clientVersion = config.clientVersion;\n\n  var variationId = projectConfig.getVariationIdFromExperimentAndVariationKey(configObj, experimentKey, variationKey);\n  var experimentId = projectConfig.getExperimentId(configObj, experimentKey);\n  var layerId = projectConfig.getLayerId(configObj, experimentId);\n\n  return {\n    type: 'impression',\n    timestamp: fns.currentTimestamp(),\n    uuid: fns.uuid(),\n\n    user: {\n      id: userId,\n      attributes: buildVisitorAttributes(configObj, userAttributes),\n    },\n\n    context: {\n      accountId: configObj.accountId,\n      projectId: configObj.projectId,\n      revision: configObj.revision,\n      clientName: clientEngine,\n      clientVersion: clientVersion,\n      anonymizeIP: configObj.anonymizeIP || false,\n      botFiltering: configObj.botFiltering,\n    },\n\n    layer: {\n      id: layerId,\n    },\n\n    experiment: {\n      id: experimentId,\n      key: experimentKey,\n    },\n\n    variation: {\n      id: variationId,\n      key: variationKey,\n    },\n  };\n};\n\n/**\n * Creates a ConversionEvent object from track\n * @param {Object} config\n * @param {Object} config.configObj\n * @param {String} config.eventKey\n * @param {Object|undefined} config.eventTags\n * @param {String} config.userId\n * @param {Object} config.userAttributes\n * @param {String} config.clientEngine\n * @param {String} config.clientVersion\n * @return {Object} a ConversionEvent object\n */\nexport var buildConversionEvent = function(config) {\n  var configObj = config.configObj;\n  var userId = config.userId;\n  var userAttributes = config.userAttributes;\n  var clientEngine = config.clientEngine;\n  var clientVersion = config.clientVersion;\n\n  var eventKey = config.eventKey;\n  var eventTags = config.eventTags;\n  var eventId = projectConfig.getEventId(configObj, eventKey);\n\n  return {\n    type: 'conversion',\n    timestamp: fns.currentTimestamp(),\n    uuid: fns.uuid(),\n\n    user: {\n      id: userId,\n      attributes: buildVisitorAttributes(configObj, userAttributes),\n    },\n\n    context: {\n      accountId: configObj.accountId,\n      projectId: configObj.projectId,\n      revision: configObj.revision,\n      clientName: clientEngine,\n      clientVersion: clientVersion,\n      anonymizeIP: configObj.anonymizeIP || false,\n      botFiltering: configObj.botFiltering,\n    },\n\n    event: {\n      id: eventId,\n      key: eventKey,\n    },\n\n    revenue: eventTagUtils.getRevenueValue(eventTags, logger),\n    value: eventTagUtils.getEventValue(eventTags, logger),\n    tags: eventTags,\n  };\n};\n\nfunction buildVisitorAttributes(configObj, attributes) {\n  var builtAttributes = [];\n  // Omit attribute values that are not supported by the log endpoint.\n  Object.keys(attributes || {}).forEach(function(attributeKey) {\n    var attributeValue = attributes[attributeKey];\n    if (attributesValidator.isAttributeValid(attributeKey, attributeValue)) {\n      var attributeId = projectConfig.getAttributeId(configObj, attributeKey, logger);\n      if (attributeId) {\n        builtAttributes.push({\n          entityId: attributeId,\n          key: attributeKey,\n          value: attributes[attributeKey],\n        });\n      }\n    }\n  });\n\n  return builtAttributes;\n}\n","/**\n * Copyright 2017, 2020 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides utility method for validating that event tags user has provided are valid\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport { ERROR_MESSAGES } from '../enums';\n\nvar MODULE_NAME = 'EVENT_TAGS_VALIDATOR';\n\n/**\n * Validates user's provided event tags\n * @param  {Object}  event tags\n * @return {boolean} True if event tags are valid\n * @throws If event tags are not valid\n */\nexport var validate = function(eventTags) {\n  if (typeof eventTags === 'object' && !Array.isArray(eventTags) && eventTags !== null) {\n    return true;\n  } else {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EVENT_TAGS, MODULE_NAME));\n  }\n}\n\nexport default {\n  validate: validate,\n}\n","/**\n * Copyright 2017, 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf, objectValues } from '@optimizely/js-sdk-utils';\n\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n  NOTIFICATION_TYPES,\n} from '../../utils/enums';\n\nvar MODULE_NAME = 'NOTIFICATION_CENTER';\n\n/**\n * NotificationCenter allows registration and triggering of callback functions using\n * notification event types defined in NOTIFICATION_TYPES of utils/enums/index.js:\n * - ACTIVATE: An impression event will be sent to Optimizely.\n * - TRACK a conversion event will be sent to Optimizely\n * @constructor\n * @param {Object} options\n * @param {Object} options.logger An instance of a logger to log messages with\n * @param {object} options.errorHandler An instance of errorHandler to handle any unexpected error\n * @returns {Object}\n */\nfunction NotificationCenter(options) {\n  this.logger = options.logger;\n  this.errorHandler = options.errorHandler;\n  this.__notificationListeners = {};\n\n  objectValues(NOTIFICATION_TYPES).forEach(\n    function(notificationTypeEnum) {\n      this.__notificationListeners[notificationTypeEnum] = [];\n    }.bind(this)\n  );\n  this.__listenerId = 1;\n}\n\n/**\n * Add a notification callback to the notification center\n * @param {string} notificationType One of the values from NOTIFICATION_TYPES in utils/enums/index.js\n * @param {Function} callback Function that will be called when the event is triggered\n * @returns {number} If the callback was successfully added, returns a listener ID which can be used\n * to remove the callback by calling removeNotificationListener. The ID is a number greater than 0.\n * If there was an error and the listener was not added, addNotificationListener returns -1. This\n * can happen if the first argument is not a valid notification type, or if the same callback\n * function was already added as a listener by a prior call to this function.\n */\nNotificationCenter.prototype.addNotificationListener = function(notificationType, callback) {\n  try {\n    var isNotificationTypeValid = objectValues(NOTIFICATION_TYPES).indexOf(notificationType) > -1;\n    if (!isNotificationTypeValid) {\n      return -1;\n    }\n\n    if (!this.__notificationListeners[notificationType]) {\n      this.__notificationListeners[notificationType] = [];\n    }\n\n    var callbackAlreadyAdded = false;\n    (this.__notificationListeners[notificationType] || []).forEach(function(listenerEntry) {\n      if (listenerEntry.callback === callback) {\n        callbackAlreadyAdded = true;\n        return false;\n      }\n    });\n    if (callbackAlreadyAdded) {\n      return -1;\n    }\n\n    this.__notificationListeners[notificationType].push({\n      id: this.__listenerId,\n      callback: callback,\n    });\n\n    var returnId = this.__listenerId;\n    this.__listenerId += 1;\n    return returnId;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return -1;\n  }\n};\n\n/**\n * Remove a previously added notification callback\n * @param {number} listenerId ID of listener to be removed\n * @returns {boolean} Returns true if the listener was found and removed, and false\n * otherwise.\n */\nNotificationCenter.prototype.removeNotificationListener = function(listenerId) {\n  try {\n    var indexToRemove;\n    var typeToRemove;\n\n    Object.keys(this.__notificationListeners).some(\n      function(notificationType) {\n        var listenersForType = this.__notificationListeners[notificationType];\n        (listenersForType || []).every(function(listenerEntry, i) {\n          if (listenerEntry.id === listenerId) {\n            indexToRemove = i;\n            typeToRemove = notificationType;\n            return false;\n          }\n          return true;\n        });\n        if (indexToRemove !== undefined && typeToRemove !== undefined) {\n          return true;\n        }\n      }.bind(this)\n    );\n\n    if (indexToRemove !== undefined && typeToRemove !== undefined) {\n      this.__notificationListeners[typeToRemove].splice(indexToRemove, 1);\n      return true;\n    }\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n  return false;\n};\n\n/**\n * Removes all previously added notification listeners, for all notification types\n */\nNotificationCenter.prototype.clearAllNotificationListeners = function() {\n  try {\n    objectValues(NOTIFICATION_TYPES).forEach(\n      function(notificationTypeEnum) {\n        this.__notificationListeners[notificationTypeEnum] = [];\n      }.bind(this)\n    );\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n};\n\n/**\n * Remove all previously added notification listeners for the argument type\n * @param {string} notificationType One of NOTIFICATION_TYPES\n */\nNotificationCenter.prototype.clearNotificationListeners = function(notificationType) {\n  try {\n    this.__notificationListeners[notificationType] = [];\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n};\n\n/**\n * Fires notifications for the argument type. All registered callbacks for this type will be\n * called. The notificationData object will be passed on to callbacks called.\n * @param {string} notificationType One of NOTIFICATION_TYPES\n * @param {Object} notificationData Will be passed to callbacks called\n */\nNotificationCenter.prototype.sendNotifications = function(notificationType, notificationData) {\n  try {\n    (this.__notificationListeners[notificationType] || []).forEach(\n      function(listenerEntry) {\n        var callback = listenerEntry.callback;\n        try {\n          callback(notificationData);\n        } catch (ex) {\n          this.logger.log(\n            LOG_LEVEL.ERROR,\n            sprintf(LOG_MESSAGES.NOTIFICATION_LISTENER_EXCEPTION, MODULE_NAME, notificationType, ex.message)\n          );\n        }\n      }.bind(this)\n    );\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n};\n\n/**\n * Create an instance of NotificationCenter\n * @param {Object} options\n * @param {Object} options.logger An instance of a logger to log messages with\n * @returns {Object} An instance of NotificationCenter\n */\nexport var createNotificationCenter = function(options) {\n  return new NotificationCenter(options);\n};\n\nexport default {\n  createNotificationCenter: createNotificationCenter,\n};\n","/****************************************************************************\n * Copyright 2017, 2020, Optimizely, Inc. and contributors                  *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\n/**\n * Provides utility method for validating that the given user profile service implementation is valid.\n */\n\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport { ERROR_MESSAGES } from '../enums';\nvar MODULE_NAME = 'USER_PROFILE_SERVICE_VALIDATOR';\n\n/**\n * Validates user's provided user profile service instance\n * @param  {Object}  userProfileServiceInstance\n * @return {boolean} True if the instance is valid\n * @throws If the instance is not valid\n */\nexport var validate = function(userProfileServiceInstance) {\n  if (typeof userProfileServiceInstance.lookup !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, \"Missing function 'lookup'\"));\n  } else if (typeof userProfileServiceInstance.save !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, \"Missing function 'save'\"));\n  }\n  return true;\n};\n\nexport default {\n  validate: validate,\n};\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_UPDATE_INTERVAL = 5 * 60 * 1000; // 5 minutes\nexports.MIN_UPDATE_INTERVAL = 1000;\nexports.DEFAULT_URL_TEMPLATE = \"https://cdn.optimizely.com/datafiles/%s.json\";\nexports.DEFAULT_AUTHENTICATED_URL_TEMPLATE = \"https://config.optimizely.com/datafiles/auth/%s.json\";\nexports.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT = [0, 8, 16, 32, 64, 128, 256, 512];\nexports.REQUEST_TIMEOUT_MS = 60 * 1000; // 1 minute\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar logger = js_sdk_logging_1.getLogger('DatafileManager');\nvar GET_METHOD = 'GET';\nvar READY_STATE_DONE = 4;\nfunction parseHeadersFromXhr(req) {\n    var allHeadersString = req.getAllResponseHeaders();\n    if (allHeadersString === null) {\n        return {};\n    }\n    var headerLines = allHeadersString.split('\\r\\n');\n    var headers = {};\n    headerLines.forEach(function (headerLine) {\n        var separatorIndex = headerLine.indexOf(': ');\n        if (separatorIndex > -1) {\n            var headerName = headerLine.slice(0, separatorIndex);\n            var headerValue = headerLine.slice(separatorIndex + 2);\n            if (headerValue.length > 0) {\n                headers[headerName] = headerValue;\n            }\n        }\n    });\n    return headers;\n}\nfunction setHeadersInXhr(headers, req) {\n    Object.keys(headers).forEach(function (headerName) {\n        var header = headers[headerName];\n        req.setRequestHeader(headerName, header);\n    });\n}\nfunction makeGetRequest(reqUrl, headers) {\n    var req = new XMLHttpRequest();\n    var responsePromise = new Promise(function (resolve, reject) {\n        req.open(GET_METHOD, reqUrl, true);\n        setHeadersInXhr(headers, req);\n        req.onreadystatechange = function () {\n            if (req.readyState === READY_STATE_DONE) {\n                var statusCode = req.status;\n                if (statusCode === 0) {\n                    reject(new Error('Request error'));\n                    return;\n                }\n                var headers_1 = parseHeadersFromXhr(req);\n                var resp = {\n                    statusCode: req.status,\n                    body: req.responseText,\n                    headers: headers_1,\n                };\n                resolve(resp);\n            }\n        };\n        req.timeout = config_1.REQUEST_TIMEOUT_MS;\n        req.ontimeout = function () {\n            logger.error('Request timed out');\n        };\n        req.send();\n    });\n    return {\n        responsePromise: responsePromise,\n        abort: function () {\n            req.abort();\n        },\n    };\n}\nexports.makeGetRequest = makeGetRequest;\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.listeners = {};\n        this.listenerId = 1;\n    }\n    EventEmitter.prototype.on = function (eventName, listener) {\n        var _this = this;\n        if (!this.listeners[eventName]) {\n            this.listeners[eventName] = {};\n        }\n        var currentListenerId = String(this.listenerId);\n        this.listenerId++;\n        this.listeners[eventName][currentListenerId] = listener;\n        return function () {\n            if (_this.listeners[eventName]) {\n                delete _this.listeners[eventName][currentListenerId];\n            }\n        };\n    };\n    EventEmitter.prototype.emit = function (eventName, arg) {\n        var listeners = this.listeners[eventName];\n        if (listeners) {\n            Object.keys(listeners).forEach(function (listenerId) {\n                var listener = listeners[listenerId];\n                listener(arg);\n            });\n        }\n    };\n    EventEmitter.prototype.removeAllListeners = function () {\n        this.listeners = {};\n    };\n    return EventEmitter;\n}());\nexports.default = EventEmitter;\n// TODO: Create a typed event emitter for use in TS only (not JS)\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nfunction randomMilliseconds() {\n    return Math.round(Math.random() * 1000);\n}\nvar BackoffController = /** @class */ (function () {\n    function BackoffController() {\n        this.errorCount = 0;\n    }\n    BackoffController.prototype.getDelay = function () {\n        if (this.errorCount === 0) {\n            return 0;\n        }\n        var baseWaitSeconds = config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT[Math.min(config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT.length - 1, this.errorCount)];\n        return baseWaitSeconds * 1000 + randomMilliseconds();\n    };\n    BackoffController.prototype.countError = function () {\n        if (this.errorCount < config_1.BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT.length - 1) {\n            this.errorCount++;\n        }\n    };\n    BackoffController.prototype.reset = function () {\n        this.errorCount = 0;\n    };\n    return BackoffController;\n}());\nexports.default = BackoffController;\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar js_sdk_logging_1 = require(\"@optimizely/js-sdk-logging\");\nvar js_sdk_utils_1 = require(\"@optimizely/js-sdk-utils\");\nvar eventEmitter_1 = __importDefault(require(\"./eventEmitter\"));\nvar config_1 = require(\"./config\");\nvar backoffController_1 = __importDefault(require(\"./backoffController\"));\nvar logger = js_sdk_logging_1.getLogger('DatafileManager');\nvar UPDATE_EVT = 'update';\nfunction isValidUpdateInterval(updateInterval) {\n    return updateInterval >= config_1.MIN_UPDATE_INTERVAL;\n}\nfunction isSuccessStatusCode(statusCode) {\n    return statusCode >= 200 && statusCode < 400;\n}\nvar noOpKeyValueCache = {\n    get: function () {\n        return Promise.resolve(null);\n    },\n    set: function () {\n        return Promise.resolve();\n    },\n    contains: function () {\n        return Promise.resolve(false);\n    },\n    remove: function () {\n        return Promise.resolve();\n    },\n};\nvar HttpPollingDatafileManager = /** @class */ (function () {\n    function HttpPollingDatafileManager(config) {\n        var _this = this;\n        var configWithDefaultsApplied = __assign({}, this.getConfigDefaults(), config);\n        var datafile = configWithDefaultsApplied.datafile, _a = configWithDefaultsApplied.autoUpdate, autoUpdate = _a === void 0 ? false : _a, sdkKey = configWithDefaultsApplied.sdkKey, _b = configWithDefaultsApplied.updateInterval, updateInterval = _b === void 0 ? config_1.DEFAULT_UPDATE_INTERVAL : _b, _c = configWithDefaultsApplied.urlTemplate, urlTemplate = _c === void 0 ? config_1.DEFAULT_URL_TEMPLATE : _c, _d = configWithDefaultsApplied.cache, cache = _d === void 0 ? noOpKeyValueCache : _d;\n        this.cache = cache;\n        this.cacheKey = 'opt-datafile-' + sdkKey;\n        this.isReadyPromiseSettled = false;\n        this.readyPromiseResolver = function () { };\n        this.readyPromiseRejecter = function () { };\n        this.readyPromise = new Promise(function (resolve, reject) {\n            _this.readyPromiseResolver = resolve;\n            _this.readyPromiseRejecter = reject;\n        });\n        if (datafile) {\n            this.currentDatafile = datafile;\n            if (!sdkKey) {\n                this.resolveReadyPromise();\n            }\n        }\n        else {\n            this.currentDatafile = null;\n        }\n        this.isStarted = false;\n        this.datafileUrl = js_sdk_utils_1.sprintf(urlTemplate, sdkKey);\n        this.emitter = new eventEmitter_1.default();\n        this.autoUpdate = autoUpdate;\n        if (isValidUpdateInterval(updateInterval)) {\n            this.updateInterval = updateInterval;\n        }\n        else {\n            logger.warn('Invalid updateInterval %s, defaulting to %s', updateInterval, config_1.DEFAULT_UPDATE_INTERVAL);\n            this.updateInterval = config_1.DEFAULT_UPDATE_INTERVAL;\n        }\n        this.currentTimeout = null;\n        this.currentRequest = null;\n        this.backoffController = new backoffController_1.default();\n        this.syncOnCurrentRequestComplete = false;\n    }\n    HttpPollingDatafileManager.prototype.get = function () {\n        return this.currentDatafile;\n    };\n    HttpPollingDatafileManager.prototype.start = function () {\n        if (!this.isStarted) {\n            logger.debug('Datafile manager started');\n            this.isStarted = true;\n            this.backoffController.reset();\n            this.setDatafileFromCacheIfAvailable();\n            this.syncDatafile();\n        }\n    };\n    HttpPollingDatafileManager.prototype.stop = function () {\n        logger.debug('Datafile manager stopped');\n        this.isStarted = false;\n        if (this.currentTimeout) {\n            clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n        this.emitter.removeAllListeners();\n        if (this.currentRequest) {\n            this.currentRequest.abort();\n            this.currentRequest = null;\n        }\n        return Promise.resolve();\n    };\n    HttpPollingDatafileManager.prototype.onReady = function () {\n        return this.readyPromise;\n    };\n    HttpPollingDatafileManager.prototype.on = function (eventName, listener) {\n        return this.emitter.on(eventName, listener);\n    };\n    HttpPollingDatafileManager.prototype.onRequestRejected = function (err) {\n        if (!this.isStarted) {\n            return;\n        }\n        this.backoffController.countError();\n        if (err instanceof Error) {\n            logger.error('Error fetching datafile: %s', err.message, err);\n        }\n        else if (typeof err === 'string') {\n            logger.error('Error fetching datafile: %s', err);\n        }\n        else {\n            logger.error('Error fetching datafile');\n        }\n    };\n    HttpPollingDatafileManager.prototype.onRequestResolved = function (response) {\n        if (!this.isStarted) {\n            return;\n        }\n        if (typeof response.statusCode !== 'undefined' && isSuccessStatusCode(response.statusCode)) {\n            this.backoffController.reset();\n        }\n        else {\n            this.backoffController.countError();\n        }\n        this.trySavingLastModified(response.headers);\n        var datafile = this.getNextDatafileFromResponse(response);\n        if (datafile !== null) {\n            logger.info('Updating datafile from response');\n            this.currentDatafile = datafile;\n            this.cache.set(this.cacheKey, datafile);\n            if (!this.isReadyPromiseSettled) {\n                this.resolveReadyPromise();\n            }\n            else {\n                var datafileUpdate = {\n                    datafile: datafile,\n                };\n                this.emitter.emit(UPDATE_EVT, datafileUpdate);\n            }\n        }\n    };\n    HttpPollingDatafileManager.prototype.onRequestComplete = function () {\n        if (!this.isStarted) {\n            return;\n        }\n        this.currentRequest = null;\n        if (!this.isReadyPromiseSettled && !this.autoUpdate) {\n            // We will never resolve ready, so reject it\n            this.rejectReadyPromise(new Error('Failed to become ready'));\n        }\n        if (this.autoUpdate && this.syncOnCurrentRequestComplete) {\n            this.syncDatafile();\n        }\n        this.syncOnCurrentRequestComplete = false;\n    };\n    HttpPollingDatafileManager.prototype.syncDatafile = function () {\n        var _this = this;\n        var headers = {};\n        if (this.lastResponseLastModified) {\n            headers['if-modified-since'] = this.lastResponseLastModified;\n        }\n        logger.debug('Making datafile request to url %s with headers: %s', this.datafileUrl, function () { return JSON.stringify(headers); });\n        this.currentRequest = this.makeGetRequest(this.datafileUrl, headers);\n        var onRequestComplete = function () {\n            _this.onRequestComplete();\n        };\n        var onRequestResolved = function (response) {\n            _this.onRequestResolved(response);\n        };\n        var onRequestRejected = function (err) {\n            _this.onRequestRejected(err);\n        };\n        this.currentRequest.responsePromise\n            .then(onRequestResolved, onRequestRejected)\n            .then(onRequestComplete, onRequestComplete);\n        if (this.autoUpdate) {\n            this.scheduleNextUpdate();\n        }\n    };\n    HttpPollingDatafileManager.prototype.resolveReadyPromise = function () {\n        this.readyPromiseResolver();\n        this.isReadyPromiseSettled = true;\n    };\n    HttpPollingDatafileManager.prototype.rejectReadyPromise = function (err) {\n        this.readyPromiseRejecter(err);\n        this.isReadyPromiseSettled = true;\n    };\n    HttpPollingDatafileManager.prototype.scheduleNextUpdate = function () {\n        var _this = this;\n        var currentBackoffDelay = this.backoffController.getDelay();\n        var nextUpdateDelay = Math.max(currentBackoffDelay, this.updateInterval);\n        logger.debug('Scheduling sync in %s ms', nextUpdateDelay);\n        this.currentTimeout = setTimeout(function () {\n            if (_this.currentRequest) {\n                _this.syncOnCurrentRequestComplete = true;\n            }\n            else {\n                _this.syncDatafile();\n            }\n        }, nextUpdateDelay);\n    };\n    HttpPollingDatafileManager.prototype.getNextDatafileFromResponse = function (response) {\n        logger.debug('Response status code: %s', response.statusCode);\n        if (typeof response.statusCode === 'undefined') {\n            return null;\n        }\n        if (response.statusCode === 304) {\n            return null;\n        }\n        if (isSuccessStatusCode(response.statusCode)) {\n            return this.tryParsingBodyAsJSON(response.body);\n        }\n        return null;\n    };\n    HttpPollingDatafileManager.prototype.tryParsingBodyAsJSON = function (body) {\n        var parseResult;\n        try {\n            parseResult = JSON.parse(body);\n        }\n        catch (err) {\n            logger.error('Error parsing response body: %s', err.message, err);\n            return null;\n        }\n        var datafileObj = null;\n        if (typeof parseResult === 'object' && parseResult !== null) {\n            datafileObj = parseResult;\n        }\n        else {\n            logger.error('Error parsing response body: was not an object');\n        }\n        return datafileObj;\n    };\n    HttpPollingDatafileManager.prototype.trySavingLastModified = function (headers) {\n        var lastModifiedHeader = headers['last-modified'] || headers['Last-Modified'];\n        if (typeof lastModifiedHeader !== 'undefined') {\n            this.lastResponseLastModified = lastModifiedHeader;\n            logger.debug('Saved last modified header value from response: %s', this.lastResponseLastModified);\n        }\n    };\n    HttpPollingDatafileManager.prototype.setDatafileFromCacheIfAvailable = function () {\n        var _this = this;\n        this.cache.get(this.cacheKey).then(function (datafile) {\n            if (_this.isStarted && !_this.isReadyPromiseSettled && datafile) {\n                logger.debug('Using datafile from cache');\n                _this.currentDatafile = datafile;\n                _this.resolveReadyPromise();\n            }\n        });\n    };\n    return HttpPollingDatafileManager;\n}());\nexports.default = HttpPollingDatafileManager;\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar browserRequest_1 = require(\"./browserRequest\");\nvar httpPollingDatafileManager_1 = __importDefault(require(\"./httpPollingDatafileManager\"));\nvar BrowserDatafileManager = /** @class */ (function (_super) {\n    __extends(BrowserDatafileManager, _super);\n    function BrowserDatafileManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrowserDatafileManager.prototype.makeGetRequest = function (reqUrl, headers) {\n        return browserRequest_1.makeGetRequest(reqUrl, headers);\n    };\n    BrowserDatafileManager.prototype.getConfigDefaults = function () {\n        return {\n            autoUpdate: false,\n        };\n    };\n    return BrowserDatafileManager;\n}(httpPollingDatafileManager_1.default));\nexports.default = BrowserDatafileManager;\n","\"use strict\";\n/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar browserDatafileManager_1 = require(\"./browserDatafileManager\");\nexports.HttpPollingDatafileManager = browserDatafileManager_1.default;\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFeatureExperiment } from '../project_config';\n\n// Get Experiment Ids which are part of rollouts\nfunction getRolloutExperimentIds(rollouts) {\n  return (rollouts || []).reduce(function(experimentIds, rollout) {\n    rollout.experiments.forEach(function(e) {\n      experimentIds[e.id] = true;\n    });\n    return experimentIds;\n  }, {});\n}\n\n// Gets Map of all experiments except rollouts\nfunction getExperimentsMap(configObj) {\n  var rolloutExperimentIds = getRolloutExperimentIds(configObj.rollouts);\n  var featureVariablesMap = (configObj.featureFlags || []).reduce(function(resultMap, feature) {\n    resultMap[feature.id] = feature.variables;\n    return resultMap;\n  }, {});\n  return (configObj.experiments || []).reduce(function(experiments, experiment) {\n    // skip experiments that are part of a rollout\n    if (!rolloutExperimentIds[experiment.id]) {\n      experiments[experiment.key] = {\n        id: experiment.id,\n        key: experiment.key,\n        variationsMap: (experiment.variations || []).reduce(function(variations, variation) {\n          variations[variation.key] = {\n            id: variation.id,\n            key: variation.key,\n            variablesMap: getMergedVariablesMap(configObj, variation, experiment.id, featureVariablesMap),\n          };\n          if (isFeatureExperiment(configObj, experiment.id)) {\n            variations[variation.key].featureEnabled = variation.featureEnabled;\n          }\n          return variations;\n        }, {}),\n      };\n    }\n    return experiments;\n  }, {});\n}\n\n// Merges feature key and type from feature variables to variation variables.\nfunction getMergedVariablesMap(configObj, variation, experimentId, featureVariablesMap) {\n  var featureId = configObj.experimentFeatureMap[experimentId];\n  var variablesObject = {};\n  if (featureId) {\n    var experimentFeatureVariables = featureVariablesMap[featureId];\n    // Temporary variation variables map to get values to merge.\n    var tempVariablesIdMap = (variation.variables || []).reduce(function(variablesMap, variable) {\n      variablesMap[variable.id] = {\n        id: variable.id,\n        value: variable.value,\n      };\n      return variablesMap;\n    }, {});\n    variablesObject = (experimentFeatureVariables || []).reduce(function(variablesMap, featureVariable) {\n      var variationVariable = tempVariablesIdMap[featureVariable.id];\n      var variableValue =\n        variation.featureEnabled && variationVariable ? variationVariable.value : featureVariable.defaultValue;\n      variablesMap[featureVariable.key] = {\n        id: featureVariable.id,\n        key: featureVariable.key,\n        type: featureVariable.type,\n        value: variableValue,\n      };\n      return variablesMap;\n    }, {});\n  }\n  return variablesObject;\n}\n\n// Gets map of all experiments\nfunction getFeaturesMap(configObj, allExperiments) {\n  return (configObj.featureFlags || []).reduce(function(features, feature) {\n    features[feature.key] = {\n      id: feature.id,\n      key: feature.key,\n      experimentsMap: (feature.experimentIds || []).reduce(function(experiments, experimentId) {\n        var experimentKey = configObj.experimentIdMap[experimentId].key;\n        experiments[experimentKey] = allExperiments[experimentKey];\n        return experiments;\n      }, {}),\n      variablesMap: (feature.variables || []).reduce(function(variables, variable) {\n        variables[variable.key] = {\n          id: variable.id,\n          key: variable.key,\n          type: variable.type,\n          value: variable.defaultValue,\n        };\n        return variables;\n      }, {}),\n    };\n    return features;\n  }, {});\n}\n\nexport var getOptimizelyConfig = function(configObj) {\n  // Fetch all feature variables from feature flags to merge them with variation variables\n  var experimentsMap = getExperimentsMap(configObj);\n  return {\n    experimentsMap: experimentsMap,\n    featuresMap: getFeaturesMap(configObj, experimentsMap),\n    revision: configObj.revision,\n  };\n};\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\nimport { getLogger } from '@optimizely/js-sdk-logging';\nimport { HttpPollingDatafileManager } from '@optimizely/js-sdk-datafile-manager';\n\nimport fns from '../../utils/fns';\nimport { ERROR_MESSAGES } from '../../utils/enums';\nimport projectConfig from '../../core/project_config';\nimport { getOptimizelyConfig } from '../optimizely_config';\nimport configValidator from '../../utils/config_validator';\n\nvar logger = getLogger();\nvar MODULE_NAME = 'PROJECT_CONFIG_MANAGER';\n\n/**\n * Return an error message derived from a thrown value. If the thrown value is\n * an error, return the error's message property. Otherwise, return a default\n * provided by the second argument.\n * @param {*} maybeError\n * @param {String=} defaultMessage\n * @return {String}\n */\nfunction getErrorMessage(maybeError, defaultMessage) {\n  if (maybeError instanceof Error) {\n    return maybeError.message;\n  }\n  return defaultMessage || 'Unknown error';\n}\n\n/**\n * ProjectConfigManager provides project config objects via its methods\n * getConfig and onUpdate. It uses a DatafileManager to fetch datafiles. It is\n * responsible for parsing and validating datafiles, and converting datafile\n * JSON objects into project config objects.\n * @param {Object}         config\n * @param {Object|string=} config.datafile\n * @param {Object=}        config.datafileOptions\n * @param {Object=}        config.jsonSchemaValidator\n * @param {string=}        config.sdkKey\n */\nexport function ProjectConfigManager(config) {\n  try {\n    this.__initialize(config);\n  } catch (ex) {\n    logger.error(ex);\n    this.__updateListeners = [];\n    this.__configObj = null;\n    this.__optimizelyConfigObj = null;\n    this.__readyPromise = Promise.resolve({\n      success: false,\n      reason: getErrorMessage(ex, 'Error in initialize'),\n    });\n  }\n}\n\n/**\n * Initialize internal properties including __updateListeners, __configObj, and\n * __readyPromise, using the argument config. Create and subscribe to a datafile\n * manager if appropriate.\n * @param {Object}         config\n * @param {Object|string=} config.datafile\n * @param {Object=}        config.datafileOptions\n * @param {Object=}        config.jsonSchemaValidator\n * @param {string=}        config.sdkKey\n */\nProjectConfigManager.prototype.__initialize = function(config) {\n  this.__updateListeners = [];\n  this.jsonSchemaValidator = config.jsonSchemaValidator;\n\n  if (!config.datafile && !config.sdkKey) {\n    this.__configObj = null;\n    var datafileAndSdkKeyMissingError = new Error(sprintf(ERROR_MESSAGES.DATAFILE_AND_SDK_KEY_MISSING, MODULE_NAME));\n    this.__readyPromise = Promise.resolve({\n      success: false,\n      reason: getErrorMessage(datafileAndSdkKeyMissingError),\n    });\n    logger.error(datafileAndSdkKeyMissingError);\n    return;\n  }\n\n  var initialDatafile = this.__getDatafileFromConfig(config);\n  var projectConfigCreationEx;\n  if (initialDatafile) {\n    try {\n      this.__configObj = projectConfig.tryCreatingProjectConfig({\n        datafile: initialDatafile,\n        jsonSchemaValidator: this.jsonSchemaValidator,\n        logger: logger,\n      });\n      this.__optimizelyConfigObj = getOptimizelyConfig(this.__configObj);\n    } catch (ex) {\n      logger.error(ex);\n      projectConfigCreationEx = ex;\n      this.__configObj = null;\n    }\n  } else {\n    this.__configObj = null;\n  }\n\n  if (config.sdkKey) {\n    var datafileManagerConfig = {\n      sdkKey: config.sdkKey,\n    };\n    if (this.__validateDatafileOptions(config.datafileOptions)) {\n      fns.assign(datafileManagerConfig, config.datafileOptions);\n    }\n    if (initialDatafile && this.__configObj) {\n      datafileManagerConfig.datafile = initialDatafile;\n    }\n    this.datafileManager = new HttpPollingDatafileManager(datafileManagerConfig);\n    this.datafileManager.start();\n    this.__readyPromise = this.datafileManager\n      .onReady()\n      .then(this.__onDatafileManagerReadyFulfill.bind(this), this.__onDatafileManagerReadyReject.bind(this));\n    this.datafileManager.on('update', this.__onDatafileManagerUpdate.bind(this));\n  } else if (this.__configObj) {\n    this.__readyPromise = Promise.resolve({\n      success: true,\n    });\n  } else {\n    this.__readyPromise = Promise.resolve({\n      success: false,\n      reason: getErrorMessage(projectConfigCreationEx, 'Invalid datafile'),\n    });\n  }\n};\n\n/**\n * Respond to datafile manager's onReady promise becoming fulfilled.\n * If there are validation or parse failures using the datafile provided by\n * DatafileManager, ProjectConfigManager's ready promise is resolved with an\n * unsuccessful result. Otherwise, ProjectConfigManager updates its own project\n * config object from the new datafile, and its ready promise is resolved with a\n * successful result.\n */\nProjectConfigManager.prototype.__onDatafileManagerReadyFulfill = function() {\n  var newDatafile = this.datafileManager.get();\n  var newConfigObj;\n  try {\n    newConfigObj = projectConfig.tryCreatingProjectConfig({\n      datafile: newDatafile,\n      jsonSchemaValidator: this.jsonSchemaValidator,\n      logger: logger,\n    });\n  } catch (ex) {\n    logger.error(ex);\n    return {\n      success: false,\n      reason: getErrorMessage(ex),\n    };\n  }\n  this.__handleNewConfigObj(newConfigObj);\n  return {\n    success: true,\n  };\n};\n\n/**\n * Respond to datafile manager's onReady promise becoming rejected.\n * When DatafileManager's onReady promise is rejected, there is no possibility\n * of obtaining a datafile. In this case, ProjectConfigManager's ready promise\n * is fulfilled with an unsuccessful result.\n * @param {Error} err\n */\nProjectConfigManager.prototype.__onDatafileManagerReadyReject = function(err) {\n  return {\n    success: false,\n    reason: getErrorMessage(err, 'Failed to become ready'),\n  };\n};\n\n/**\n * Respond to datafile manager's update event. Attempt to update own config\n * object using latest datafile from datafile manager. Call own registered\n * update listeners if successful\n */\nProjectConfigManager.prototype.__onDatafileManagerUpdate = function() {\n  var newDatafile = this.datafileManager.get();\n  var newConfigObj;\n  try {\n    newConfigObj = projectConfig.tryCreatingProjectConfig({\n      datafile: newDatafile,\n      jsonSchemaValidator: this.jsonSchemaValidator,\n      logger: logger,\n    });\n  } catch (ex) {\n    logger.error(ex);\n  }\n  if (newConfigObj) {\n    this.__handleNewConfigObj(newConfigObj);\n  }\n};\n\n/**\n * If the argument config contains a valid datafile object or string,\n * return a datafile object based on that provided datafile, otherwise\n * return null.\n * @param {Object}         config\n * @param {Object|string=} config.datafile\n * @return {Object|null}\n */\nProjectConfigManager.prototype.__getDatafileFromConfig = function(config) {\n  var initialDatafile = null;\n  try {\n    if (config.datafile) {\n      configValidator.validateDatafile(config.datafile);\n      if (typeof config.datafile === 'string' || config.datafile instanceof String) {\n        initialDatafile = JSON.parse(config.datafile);\n      } else {\n        initialDatafile = config.datafile;\n      }\n    }\n  } catch (ex) {\n    logger.error(ex);\n  }\n  return initialDatafile;\n};\n\n/**\n * Validate user-provided datafileOptions. It should be an object or undefined.\n * @param {*} datafileOptions\n * @returns {boolean}\n */\nProjectConfigManager.prototype.__validateDatafileOptions = function(datafileOptions) {\n  if (typeof datafileOptions === 'undefined') {\n    return true;\n  }\n\n  if (typeof datafileOptions === 'object') {\n    return datafileOptions !== null;\n  }\n\n  return false;\n};\n\n/**\n * Update internal project config object to be argument object when the argument\n * object has a different revision than the current internal project config\n * object. If the internal object is updated, call update listeners.\n * @param {Object} newConfigObj\n */\nProjectConfigManager.prototype.__handleNewConfigObj = function(newConfigObj) {\n  var oldConfigObj = this.__configObj;\n\n  var oldRevision = oldConfigObj ? oldConfigObj.revision : 'null';\n  if (oldRevision === newConfigObj.revision) {\n    return;\n  }\n\n  this.__configObj = newConfigObj;\n  this.__optimizelyConfigObj = getOptimizelyConfig(newConfigObj);\n\n  this.__updateListeners.forEach(function(listener) {\n    listener(newConfigObj);\n  });\n};\n\n/**\n * Returns the current project config object, or null if no project config object\n * is available\n * @return {Object|null}\n */\nProjectConfigManager.prototype.getConfig = function() {\n  return this.__configObj;\n};\n\n/**\n * Returns the optimizely config object\n * @return {Object}\n */\nProjectConfigManager.prototype.getOptimizelyConfig = function() {\n  return this.__optimizelyConfigObj;\n};\n\n/**\n * Returns a Promise that fulfills when this ProjectConfigManager is ready to\n * use (meaning it has a valid project config object), or has failed to become\n * ready.\n *\n * Failure can be caused by the following:\n * - At least one of sdkKey or datafile is not provided in the constructor argument\n * - The provided datafile was invalid\n * - The datafile provided by the datafile manager was invalid\n * - The datafile manager failed to fetch a datafile\n *\n * The returned Promise is fulfilled with a result object containing these\n * properties:\n *    - success (boolean): True if this instance is ready to use with a valid\n *                         project config object, or false if it failed to\n *                         become ready\n *    - reason (string=):  If success is false, this is a string property with\n *                         an explanatory message.\n * @return {Promise}\n */\nProjectConfigManager.prototype.onReady = function() {\n  return this.__readyPromise;\n};\n\n/**\n * Add a listener for project config updates. The listener will be called\n * whenever this instance has a new project config object available.\n * Returns a dispose function that removes the subscription\n * @param {Function} listener\n * @return {Function}\n */\nProjectConfigManager.prototype.onUpdate = function(listener) {\n  this.__updateListeners.push(listener);\n  return function() {\n    var index = this.__updateListeners.indexOf(listener);\n    if (index > -1) {\n      this.__updateListeners.splice(index, 1);\n    }\n  }.bind(this);\n};\n\n/**\n * Stop the internal datafile manager and remove all update listeners\n */\nProjectConfigManager.prototype.stop = function() {\n  if (this.datafileManager) {\n    this.datafileManager.stop();\n  }\n  this.__updateListeners = [];\n};\n\nexport default {\n  ProjectConfigManager: ProjectConfigManager,\n};\n","/****************************************************************************\n * Copyright 2016-2020, Optimizely, Inc. and contributors                   *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\nimport { sprintf, objectValues } from '@optimizely/js-sdk-utils';\nimport * as eventProcessor from '@optimizely/js-sdk-event-processor';\n\nimport fns from '../utils/fns'\nimport { validate } from '../utils/attributes_validator';\nimport decisionService from '../core/decision_service';\nimport enums from '../utils/enums';\nimport { getImpressionEvent, getConversionEvent } from '../core/event_builder/index.js';\nimport { buildConversionEvent, buildImpressionEvent } from '../core/event_builder/event_helpers';\nimport eventTagsValidator from '../utils/event_tags_validator';\nimport notificationCenter from '../core/notification_center';\nimport projectConfig from '../core/project_config';\nimport userProfileServiceValidator from '../utils/user_profile_service_validator';\nimport stringValidator from '../utils/string_value_validator';\nimport projectConfigManager from '../core/project_config/project_config_manager';\n\nvar ERROR_MESSAGES = enums.ERROR_MESSAGES;\nvar LOG_LEVEL = enums.LOG_LEVEL;\nvar LOG_MESSAGES = enums.LOG_MESSAGES;\nvar MODULE_NAME = 'OPTIMIZELY';\nvar DECISION_SOURCES = enums.DECISION_SOURCES;\nvar FEATURE_VARIABLE_TYPES = enums.FEATURE_VARIABLE_TYPES;\nvar DECISION_NOTIFICATION_TYPES = enums.DECISION_NOTIFICATION_TYPES;\nvar NOTIFICATION_TYPES = enums.NOTIFICATION_TYPES;\n\nvar DEFAULT_ONREADY_TIMEOUT = 30000;\n\n/**\n * The Optimizely class\n * @param {Object} config\n * @param {string} config.clientEngine\n * @param {string} config.clientVersion\n * @param {Object} config.datafile\n * @param {Object} config.errorHandler\n * @param {Object} config.eventDispatcher\n * @param {Object} config.logger\n * @param {Object} config.userProfileService\n * @param {Object} config.eventBatchSize\n * @param {Object} config.eventFlushInterval\n */\nfunction Optimizely(config) {\n  var clientEngine = config.clientEngine;\n  if (enums.VALID_CLIENT_ENGINES.indexOf(clientEngine) === -1) {\n    config.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.INVALID_CLIENT_ENGINE, MODULE_NAME, clientEngine)\n    );\n    clientEngine = enums.NODE_CLIENT_ENGINE;\n  }\n\n  this.clientEngine = clientEngine;\n  this.clientVersion = config.clientVersion || enums.NODE_CLIENT_VERSION;\n  this.errorHandler = config.errorHandler;\n  this.eventDispatcher = config.eventDispatcher;\n  this.__isOptimizelyConfigValid = config.isValidInstance;\n  this.logger = config.logger;\n\n  this.projectConfigManager = new projectConfigManager.ProjectConfigManager({\n    datafile: config.datafile,\n    datafileOptions: config.datafileOptions,\n    jsonSchemaValidator: config.jsonSchemaValidator,\n    sdkKey: config.sdkKey,\n  });\n\n  this.__disposeOnUpdate = this.projectConfigManager.onUpdate(\n    function(configObj) {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.UPDATED_OPTIMIZELY_CONFIG, MODULE_NAME, configObj.revision, configObj.projectId)\n      );\n      this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.OPTIMIZELY_CONFIG_UPDATE);\n    }.bind(this)\n  );\n\n  var projectConfigManagerReadyPromise = this.projectConfigManager.onReady();\n\n  var userProfileService = null;\n  if (config.userProfileService) {\n    try {\n      if (userProfileServiceValidator.validate(config.userProfileService)) {\n        userProfileService = config.userProfileService;\n        this.logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.VALID_USER_PROFILE_SERVICE, MODULE_NAME));\n      }\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.WARNING, ex.message);\n    }\n  }\n\n  this.decisionService = decisionService.createDecisionService({\n    userProfileService: userProfileService,\n    logger: this.logger,\n    UNSTABLE_conditionEvaluators: config.UNSTABLE_conditionEvaluators,\n  });\n\n  this.notificationCenter = notificationCenter.createNotificationCenter({\n    logger: this.logger,\n    errorHandler: this.errorHandler,\n  });\n\n  this.eventProcessor = new eventProcessor.LogTierV1EventProcessor({\n    dispatcher: this.eventDispatcher,\n    flushInterval: config.eventFlushInterval,\n    batchSize: config.eventBatchSize,\n    maxQueueSize: config.eventMaxQueueSize,\n    notificationCenter: this.notificationCenter,\n  });\n\n  var eventProcessorStartedPromise = this.eventProcessor.start();\n\n  this.__readyPromise = Promise.all([projectConfigManagerReadyPromise, eventProcessorStartedPromise]).then(function(promiseResults) {\n    // Only return status from project config promise because event processor promise does not return any status.\n    return promiseResults[0];\n  })\n\n  this.__readyTimeouts = {};\n  this.__nextReadyTimeoutId = 0;\n}\n\n/**\n * Returns a truthy value if this instance currently has a valid project config\n * object, and the initial configuration object that was passed into the\n * constructor was also valid.\n * @return {*}\n */\nOptimizely.prototype.__isValidInstance = function() {\n  return this.__isOptimizelyConfigValid && this.projectConfigManager.getConfig();\n};\n\n/**\n * Buckets visitor and sends impression event to Optimizely.\n * @param  {string}      experimentKey\n * @param  {string}      userId\n * @param  {Object}      attributes\n * @return {string|null} variation key\n */\nOptimizely.prototype.activate = function(experimentKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'activate'));\n      return null;\n    }\n\n    if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId }, attributes)) {\n      return this.__notActivatingExperiment(experimentKey, userId);\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return null;\n    }\n\n    try {\n      var variationKey = this.getVariation(experimentKey, userId, attributes);\n      if (variationKey === null) {\n        return this.__notActivatingExperiment(experimentKey, userId);\n      }\n\n      // If experiment is not set to 'Running' status, log accordingly and return variation key\n      if (!projectConfig.isRunning(configObj, experimentKey)) {\n        var shouldNotDispatchActivateLogMessage = sprintf(\n          LOG_MESSAGES.SHOULD_NOT_DISPATCH_ACTIVATE,\n          MODULE_NAME,\n          experimentKey\n        );\n        this.logger.log(LOG_LEVEL.DEBUG, shouldNotDispatchActivateLogMessage);\n        return variationKey;\n      }\n\n      this._sendImpressionEvent(experimentKey, variationKey, userId, attributes);\n\n      return variationKey;\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.ERROR, ex.message);\n      var failedActivationLogMessage = sprintf(\n        LOG_MESSAGES.NOT_ACTIVATING_USER,\n        MODULE_NAME,\n        userId,\n        experimentKey\n      );\n      this.logger.log(LOG_LEVEL.INFO, failedActivationLogMessage);\n      this.errorHandler.handleError(ex);\n      return null;\n    }\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Create an impression event and call the event dispatcher's dispatch method to\n * send this event to Optimizely. Then use the notification center to trigger\n * any notification listeners for the ACTIVATE notification type.\n * @param {string} experimentKey  Key of experiment that was activated\n * @param {string} variationKey   Key of variation shown in experiment that was activated\n * @param {string} userId         ID of user to whom the variation was shown\n * @param {Object} attributes     Optional user attributes\n */\nOptimizely.prototype._sendImpressionEvent = function(experimentKey, variationKey, userId, attributes) {\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return;\n  }\n\n  var impressionEvent = buildImpressionEvent({\n    experimentKey: experimentKey,\n    variationKey: variationKey,\n    userId: userId,\n    userAttributes: attributes,\n    clientEngine: this.clientEngine,\n    clientVersion: this.clientVersion,\n    configObj: configObj,\n  });\n  // TODO is it okay to not pass a projectConfig as second argument\n  this.eventProcessor.process(impressionEvent);\n  this.__emitNotificationCenterActivate(experimentKey, variationKey, userId, attributes);\n};\n\n/**\n * Emit the ACTIVATE notification on the notificationCenter\n * @param {string} experimentKey  Key of experiment that was activated\n * @param {string} variationKey   Key of variation shown in experiment that was activated\n * @param {string} userId         ID of user to whom the variation was shown\n * @param {Object} attributes     Optional user attributes\n */\nOptimizely.prototype.__emitNotificationCenterActivate = function(experimentKey, variationKey, userId, attributes) {\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return;\n  }\n\n  var variationId = projectConfig.getVariationIdFromExperimentAndVariationKey(configObj, experimentKey, variationKey);\n  var experimentId = projectConfig.getExperimentId(configObj, experimentKey);\n  var impressionEventOptions = {\n    attributes: attributes,\n    clientEngine: this.clientEngine,\n    clientVersion: this.clientVersion,\n    configObj: configObj,\n    experimentId: experimentId,\n    userId: userId,\n    variationId: variationId,\n    logger: this.logger,\n  };\n  var impressionEvent = getImpressionEvent(impressionEventOptions);\n  var experiment = configObj.experimentKeyMap[experimentKey];\n  var variation;\n  if (experiment && experiment.variationKeyMap) {\n    variation = experiment.variationKeyMap[variationKey];\n  }\n  this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.ACTIVATE, {\n    experiment: experiment,\n    userId: userId,\n    attributes: attributes,\n    variation: variation,\n    logEvent: impressionEvent,\n  });\n};\n\n/**\n * Sends conversion event to Optimizely.\n * @param  {string} eventKey\n * @param  {string} userId\n * @param  {string} attributes\n * @param  {Object} eventTags Values associated with the event.\n */\nOptimizely.prototype.track = function(eventKey, userId, attributes, eventTags) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'track'));\n      return;\n    }\n\n    if (!this.__validateInputs({ user_id: userId, event_key: eventKey }, attributes, eventTags)) {\n      return;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return;\n    }\n\n    if (!projectConfig.eventWithKeyExists(configObj, eventKey)) {\n      this.logger.log(\n        LOG_LEVEL.WARNING,\n        sprintf(enums.LOG_MESSAGES.EVENT_KEY_NOT_FOUND, MODULE_NAME, eventKey)\n      );\n      this.logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.NOT_TRACKING_USER, MODULE_NAME, userId));\n      return;\n    }\n\n    // remove null values from eventTags\n    eventTags = this.__filterEmptyValues(eventTags);\n    var conversionEvent = buildConversionEvent({\n      eventKey: eventKey,\n      eventTags: eventTags,\n      userId: userId,\n      userAttributes: attributes,\n      clientEngine: this.clientEngine,\n      clientVersion: this.clientVersion,\n      configObj: configObj,\n    });\n    this.logger.log(LOG_LEVEL.INFO, sprintf(enums.LOG_MESSAGES.TRACK_EVENT, MODULE_NAME, eventKey, userId));\n    // TODO is it okay to not pass a projectConfig as second argument\n    this.eventProcessor.process(conversionEvent);\n    this.__emitNotificationCenterTrack(eventKey, userId, attributes, eventTags);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    var failedTrackLogMessage = sprintf(LOG_MESSAGES.NOT_TRACKING_USER, MODULE_NAME, userId);\n    this.logger.log(LOG_LEVEL.ERROR, failedTrackLogMessage);\n  }\n};\n\n/**\n * Send TRACK event to notificationCenter\n * @param  {string} eventKey\n * @param  {string} userId\n * @param  {string} attributes\n * @param  {Object} eventTags Values associated with the event.\n */\nOptimizely.prototype.__emitNotificationCenterTrack = function(eventKey, userId, attributes, eventTags) {\n  try {\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return;\n    }\n\n    var conversionEventOptions = {\n      attributes: attributes,\n      clientEngine: this.clientEngine,\n      clientVersion: this.clientVersion,\n      configObj: configObj,\n      eventKey: eventKey,\n      eventTags: eventTags,\n      logger: this.logger,\n      userId: userId,\n    };\n    var conversionEvent = getConversionEvent(conversionEventOptions);\n\n    this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.TRACK, {\n      eventKey: eventKey,\n      userId: userId,\n      attributes: attributes,\n      eventTags: eventTags,\n      logEvent: conversionEvent,\n    });\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n  }\n};\n\n/**\n * Gets variation where visitor will be bucketed.\n * @param  {string}      experimentKey\n * @param  {string}      userId\n * @param  {Object}      attributes\n * @return {string|null} variation key\n */\nOptimizely.prototype.getVariation = function(experimentKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getVariation'));\n      return null;\n    }\n\n    try {\n      if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId }, attributes)) {\n        return null;\n      }\n\n      var configObj = this.projectConfigManager.getConfig();\n      if (!configObj) {\n        return null;\n      }\n\n      var experiment = configObj.experimentKeyMap[experimentKey];\n      if (!experiment) {\n        this.logger.log(\n          LOG_LEVEL.DEBUG,\n          sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey)\n        );\n        return null;\n      }\n\n      var variationKey = this.decisionService.getVariation(configObj, experimentKey, userId, attributes);\n      var decisionNotificationType = projectConfig.isFeatureExperiment(configObj, experiment.id)\n        ? DECISION_NOTIFICATION_TYPES.FEATURE_TEST\n        : DECISION_NOTIFICATION_TYPES.AB_TEST;\n\n      this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n        type: decisionNotificationType,\n        userId: userId,\n        attributes: attributes || {},\n        decisionInfo: {\n          experimentKey: experimentKey,\n          variationKey: variationKey,\n        },\n      });\n\n      return variationKey;\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.ERROR, ex.message);\n      this.errorHandler.handleError(ex);\n      return null;\n    }\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Force a user into a variation for a given experiment.\n * @param {string} experimentKey\n * @param {string} userId\n * @param {string|null} variationKey user will be forced into. If null, then clear the existing experiment-to-variation mapping.\n * @return boolean A boolean value that indicates if the set completed successfully.\n */\nOptimizely.prototype.setForcedVariation = function(experimentKey, userId, variationKey) {\n  if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId })) {\n    return false;\n  }\n\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return false;\n  }\n\n  try {\n    return this.decisionService.setForcedVariation(configObj, experimentKey, userId, variationKey);\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n    return false;\n  }\n};\n\n/**\n * Gets the forced variation for a given user and experiment.\n * @param  {string} experimentKey\n * @param  {string} userId\n * @return {string|null} The forced variation key.\n */\nOptimizely.prototype.getForcedVariation = function(experimentKey, userId) {\n  if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId })) {\n    return null;\n  }\n\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return null;\n  }\n\n  try {\n    return this.decisionService.getForcedVariation(configObj, experimentKey, userId);\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n    return null;\n  }\n};\n\n/**\n * Validate string inputs, user attributes and event tags.\n * @param  {string}  stringInputs   Map of string keys and associated values\n * @param  {Object}  userAttributes Optional parameter for user's attributes\n * @param  {Object}  eventTags      Optional parameter for event tags\n * @return {boolean} True if inputs are valid\n *\n */\nOptimizely.prototype.__validateInputs = function(stringInputs, userAttributes, eventTags) {\n  try {\n    // Null, undefined or non-string user Id is invalid.\n    if (stringInputs.hasOwnProperty('user_id')) {\n      var userId = stringInputs.user_id;\n      if (typeof userId !== 'string' || userId === null || userId === 'undefined') {\n        throw new Error(sprintf(ERROR_MESSAGES.INVALID_INPUT_FORMAT, MODULE_NAME, 'user_id'));\n      }\n\n      delete stringInputs.user_id;\n    }\n\n    var inputKeys = Object.keys(stringInputs);\n    for (var index = 0; index < inputKeys.length; index++) {\n      var key = inputKeys[index];\n      if (!stringValidator.validate(stringInputs[key])) {\n        throw new Error(sprintf(ERROR_MESSAGES.INVALID_INPUT_FORMAT, MODULE_NAME, key));\n      }\n    }\n    if (userAttributes) {\n      validate(userAttributes);\n    }\n    if (eventTags) {\n      eventTagsValidator.validate(eventTags);\n    }\n    return true;\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n    return false;\n  }\n};\n\n/**\n * Shows failed activation log message and returns null when user is not activated in experiment\n * @param  experimentKey\n * @param  userId\n * @return {null}\n */\nOptimizely.prototype.__notActivatingExperiment = function(experimentKey, userId) {\n  var failedActivationLogMessage = sprintf(\n    LOG_MESSAGES.NOT_ACTIVATING_USER,\n    MODULE_NAME,\n    userId,\n    experimentKey\n  );\n  this.logger.log(LOG_LEVEL.INFO, failedActivationLogMessage);\n  return null;\n};\n\n/**\n * Filters out attributes/eventTags with null or undefined values\n * @param  map\n * @returns {Object} map\n */\nOptimizely.prototype.__filterEmptyValues = function(map) {\n  for (var key in map) {\n    if (map.hasOwnProperty(key) && (map[key] === null || map[key] === undefined)) {\n      delete map[key];\n    }\n  }\n  return map;\n};\n\n/**\n * Returns true if the feature is enabled for the given user.\n * @param {string} featureKey   Key of feature which will be checked\n * @param {string} userId       ID of user which will be checked\n * @param {Object} attributes   Optional user attributes\n * @return {boolean}            True if the feature is enabled for the user, false otherwise\n */\nOptimizely.prototype.isFeatureEnabled = function(featureKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'isFeatureEnabled')\n      );\n      return false;\n    }\n\n    if (!this.__validateInputs({ feature_key: featureKey, user_id: userId }, attributes)) {\n      return false;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return false;\n    }\n\n    var feature = projectConfig.getFeatureFromKey(configObj, featureKey, this.logger);\n    if (!feature) {\n      return false;\n    }\n\n    var featureEnabled = false;\n    var decision = this.decisionService.getVariationForFeature(configObj, feature, userId, attributes);\n    var variation = decision.variation;\n    var sourceInfo = {};\n\n    if (variation) {\n      featureEnabled = variation.featureEnabled;\n      if (decision.decisionSource === DECISION_SOURCES.FEATURE_TEST) {\n        sourceInfo = {\n          experimentKey: decision.experiment.key,\n          variationKey: decision.variation.key,\n        };\n        // got a variation from the exp, so we track the impression\n        this._sendImpressionEvent(decision.experiment.key, decision.variation.key, userId, attributes);\n      }\n    }\n\n    if (featureEnabled === true) {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.FEATURE_ENABLED_FOR_USER, MODULE_NAME, featureKey, userId)\n      );\n    } else {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.FEATURE_NOT_ENABLED_FOR_USER, MODULE_NAME, featureKey, userId)\n      );\n      featureEnabled = false;\n    }\n\n    var featureInfo = {\n      featureKey: featureKey,\n      featureEnabled: featureEnabled,\n      source: decision.decisionSource,\n      sourceInfo: sourceInfo,\n    };\n\n    this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n      type: DECISION_NOTIFICATION_TYPES.FEATURE,\n      userId: userId,\n      attributes: attributes || {},\n      decisionInfo: featureInfo,\n    });\n\n    return featureEnabled;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return false;\n  }\n};\n\n/**\n * Returns an Array containing the keys of all features in the project that are\n * enabled for the given user.\n * @param {string} userId\n * @param {Object} attributes\n * @return {Array} Array of feature keys (strings)\n */\nOptimizely.prototype.getEnabledFeatures = function(userId, attributes) {\n  try {\n    var enabledFeatures = [];\n    if (!this.__isValidInstance()) {\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getEnabledFeatures')\n      );\n      return enabledFeatures;\n    }\n\n    if (!this.__validateInputs({ user_id: userId })) {\n      return enabledFeatures;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return enabledFeatures;\n    }\n\n    objectValues(configObj.featureKeyMap).forEach(\n      function(feature) {\n        if (this.isFeatureEnabled(feature.key, userId, attributes)) {\n          enabledFeatures.push(feature.key);\n        }\n      }.bind(this)\n    );\n\n    return enabledFeatures;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return [];\n  }\n};\n\n/**\n * Returns dynamically-typed value of the variable attached to the given\n * feature flag. Returns null if the feature key or variable key is invalid.\n *\n * @param {string} featureKey           Key of the feature whose variable's\n *                                      value is being accessed\n * @param {string} variableKey          Key of the variable whose value is\n *                                      being accessed\n * @param {string} userId               ID for the user\n * @param {Object} attributes           Optional user attributes\n * @return {string|boolean|number|null} Value of the variable cast to the appropriate\n *                                      type, or null if the feature key is invalid or\n *                                      the variable key is invalid\n */\n\nOptimizely.prototype.getFeatureVariable = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariable'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, null, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Helper method to get the value for a variable of a certain type attached to a\n * feature flag. Returns null if the feature key is invalid, the variable key is\n * invalid, the given variable type does not match the variable's actual type,\n * or the variable value cannot be cast to the required type. If the given variable\n * type is null, the value of the variable cast to the appropriate type is returned.\n *\n * @param {string} featureKey           Key of the feature whose variable's value is\n *                                      being accessed\n * @param {string} variableKey          Key of the variable whose value is being\n *                                      accessed\n * @param {string|null} variableType    Type of the variable whose value is being\n *                                      accessed (must be one of FEATURE_VARIABLE_TYPES\n *                                      in lib/utils/enums/index.js), or null to return the\n *                                      value of the variable cast to the appropriate type\n * @param {string} userId               ID for the user\n * @param {Object} attributes           Optional user attributes\n * @return {string|boolean|number|null} Value of the variable cast to the appropriate\n *                                      type, or null if the feature key is invalid, the\n *                                      variable key is invalid, or there is a mismatch\n *                                      with the type of the variable\n */\nOptimizely.prototype._getFeatureVariableForType = function(featureKey, variableKey, variableType, userId, attributes) {\n  if (!this.__validateInputs({ feature_key: featureKey, variable_key: variableKey, user_id: userId }, attributes)) {\n    return null;\n  }\n\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return null;\n  }\n\n  var featureFlag = projectConfig.getFeatureFromKey(configObj, featureKey, this.logger);\n  if (!featureFlag) {\n    return null;\n  }\n\n  var variable = projectConfig.getVariableForFeature(configObj, featureKey, variableKey, this.logger);\n  if (!variable) {\n    return null;\n  }\n\n  if (variableType && variable.type !== variableType) {\n    this.logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.VARIABLE_REQUESTED_WITH_WRONG_TYPE, MODULE_NAME, variableType, variable.type)\n    );\n    return null;\n  }\n\n  var decision = this.decisionService.getVariationForFeature(configObj, featureFlag, userId, attributes);\n  var featureEnabled = decision.variation !== null ? decision.variation.featureEnabled : false;\n  var variableValue = this._getFeatureVariableValueFromVariation(featureKey, featureEnabled, decision.variation, variable, userId);\n\n  var sourceInfo = {};\n  if (decision.decisionSource === DECISION_SOURCES.FEATURE_TEST) {\n    sourceInfo = {\n      experimentKey: decision.experiment.key,\n      variationKey: decision.variation.key,\n    };\n  }\n\n  this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n    type: DECISION_NOTIFICATION_TYPES.FEATURE_VARIABLE,\n    userId: userId,\n    attributes: attributes || {},\n    decisionInfo: {\n      featureKey: featureKey,\n      featureEnabled: featureEnabled,\n      source: decision.decisionSource,\n      variableKey: variableKey,\n      variableValue: variableValue,\n      variableType: variable.type,\n      sourceInfo: sourceInfo,\n    },\n  });\n  return variableValue;\n};\n\n/**\n * Helper method to get the non type-casted value for a variable attached to a\n * feature flag. Returns appropriate variable value depending on whether there\n * was a matching variation, feature was enabled or not or varible was part of the\n * available variation or not. Also logs the appropriate message explaining how it\n * evaluated the value of the variable.\n *\n * @param {string} featureKey           Key of the feature whose variable's value is\n *                                      being accessed\n * @param {boolean} featureEnabled      Boolean indicating if feature is enabled or not\n * @param {object} variation            variation returned by decision service\n * @param {object} variable             varible whose value is being evaluated\n * @param {string} userId               ID for the user\n * @return {string|null}                String value of the variable or null if the config Obj\n *                                      is null\n */\nOptimizely.prototype._getFeatureVariableValueFromVariation = function(featureKey, featureEnabled, variation, variable, userId) {\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return null;\n  }\n\n  var variableValue = variable.defaultValue;\n  if (variation !== null) {\n    var value = projectConfig.getVariableValueForVariation(configObj, variable, variation, this.logger);\n    if (value !== null) {\n      if (featureEnabled) {\n        variableValue = value;\n        this.logger.log(\n          LOG_LEVEL.INFO,\n          sprintf(\n            LOG_MESSAGES.USER_RECEIVED_VARIABLE_VALUE,\n            MODULE_NAME,\n            variableValue,\n            variable.key,\n            featureKey\n          )\n        );\n      } else {\n        this.logger.log(\n          LOG_LEVEL.INFO,\n          sprintf(\n            LOG_MESSAGES.FEATURE_NOT_ENABLED_RETURN_DEFAULT_VARIABLE_VALUE,\n            MODULE_NAME,\n            featureKey,\n            userId,\n            variableValue\n          )\n        );\n      }\n    } else {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(\n          LOG_MESSAGES.VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE,\n          MODULE_NAME,\n          variable.key,\n          variation.key\n        )\n      );\n    }\n  } else {\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(\n        LOG_MESSAGES.USER_RECEIVED_DEFAULT_VARIABLE_VALUE,\n        MODULE_NAME,\n        userId,\n        variable.key,\n        featureKey\n      )\n    );\n  }\n\n  return projectConfig.getTypeCastValue(variableValue, variable.type, this.logger);\n}\n\n/**\n * Returns value for the given boolean variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {boolean|null}       Boolean value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableBoolean = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableBoolean'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.BOOLEAN, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given double variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {number|null}        Number value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableDouble = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableDouble'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.DOUBLE, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given integer variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {number|null}        Number value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableInteger = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableInteger'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.INTEGER, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given string variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {string|null}        String value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableString = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableString'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.STRING, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given json variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {object|null}        Object value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableJSON = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableJSON'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.JSON, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns values for all the variables attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variables are being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {object|null}        Object containing all the variables, or null if the\n *                              feature key is invalid\n */\nOptimizely.prototype.getAllFeatureVariables = function(featureKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getAllFeatureVariables'));\n      return null;\n    }\n\n    if (!this.__validateInputs({ feature_key: featureKey, user_id: userId }, attributes)) {\n      return null;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return null;\n    }\n\n    var featureFlag = projectConfig.getFeatureFromKey(configObj, featureKey, this.logger);\n    if (!featureFlag) {\n      return null;\n    }\n\n    var decision = this.decisionService.getVariationForFeature(configObj, featureFlag, userId, attributes);\n    var featureEnabled = decision.variation !== null ? decision.variation.featureEnabled : false;\n    var allVariables = {};\n\n    featureFlag.variables.forEach(function (variable) {\n      allVariables[variable.key] = this._getFeatureVariableValueFromVariation(featureKey, featureEnabled, decision.variation, variable, userId);\n    }.bind(this));\n\n    var sourceInfo = {};\n    if (decision.decisionSource === DECISION_SOURCES.FEATURE_TEST) {\n      sourceInfo = {\n        experimentKey: decision.experiment.key,\n        variationKey: decision.variation.key,\n      };\n    }\n    this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n      type: DECISION_NOTIFICATION_TYPES.ALL_FEATURE_VARIABLES,\n      userId: userId,\n      attributes: attributes || {},\n      decisionInfo: {\n        featureKey: featureKey,\n        featureEnabled: featureEnabled,\n        source: decision.decisionSource,\n        variableValues: allVariables,\n        sourceInfo: sourceInfo,\n      },\n    });\n\n    return allVariables;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns OptimizelyConfig object containing experiments and features data\n * @return {Object}\n *\n * OptimizelyConfig Object Schema\n * {\n *   'experimentsMap': {\n *     'my-fist-experiment': {\n *       'id': '111111',\n *       'key': 'my-fist-experiment'\n *       'variationsMap': {\n *         'variation_1': {\n *           'id': '121212',\n *           'key': 'variation_1',\n *           'variablesMap': {\n *             'age': {\n *               'id': '222222',\n *               'key': 'age',\n *               'type': 'integer',\n *               'value': '0',\n *             }\n *           }\n *         }\n *       }\n *     }\n *   },\n *   'featuresMap': {\n *     'awesome-feature': {\n *       'id': '333333',\n *       'key': 'awesome-feature',\n *       'experimentsMap': Object,\n *       'variationsMap': Object,\n *     }\n *   }\n * }\n */\nOptimizely.prototype.getOptimizelyConfig = function() {\n  try {\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return null;\n    }\n    return this.projectConfigManager.getOptimizelyConfig();\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Stop background processes belonging to this instance, including:\n *\n * - Active datafile requests\n * - Pending datafile requests\n * - Pending event queue flushes\n *\n * In-flight datafile requests will be aborted. Any events waiting to be sent\n * as part of a batched event request will be immediately flushed to the event\n * dispatcher.\n *\n * Returns a Promise that fulfills after all in-flight event dispatcher requests\n * (including any final request resulting from flushing the queue as described\n * above) are complete. If there are no in-flight event dispatcher requests and\n * no queued events waiting to be sent, returns an immediately-fulfilled Promise.\n *\n * Returned Promises are fulfilled with result objects containing these\n * properties:\n *    - success (boolean): true if the event dispatcher signaled completion of\n *                         all in-flight and final requests, or if there were no\n *                         queued events and no in-flight requests. false if an\n *                         unexpected error was encountered during the close\n *                         process.\n *    - reason (string=):  If success is false, this is a string property with\n *                         an explanatory message.\n *\n * NOTE: After close is called, this instance is no longer usable - any events\n * generated will no longer be sent to the event dispatcher.\n *\n * @return {Promise}\n */\nOptimizely.prototype.close = function() {\n  try {\n    var eventProcessorStoppedPromise = this.eventProcessor.stop();\n    if (this.__disposeOnUpdate) {\n      this.__disposeOnUpdate();\n      this.__disposeOnUpdate = null;\n    }\n    if (this.projectConfigManager) {\n      this.projectConfigManager.stop();\n    }\n    Object.keys(this.__readyTimeouts).forEach(\n      function(readyTimeoutId) {\n        var readyTimeoutRecord = this.__readyTimeouts[readyTimeoutId];\n        clearTimeout(readyTimeoutRecord.readyTimeout);\n        readyTimeoutRecord.onClose();\n      }.bind(this)\n    );\n    this.__readyTimeouts = {};\n    return eventProcessorStoppedPromise.then(\n      function() {\n        return {\n          success: true,\n        };\n      },\n      function(err) {\n        return {\n          success: false,\n          reason: String(err),\n        };\n      }\n    );\n  } catch (err) {\n    this.logger.log(LOG_LEVEL.ERROR, err.message);\n    this.errorHandler.handleError(err);\n    return Promise.resolve({\n      success: false,\n      reason: String(err),\n    });\n  }\n};\n\n/**\n * Returns a Promise that fulfills when this instance is ready to use (meaning\n * it has a valid datafile), or has failed to become ready within a period of\n * time (configurable by the timeout property of the options argument), or when\n * this instance is closed via the close method.\n *\n * If a valid datafile was provided in the constructor, the returned Promise is\n * immediately fulfilled. If an sdkKey was provided, a manager will be used to\n * fetch  a datafile, and the returned promise will fulfill if that fetch\n * succeeds or fails before the timeout. The default timeout is 30 seconds,\n * which will be used if no timeout is provided in the argument options object.\n *\n * The returned Promise is fulfilled with a result object containing these\n * properties:\n *    - success (boolean): True if this instance is ready to use with a valid\n *                         datafile, or false if this instance failed to become\n *                         ready or was closed prior to becoming ready.\n *    - reason (string=):  If success is false, this is a string property with\n *                         an explanatory message. Failure could be due to\n *                         expiration of the timeout, network errors,\n *                         unsuccessful responses, datafile parse errors,\n *                         datafile validation errors, or the instance being\n *                         closed\n * @param  {Object=}          options\n * @param  {number|undefined} options.timeout\n * @return {Promise}\n */\nOptimizely.prototype.onReady = function(options) {\n  var timeout;\n  if (typeof options === 'object' && options !== null) {\n    timeout = options.timeout;\n  }\n  if (!fns.isSafeInteger(timeout)) {\n    timeout = DEFAULT_ONREADY_TIMEOUT;\n  }\n\n  var resolveTimeoutPromise;\n  var timeoutPromise = new Promise(function(resolve) {\n    resolveTimeoutPromise = resolve;\n  });\n\n  var timeoutId = this.__nextReadyTimeoutId;\n  this.__nextReadyTimeoutId++;\n\n  var onReadyTimeout = function() {\n    delete this.__readyTimeouts[timeoutId];\n    resolveTimeoutPromise({\n      success: false,\n      reason: sprintf('onReady timeout expired after %s ms', timeout),\n    });\n  }.bind(this);\n  var readyTimeout = setTimeout(onReadyTimeout, timeout);\n  var onClose = function() {\n    resolveTimeoutPromise({\n      success: false,\n      reason: 'Instance closed',\n    });\n  };\n\n  this.__readyTimeouts[timeoutId] = {\n    readyTimeout: readyTimeout,\n    onClose: onClose,\n  };\n\n  this.__readyPromise.then(\n    function() {\n      clearTimeout(readyTimeout);\n      delete this.__readyTimeouts[timeoutId];\n      resolveTimeoutPromise({\n        success: true,\n      });\n    }.bind(this)\n  );\n\n  return Promise.race([this.__readyPromise, timeoutPromise]);\n};\n\nexport default Optimizely;\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSafeInteger } from '../fns';\n\n/**\n * Return true if the argument is a valid event batch size, false otherwise\n * @param {*} eventBatchSize\n * @returns boolean\n */\nexport var validateEventBatchSize = function(eventBatchSize) {\n  return isSafeInteger(eventBatchSize) && eventBatchSize >= 1;\n};\n\n/**\n * Return true if the argument is a valid event flush interval, false otherwise\n * @param {*} eventFlushInterval\n * @returns boolean\n */\nexport var validateEventFlushInterval = function(eventFlushInterval) {\n  return isSafeInteger(eventFlushInterval) && eventFlushInterval > 0;\n};\n\nexport default {\n  validateEventBatchSize: validateEventBatchSize,\n  validateEventFlushInterval: validateEventFlushInterval,\n};\n","/**\n * Copyright 2016-2017, 2019-2020 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { \n  getLogger,\n  setLogHandler,\n  setLogLevel,\n  setErrorHandler,\n  getErrorHandler,\n  LogLevel,\n} from '@optimizely/js-sdk-logging';\nimport { LocalStoragePendingEventsDispatcher } from '@optimizely/js-sdk-event-processor';\n\nimport fns from './utils/fns';\nimport configValidator from './utils/config_validator';\nimport defaultErrorHandler from './plugins/error_handler';\nimport defaultEventDispatcher from './plugins/event_dispatcher/index.browser';\nimport enums from './utils/enums';\nimport loggerPlugin from './plugins/logger';\nimport Optimizely from './optimizely';\nimport eventProcessorConfigValidator from './utils/event_processor_config_validator';\n\nvar logger = getLogger();\nsetLogHandler(loggerPlugin.createLogger());\nsetLogLevel(LogLevel.INFO);\n\nvar MODULE_NAME = 'INDEX_BROWSER';\nvar DEFAULT_EVENT_BATCH_SIZE = 10;\nvar DEFAULT_EVENT_FLUSH_INTERVAL = 1000; // Unit is ms, default is 1s\n\nvar hasRetriedEvents = false;\n\n/**\n * Creates an instance of the Optimizely class\n * @param  {Object} config\n * @param  {Object} config.datafile\n * @param  {Object} config.errorHandler\n * @param  {Object} config.eventDispatcher\n * @param  {Object} config.logger\n * @param  {Object} config.logLevel\n * @param  {Object} config.userProfileService\n * @param {Object} config.eventBatchSize\n * @param {Object} config.eventFlushInterval\n * @return {Object} the Optimizely object\n */\nvar createInstance = function(config) {\n  try {\n    config = config || {};\n\n    // TODO warn about setting per instance errorHandler / logger / logLevel\n    if (config.errorHandler) {\n      setErrorHandler(config.errorHandler);\n    }\n    if (config.logger) {\n      setLogHandler(config.logger);\n      // respect the logger's shouldLog functionality\n      setLogLevel(LogLevel.NOTSET);\n    }\n    if (config.logLevel !== undefined) {\n      setLogLevel(config.logLevel);\n    }\n\n    try {\n      configValidator.validate(config);\n      config.isValidInstance = true;\n    } catch (ex) {\n      logger.error(ex);\n      config.isValidInstance = false;\n    }\n\n    var eventDispatcher;\n    // prettier-ignore\n    if (config.eventDispatcher == null) { // eslint-disable-line eqeqeq\n      // only wrap the event dispatcher with pending events retry if the user didnt override\n      eventDispatcher = new LocalStoragePendingEventsDispatcher({\n        eventDispatcher: defaultEventDispatcher,\n      });\n\n      if (!hasRetriedEvents) {\n        eventDispatcher.sendPendingEvents();\n        hasRetriedEvents = true;\n      }\n    } else {\n      eventDispatcher = config.eventDispatcher;\n    }\n\n    config = fns.assign(\n      {\n        clientEngine: enums.JAVASCRIPT_CLIENT_ENGINE,\n        eventBatchSize: DEFAULT_EVENT_BATCH_SIZE,\n        eventFlushInterval: DEFAULT_EVENT_FLUSH_INTERVAL,\n      },\n      config,\n      {\n        eventDispatcher: eventDispatcher,\n        // always get the OptimizelyLogger facade from logging\n        logger: logger,\n        errorHandler: getErrorHandler(),\n      }\n    );\n\n    if (!eventProcessorConfigValidator.validateEventBatchSize(config.eventBatchSize)) {\n      logger.warn('Invalid eventBatchSize %s, defaulting to %s', config.eventBatchSize, DEFAULT_EVENT_BATCH_SIZE);\n      config.eventBatchSize = DEFAULT_EVENT_BATCH_SIZE;\n    }\n    if (!eventProcessorConfigValidator.validateEventFlushInterval(config.eventFlushInterval)) {\n      logger.warn(\n        'Invalid eventFlushInterval %s, defaulting to %s',\n        config.eventFlushInterval,\n        DEFAULT_EVENT_FLUSH_INTERVAL\n      );\n      config.eventFlushInterval = DEFAULT_EVENT_FLUSH_INTERVAL;\n    }\n\n    var optimizely = new Optimizely(config);\n\n    try {\n      if (typeof window.addEventListener === 'function') {\n        var unloadEvent = 'onpagehide' in window ? 'pagehide' : 'unload';\n        window.addEventListener(\n          unloadEvent,\n          function() {\n            optimizely.close();\n          },\n          false\n        );\n      }\n    } catch (e) {\n      logger.error(enums.LOG_MESSAGES.UNABLE_TO_ATTACH_UNLOAD, MODULE_NAME, e.message);\n    }\n\n    return optimizely;\n  } catch (e) {\n    logger.error(e);\n    return null;\n  }\n};\n\nvar __internalResetRetryState = function() {\n  hasRetriedEvents = false;\n};\n\n/**\n * Entry point into the Optimizely Browser SDK\n */\nexport {\n  loggerPlugin as logging,\n  defaultErrorHandler as errorHandler,\n  defaultEventDispatcher as eventDispatcher,\n  enums,\n  setLogHandler as setLogger,\n  setLogLevel,\n  createInstance,\n  __internalResetRetryState,  \n}\n\nexport default {\n  logging: loggerPlugin,\n  errorHandler: defaultErrorHandler,\n  eventDispatcher: defaultEventDispatcher,\n  enums: enums,\n  setLogger: setLogHandler,\n  setLogLevel: setLogLevel,\n  createInstance: createInstance,\n  __internalResetRetryState: __internalResetRetryState,\n};\n"],"names":["Object","defineProperty","exports","value","NoopErrorHandler","prototype","handleError","exception","globalErrorHandler","handler","LogLevel","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","module","rnds","Array","r","i","Math","random","byteToHex","toString","substr","_nodeId","_clockseq","buf","offset","bth","join","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","rng","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","bytesToUuid","ii","uuid","v4","v1","objectValues","obj","keys","map","key","uuid_1","enumToCheck","found","index","length","arr","grouperFn","grouper","forEach","item","push","cond","_i","arr_1","keyByFn","format","args","arguments","replace","arg","type","String","stringToLogLevel","NOTSET","DEBUG","INFO","WARNING","ERROR","coerceLogLevel","level","toUpperCase","DefaultLogManager","this","defaultLoggerFacade","OptimizelyLogger","loggers","getLogger","name","messagePrefix","ConsoleLogHandler","config","logLevel","models_1","js_sdk_utils_1","isValidEnum","setLogLevel","logToConsole","prefix","log","message","shouldLog","logMessage","getLogLevelName","consoleLog","toISOString","targetLogLevel","logArguments","console","apply","info","warn","error","globalLogLevel","globalLogHandler","opts","internalLog","splat","namedLog","debug","data","sprintf","concat","errorHandler_1","getErrorHandler","last","splice","globalLogManager","logger","__export","m","p","hasOwnProperty","require$$0","require$$1","require$$2","eventA","eventB","contextA","context","contextB","accountId","projectId","clientName","clientVersion","revision","anonymizeIP","botFiltering","js_sdk_logging_1","Timer","_a","timeout","callback","max","start","timeoutId","setTimeout","refresh","stop","clearTimeout","SingleEventQueue","sink","Promise","resolve","enqueue","event","DefaultEventQueue","flushInterval","maxQueueSize","batchComparator","buffer","timer","flush","started","result","bufferedEvent","NOTIFICATION_TYPES","DEFAULT_FLUSH_INTERVAL","batchSize","floor","DEFAULT_BATCH_SIZE","eventQueue_1","notificationCenter","sendNotifications","LOG_EVENT","LocalStorageStore","_b","maxValues","LS_KEY","get","getMap","set","remove","values","clear","localStorage","setItem","JSON","stringify","clean","e","toRemove","entries","sort","a","timestamp","getItem","parse","extendStatics","__extends","d","setPrototypeOf","__proto__","__","constructor","create","PendingEventsDispatcher","eventDispatcher","store","dispatcher","dispatchEvent","request","send","generateUUID","getTimestamp","sendPendingEvents","_this","pendingEvents","entry","response","LocalStoragePendingEventsDispatcher","_super","call","pendingEventsStore_1","__assign","assign","t","s","makeBatchedEventV1","events","visitors","visitor","makeVisitor","snapshots","makeDecisionSnapshot","makeConversionSnapshot","client_name","client_version","account_id","project_id","anonymize_ip","enrich_decisions","conversion","tags","entity_id","id","revenue","layer","experiment","variation","layerId","decisions","campaign_id","experiment_id","variation_id","visitor_id","user","attributes","attr","entityId","url","httpVerb","params","RequestTracker","reqsInFlightCount","reqsCompleteResolvers","trackRequest","reqPromise","onReqComplete","resolver","then","onRequestsComplete","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","done","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","__importDefault","mod","__esModule","default","requestTracker_1","LogTierV1EventProcessor","eventProcessor_1","_c","requestTracker","validateAndGetFlushInterval","validateAndGetBatchSize","queue","getQueue","drainQueue","events_1","areEventContextsEqual","formattedEvent","buildEventV1_1","formatEvents","sendEventNotification","process","require$$3","require$$4","MAX_SAFE_INTEGER_LIMIT","pow","isSafeInteger","number","abs","target","to","nextSource","nextKey","currentTimestamp","round","keyBy","keyByUtil","isNumber","LOG_LEVEL","ERROR_MESSAGES","CONDITION_EVALUATOR_ERROR","DATAFILE_AND_SDK_KEY_MISSING","EXPERIMENT_KEY_NOT_IN_DATAFILE","FEATURE_NOT_IN_DATAFILE","IMPROPERLY_FORMATTED_EXPERIMENT","INVALID_ATTRIBUTES","INVALID_BUCKETING_ID","INVALID_DATAFILE","INVALID_DATAFILE_MALFORMED","INVALID_JSON","INVALID_ERROR_HANDLER","INVALID_EVENT_DISPATCHER","INVALID_EVENT_TAGS","INVALID_EXPERIMENT_KEY","INVALID_EXPERIMENT_ID","INVALID_GROUP_ID","INVALID_LOGGER","INVALID_ROLLOUT_ID","INVALID_USER_ID","INVALID_USER_PROFILE_SERVICE","NO_DATAFILE_SPECIFIED","NO_JSON_PROVIDED","NO_VARIATION_FOR_EXPERIMENT_KEY","UNDEFINED_ATTRIBUTE","UNRECOGNIZED_ATTRIBUTE","UNABLE_TO_CAST_VALUE","USER_NOT_IN_FORCED_VARIATION","USER_PROFILE_LOOKUP_ERROR","USER_PROFILE_SAVE_ERROR","VARIABLE_KEY_NOT_IN_DATAFILE","VARIATION_ID_NOT_IN_DATAFILE","VARIATION_ID_NOT_IN_DATAFILE_NO_EXPERIMENT","INVALID_INPUT_FORMAT","INVALID_DATAFILE_VERSION","INVALID_VARIATION_KEY","LOG_MESSAGES","ACTIVATE_USER","DISPATCH_CONVERSION_EVENT","DISPATCH_IMPRESSION_EVENT","DEPRECATED_EVENT_VALUE","EVENT_KEY_NOT_FOUND","EXPERIMENT_NOT_RUNNING","FEATURE_ENABLED_FOR_USER","FEATURE_NOT_ENABLED_FOR_USER","FEATURE_HAS_NO_EXPERIMENTS","FAILED_TO_PARSE_VALUE","FAILED_TO_PARSE_REVENUE","FORCED_BUCKETING_FAILED","INVALID_OBJECT","INVALID_CLIENT_ENGINE","INVALID_VARIATION_ID","NOTIFICATION_LISTENER_EXCEPTION","NO_ROLLOUT_EXISTS","NOT_ACTIVATING_USER","NOT_TRACKING_USER","PARSED_REVENUE_VALUE","PARSED_NUMERIC_VALUE","RETURNING_STORED_VARIATION","ROLLOUT_HAS_NO_EXPERIMENTS","SAVED_VARIATION","SAVED_VARIATION_NOT_FOUND","SHOULD_NOT_DISPATCH_ACTIVATE","SKIPPING_JSON_VALIDATION","TRACK_EVENT","USER_ASSIGNED_TO_EXPERIMENT_BUCKET","USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP","USER_BUCKETED_INTO_TARGETING_RULE","USER_IN_FEATURE_EXPERIMENT","USER_IN_ROLLOUT","USER_BUCKETED_INTO_EVERYONE_TARGETING_RULE","USER_NOT_BUCKETED_INTO_EVERYONE_TARGETING_RULE","USER_NOT_BUCKETED_INTO_EXPERIMENT_IN_GROUP","USER_NOT_BUCKETED_INTO_ANY_EXPERIMENT_IN_GROUP","USER_NOT_BUCKETED_INTO_TARGETING_RULE","USER_NOT_IN_FEATURE_EXPERIMENT","USER_NOT_IN_ROLLOUT","USER_FORCED_IN_VARIATION","USER_MAPPED_TO_FORCED_VARIATION","USER_DOESNT_MEET_CONDITIONS_FOR_TARGETING_RULE","USER_MEETS_CONDITIONS_FOR_TARGETING_RULE","USER_HAS_VARIATION","USER_HAS_FORCED_VARIATION","USER_HAS_NO_VARIATION","USER_HAS_NO_FORCED_VARIATION","USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT","USER_NOT_IN_ANY_EXPERIMENT","USER_NOT_IN_EXPERIMENT","USER_RECEIVED_DEFAULT_VARIABLE_VALUE","FEATURE_NOT_ENABLED_RETURN_DEFAULT_VARIABLE_VALUE","VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE","USER_RECEIVED_VARIABLE_VALUE","VALID_DATAFILE","VALID_USER_PROFILE_SERVICE","VARIATION_REMOVED_FOR_USER","VARIABLE_REQUESTED_WITH_WRONG_TYPE","VALID_BUCKETING_ID","BUCKETING_ID_NOT_STRING","EVALUATING_AUDIENCE","EVALUATING_AUDIENCES_COMBINED","AUDIENCE_EVALUATION_RESULT","AUDIENCE_EVALUATION_RESULT_COMBINED","MISSING_ATTRIBUTE_VALUE","UNEXPECTED_CONDITION_VALUE","UNEXPECTED_TYPE","UNEXPECTED_TYPE_NULL","UNKNOWN_CONDITION_TYPE","UNKNOWN_MATCH_TYPE","UPDATED_OPTIMIZELY_CONFIG","OUT_OF_BOUNDS","UNABLE_TO_ATTACH_UNLOAD","RESERVED_EVENT_KEYWORDS","REVENUE","VALUE","notificationTypesEnum","FEATURE_VARIABLE_TYPES","BOOLEAN","DOUBLE","INTEGER","STRING","DATAFILE_VERSIONS","V2","V3","V4","CONTROL_ATTRIBUTES","BOT_FILTERING","BUCKETING_ID","STICKY_BUCKETING_KEY","USER_AGENT","JAVASCRIPT_CLIENT_ENGINE","NODE_CLIENT_ENGINE","REACT_CLIENT_ENGINE","NODE_CLIENT_VERSION","VALID_CLIENT_ENGINES","DECISION_NOTIFICATION_TYPES","AB_TEST","FEATURE","FEATURE_TEST","FEATURE_VARIABLE","ALL_FEATURE_VARIABLES","DECISION_SOURCES","ROLLOUT","AUDIENCE_EVALUATION_TYPES","RULE","EXPERIMENT","MODULE_NAME","SUPPORTED_VERSIONS","errorHandler","datafile","ex","indexOf","version","toQueryString","k","encodeURIComponent","eventObj","req","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","statusCode","status","NoOpLogger","createLogger","createNoOpLogger","validate","isArray","attributeKey","attributeValue","fns","MurmurHashV3","seed","remainder","bytes","h1","h1b","c1","c2","k1","charCodeAt","murmur","v2","str","l","h","v3","MAX_HASH_VALUE","bucket","bucketerParams","groupId","experimentKeyMap","experimentKey","group","groupIdMap","policy","bucketedExperimentId","bucketUserIntoExperiment","bucketingId","userId","notbucketedInAnyExperimentLogMessage","experimentId","notBucketedIntoExperimentOfGroupLogMessage","bucketedIntoExperimentOfGroupLogMessage","bucketValue","_generateBucketValue","bucketedUserLogMessage","_findBucket","trafficAllocationConfig","variationIdMap","invalidVariationIdLogMessage","bucketingKey","trafficAllocation","endOfRange","hashValue","murmurhash","parseInt","isFeatureExperiment","projectConfig","experimentFeatureMap","createProjectConfig","datafileCopy","audiences","audience","experiments","featureFlags","featureFlag","groups","groupCopy","rollouts","rollout","rolloutCopy","createMutationSafeDatafileCopy","conditions","audiencesById","typedAudiences","attributeKeyMap","eventKeyMap","Id","rolloutIdMap","variationKeyMap","variations","experimentIdMap","variationVariableUsageMap","variables","featureKeyMap","feature","variable","subType","variableKeyMap","experimentIds","experimentInFeature","getExperimentId","getLayerId","getAttributeId","attribute","hasReservedPrefix","WARN","getEventId","eventKey","getExperimentStatus","isActive","isRunning","getExperimentAudienceConditions","audienceConditions","audienceIds","getVariationKeyFromId","variationId","getVariationIdFromExperimentAndVariationKey","variationKey","getExperimentFromKey","getTrafficAllocation","getExperimentFromId","getFeatureFromKey","featureKey","getVariableForFeature","variableKey","getVariableValueForVariation","variableUsage","getTypeCastValue","variableValue","variableType","castValue","isNaN","parseFloat","getAudiencesById","eventWithKeyExists","tryCreatingProjectConfig","configValidator","jsonSchemaValidator","DEFAULT_OPERATOR_TYPES","evaluate","leafEvaluator","firstOperator","restOfConditions","slice","sawNullResult","conditionResult","andEvaluator","notEvaluator","orEvaluator","MATCH_TYPES","EVALUATORS_BY_MATCH_TYPE","exactEvaluator","condition","userAttributes","userValue","conditionName","userValueType","conditionValue","isValueTypeValidForExactConditions","conditionValueType","conditionMatch","match","AudienceEvaluator","UNSTABLE_conditionEvaluators","typeToEvaluatorMap","custom_attribute","customAttributeConditionEvaluator","evaluateAudience","audienceId","conditionTreeEvaluator","evaluateConditionWithUserAttributes","resultText","evaluator","err","input","enums","DecisionService","audienceEvaluator","forcedVariationMap","userProfileService","getVariation","configObj","_getBucketingId","__checkIfExperimentIsActive","forcedVariationKey","getForcedVariation","__getWhitelistedVariation","experimentBucketMap","__resolveExperimentBucketMap","__getStoredVariation","__checkIfUserIsInAudience","userDoesNotMeetConditionsLogMessage","__buildBucketerParams","bucketer","userHasNoVariationLogMessage","userInVariationLogMessage","__saveUserProfile","userProfile","__getUserProfile","attributeExperimentBucketMap","experiment_bucket_map","experimentNotRunningLogMessage","forcedVariations","forcedBucketingSucceededMessageLog","forcedBucketingFailedMessageLog","evaluationAttribute","loggingKey","experimentAudienceConditions","decision","user_id","lookup","save","getVariationForFeature","experimentDecision","_getVariationForFeatureExperiment","rolloutDecision","_getVariationForRollout","_getExperimentInGroup","decisionSource","rolloutId","rolloutRule","endIndex","everyoneElseRule","removeForcedVariation","__setInForcedVariationMap","experimentToVariationMap","setForcedVariation","stringValidator","REVENUE_EVENT_METRIC_NAME","VALUE_EVENT_METRIC_NAME","eventTags","rawValue","parsedRevenueValue","parsedEventValue","ENDPOINT","getCommonEventParams","commonParams","clientEngine","attributeValidator","attributeId","getImpressionEvent","impressionEvent","impressionEventParams","getConversionEvent","conversionEvent","snapshot","eventDict","eventTagUtils","eventValue","getVisitorSnapshot","buildVisitorAttributes","builtAttributes","attributesValidator","NotificationCenter","__notificationListeners","notificationTypeEnum","__listenerId","addNotificationListener","notificationType","callbackAlreadyAdded","listenerEntry","returnId","removeNotificationListener","listenerId","indexToRemove","typeToRemove","some","every","clearAllNotificationListeners","clearNotificationListeners","notificationData","userProfileServiceInstance","reqUrl","headers","responsePromise","headerName","header","setHeadersInXhr","headers_1","allHeadersString","getAllResponseHeaders","headerLines","split","headerLine","separatorIndex","headerValue","parseHeadersFromXhr","resp","responseText","config_1","REQUEST_TIMEOUT_MS","ontimeout","abort","EventEmitter","listeners","on","eventName","listener","currentListenerId","emit","removeAllListeners","BackoffController","errorCount","getDelay","BACKOFF_BASE_WAIT_SECONDS_BY_ERROR_COUNT","min","countError","reset","eventEmitter_1","backoffController_1","isSuccessStatusCode","noOpKeyValueCache","contains","HttpPollingDatafileManager","configWithDefaultsApplied","getConfigDefaults","autoUpdate","sdkKey","updateInterval","DEFAULT_UPDATE_INTERVAL","urlTemplate","DEFAULT_URL_TEMPLATE","_d","cache","cacheKey","isReadyPromiseSettled","readyPromiseResolver","readyPromiseRejecter","readyPromise","currentDatafile","resolveReadyPromise","isStarted","datafileUrl","emitter","MIN_UPDATE_INTERVAL","isValidUpdateInterval","currentTimeout","currentRequest","backoffController","syncOnCurrentRequestComplete","setDatafileFromCacheIfAvailable","syncDatafile","onReady","onRequestRejected","onRequestResolved","trySavingLastModified","getNextDatafileFromResponse","datafileUpdate","onRequestComplete","rejectReadyPromise","lastResponseLastModified","makeGetRequest","scheduleNextUpdate","currentBackoffDelay","nextUpdateDelay","tryParsingBodyAsJSON","parseResult","datafileObj","lastModifiedHeader","BrowserDatafileManager","browserRequest_1","browserDatafileManager_1","getMergedVariablesMap","featureVariablesMap","featureId","variablesObject","experimentFeatureVariables","tempVariablesIdMap","reduce","variablesMap","featureVariable","variationVariable","featureEnabled","defaultValue","getFeaturesMap","allExperiments","features","experimentsMap","getOptimizelyConfig","rolloutExperimentIds","resultMap","variationsMap","getExperimentsMap","featuresMap","getErrorMessage","maybeError","defaultMessage","ProjectConfigManager","__initialize","__updateListeners","__configObj","__optimizelyConfigObj","__readyPromise","success","reason","datafileAndSdkKeyMissingError","projectConfigCreationEx","initialDatafile","__getDatafileFromConfig","datafileManagerConfig","__validateDatafileOptions","datafileOptions","datafileManager","__onDatafileManagerReadyFulfill","__onDatafileManagerReadyReject","__onDatafileManagerUpdate","newConfigObj","newDatafile","__handleNewConfigObj","oldConfigObj","getConfig","onUpdate","Optimizely","__isOptimizelyConfigValid","isValidInstance","projectConfigManager","__disposeOnUpdate","OPTIMIZELY_CONFIG_UPDATE","projectConfigManagerReadyPromise","userProfileServiceValidator","decisionService","eventProcessor","eventProcessor.LogTierV1EventProcessor","eventFlushInterval","eventBatchSize","eventMaxQueueSize","eventProcessorStartedPromise","all","promiseResults","__readyTimeouts","__nextReadyTimeoutId","__isValidInstance","activate","__validateInputs","experiment_key","__notActivatingExperiment","shouldNotDispatchActivateLogMessage","_sendImpressionEvent","failedActivationLogMessage","buildImpressionEvent","__emitNotificationCenterActivate","impressionEventOptions","ACTIVATE","logEvent","track","event_key","eventId","buildConversionEvent","__filterEmptyValues","__emitNotificationCenterTrack","failedTrackLogMessage","conversionEventOptions","TRACK","decisionNotificationType","DECISION","decisionInfo","stringInputs","inputKeys","eventTagsValidator","isFeatureEnabled","feature_key","sourceInfo","featureInfo","source","getEnabledFeatures","enabledFeatures","getFeatureVariable","_getFeatureVariableForType","variable_key","_getFeatureVariableValueFromVariation","getFeatureVariableBoolean","getFeatureVariableDouble","getFeatureVariableInteger","getFeatureVariableString","getFeatureVariableJSON","getAllFeatureVariables","allVariables","variableValues","close","eventProcessorStoppedPromise","readyTimeoutId","readyTimeoutRecord","readyTimeout","onClose","resolveTimeoutPromise","timeoutPromise","onReadyTimeout","race","loggerPlugin","hasRetriedEvents","createInstance","setErrorHandler","setLogHandler","defaultEventDispatcher","eventProcessorConfigValidator","optimizely","addEventListener","unloadEvent","__internalResetRetryState","logging","defaultErrorHandler","setLogger"],"mappings":"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"}