{"version":3,"file":"optimizely.browser.es.js","sources":["../lib/utils/fns/index.js","../lib/utils/enums/index.js","../lib/utils/config_validator/index.js","../lib/plugins/error_handler/index.js","../lib/plugins/event_dispatcher/index.browser.js","../lib/plugins/logger/index.js","../lib/utils/attributes_validator/index.js","../lib/core/bucketer/index.js","../lib/core/project_config/index.js","../lib/core/condition_tree_evaluator/index.js","../lib/core/custom_attribute_condition_evaluator/index.js","../lib/core/audience_evaluator/index.js","../lib/utils/string_value_validator/index.js","../lib/core/decision_service/index.js","../lib/utils/event_tag_utils/index.js","../lib/core/event_builder/index.js","../lib/core/event_builder/event_helpers.js","../lib/utils/event_tags_validator/index.js","../lib/core/notification_center/index.js","../lib/utils/user_profile_service_validator/index.js","../lib/core/optimizely_config/index.js","../lib/core/project_config/project_config_manager.js","../lib/optimizely/index.js","../lib/utils/event_processor_config_validator/index.js","../lib/index.browser.js"],"sourcesContent":["/**\n * Copyright 2017, 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { generateUUID as uuid, keyBy as keyByUtil } from '@optimizely/js-sdk-utils';\n\nvar MAX_SAFE_INTEGER_LIMIT = Math.pow(2, 53);\n\nexport var assign = function (target) {\n  if (!target) {\n    return {};\n  }\n  if (typeof Object.assign === 'function') {\n    return Object.assign.apply(Object, arguments);\n  } else {\n    var to = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n      if (nextSource !== null && nextSource !== undefined) {\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  }\n};\n\nexport var currentTimestamp = function () {\n  return Math.round(new Date().getTime());\n};\n\nexport var isSafeInteger = function (number) {\n  return typeof number == 'number' && Math.abs(number) <= MAX_SAFE_INTEGER_LIMIT;\n};\n\nexport var keyBy = function (arr, key) {\n  if (!arr) return {};\n  return keyByUtil(arr, function (item) {\n    return item[key];\n  });\n};\n\nexport { uuid };\n\nexport var isNumber = function (value) {\n  return typeof value === 'number';\n};\n\nexport default {\n  assign: assign,\n  currentTimestamp: currentTimestamp,\n  isSafeInteger: isSafeInteger,\n  keyBy: keyBy,\n  uuid: uuid,\n  isNumber: isNumber,\n};\n","/****************************************************************************\n * Copyright 2016-2020, Optimizely, Inc. and contributors                   *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\nimport { NOTIFICATION_TYPES as notificationTypesEnum } from '@optimizely/js-sdk-utils';\n\n/**\n * Contains global enums used throughout the library\n */\nexport var LOG_LEVEL = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARNING: 3,\n  ERROR: 4,\n};\n\nexport var ERROR_MESSAGES = {\n  CONDITION_EVALUATOR_ERROR: '%s: Error evaluating audience condition of type %s: %s',\n  DATAFILE_AND_SDK_KEY_MISSING: '%s: You must provide at least one of sdkKey or datafile. Cannot start Optimizely',\n  EXPERIMENT_KEY_NOT_IN_DATAFILE: '%s: Experiment key %s is not in datafile.',\n  FEATURE_NOT_IN_DATAFILE: '%s: Feature key %s is not in datafile.',\n  IMPROPERLY_FORMATTED_EXPERIMENT: '%s: Experiment key %s is improperly formatted.',\n  INVALID_ATTRIBUTES: '%s: Provided attributes are in an invalid format.',\n  INVALID_BUCKETING_ID: '%s: Unable to generate hash for bucketing ID %s: %s',\n  INVALID_DATAFILE: '%s: Datafile is invalid - property %s: %s',\n  INVALID_DATAFILE_MALFORMED: '%s: Datafile is invalid because it is malformed.',\n  INVALID_JSON: '%s: JSON object is not valid.',\n  INVALID_ERROR_HANDLER: '%s: Provided \"errorHandler\" is in an invalid format.',\n  INVALID_EVENT_DISPATCHER: '%s: Provided \"eventDispatcher\" is in an invalid format.',\n  INVALID_EVENT_TAGS: '%s: Provided event tags are in an invalid format.',\n  INVALID_EXPERIMENT_KEY: '%s: Experiment key %s is not in datafile. It is either invalid, paused, or archived.',\n  INVALID_EXPERIMENT_ID: '%s: Experiment ID %s is not in datafile.',\n  INVALID_GROUP_ID: '%s: Group ID %s is not in datafile.',\n  INVALID_LOGGER: '%s: Provided \"logger\" is in an invalid format.',\n  INVALID_ROLLOUT_ID: '%s: Invalid rollout ID %s attached to feature %s',\n  INVALID_USER_ID: '%s: Provided user ID is in an invalid format.',\n  INVALID_USER_PROFILE_SERVICE: '%s: Provided user profile service instance is in an invalid format: %s.',\n  NO_DATAFILE_SPECIFIED: '%s: No datafile specified. Cannot start optimizely.',\n  NO_JSON_PROVIDED: '%s: No JSON object to validate against schema.',\n  NO_VARIATION_FOR_EXPERIMENT_KEY: '%s: No variation key %s defined in datafile for experiment %s.',\n  UNDEFINED_ATTRIBUTE: '%s: Provided attribute: %s has an undefined value.',\n  UNRECOGNIZED_ATTRIBUTE: '%s: Unrecognized attribute %s provided. Pruning before sending event to Optimizely.',\n  UNABLE_TO_CAST_VALUE: '%s: Unable to cast value %s to type %s, returning null.',\n  USER_NOT_IN_FORCED_VARIATION: '%s: User %s is not in the forced variation map. Cannot remove their forced variation.',\n  USER_PROFILE_LOOKUP_ERROR: '%s: Error while looking up user profile for user ID \"%s\": %s.',\n  USER_PROFILE_SAVE_ERROR: '%s: Error while saving user profile for user ID \"%s\": %s.',\n  VARIABLE_KEY_NOT_IN_DATAFILE: '%s: Variable with key \"%s\" associated with feature with key \"%s\" is not in datafile.',\n  VARIATION_ID_NOT_IN_DATAFILE: '%s: No variation ID %s defined in datafile for experiment %s.',\n  VARIATION_ID_NOT_IN_DATAFILE_NO_EXPERIMENT: '%s: Variation ID %s is not in the datafile.',\n  INVALID_INPUT_FORMAT: '%s: Provided %s is in an invalid format.',\n  INVALID_DATAFILE_VERSION: '%s: This version of the JavaScript SDK does not support the given datafile version: %s',\n  INVALID_VARIATION_KEY: '%s: Provided variation key is in an invalid format.',\n};\n\nexport var LOG_MESSAGES = {\n  ACTIVATE_USER: '%s: Activating user %s in experiment %s.',\n  DISPATCH_CONVERSION_EVENT: '%s: Dispatching conversion event to URL %s with params %s.',\n  DISPATCH_IMPRESSION_EVENT: '%s: Dispatching impression event to URL %s with params %s.',\n  DEPRECATED_EVENT_VALUE: '%s: Event value is deprecated in %s call.',\n  EVENT_KEY_NOT_FOUND: '%s: Event key %s is not in datafile.',\n  EXPERIMENT_NOT_RUNNING: '%s: Experiment %s is not running.',\n  FEATURE_ENABLED_FOR_USER: '%s: Feature %s is enabled for user %s.',\n  FEATURE_NOT_ENABLED_FOR_USER: '%s: Feature %s is not enabled for user %s.',\n  FEATURE_HAS_NO_EXPERIMENTS: '%s: Feature %s is not attached to any experiments.',\n  FAILED_TO_PARSE_VALUE: '%s: Failed to parse event value \"%s\" from event tags.',\n  FAILED_TO_PARSE_REVENUE: '%s: Failed to parse revenue value \"%s\" from event tags.',\n  FORCED_BUCKETING_FAILED: '%s: Variation key %s is not in datafile. Not activating user %s.',\n  INVALID_OBJECT: '%s: Optimizely object is not valid. Failing %s.',\n  INVALID_CLIENT_ENGINE: '%s: Invalid client engine passed: %s. Defaulting to node-sdk.',\n  INVALID_VARIATION_ID: '%s: Bucketed into an invalid variation ID. Returning null.',\n  NOTIFICATION_LISTENER_EXCEPTION: '%s: Notification listener for (%s) threw exception: %s',\n  NO_ROLLOUT_EXISTS: '%s: There is no rollout of feature %s.',\n  NOT_ACTIVATING_USER: '%s: Not activating user %s for experiment %s.',\n  NOT_TRACKING_USER: '%s: Not tracking user %s.',\n  PARSED_REVENUE_VALUE: '%s: Parsed revenue value \"%s\" from event tags.',\n  PARSED_NUMERIC_VALUE: '%s: Parsed event value \"%s\" from event tags.',\n  RETURNING_STORED_VARIATION:\n    '%s: Returning previously activated variation \"%s\" of experiment \"%s\" for user \"%s\" from user profile.',\n  ROLLOUT_HAS_NO_EXPERIMENTS: '%s: Rollout of feature %s has no experiments',\n  SAVED_VARIATION: '%s: Saved variation \"%s\" of experiment \"%s\" for user \"%s\".',\n  SAVED_VARIATION_NOT_FOUND:\n    '%s: User %s was previously bucketed into variation with ID %s for experiment %s, but no matching variation was found.',\n  SHOULD_NOT_DISPATCH_ACTIVATE: '%s: Experiment %s is not in \"Running\" state. Not activating user.',\n  SKIPPING_JSON_VALIDATION: '%s: Skipping JSON schema validation.',\n  TRACK_EVENT: '%s: Tracking event %s for user %s.',\n  USER_ASSIGNED_TO_EXPERIMENT_BUCKET: '%s: Assigned bucket %s to user with bucketing ID %s.',\n  USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP: '%s: User %s is in experiment %s of group %s.',\n  USER_BUCKETED_INTO_TARGETING_RULE: '%s: User %s bucketed into targeting rule %s.',\n  USER_IN_FEATURE_EXPERIMENT: '%s: User %s is in variation %s of experiment %s on the feature %s.',\n  USER_IN_ROLLOUT: '%s: User %s is in rollout of feature %s.',\n  USER_BUCKETED_INTO_EVERYONE_TARGETING_RULE: '%s: User %s bucketed into everyone targeting rule.',\n  USER_NOT_BUCKETED_INTO_EVERYONE_TARGETING_RULE:\n    '%s: User %s not bucketed into everyone targeting rule due to traffic allocation.',\n  USER_NOT_BUCKETED_INTO_EXPERIMENT_IN_GROUP: '%s: User %s is not in experiment %s of group %s.',\n  USER_NOT_BUCKETED_INTO_ANY_EXPERIMENT_IN_GROUP: '%s: User %s is not in any experiment of group %s.',\n  USER_NOT_BUCKETED_INTO_TARGETING_RULE:\n    '%s User %s not bucketed into targeting rule %s due to traffic allocation. Trying everyone rule.',\n  USER_NOT_IN_FEATURE_EXPERIMENT: '%s: User %s is not in any experiment on the feature %s.',\n  USER_NOT_IN_ROLLOUT: '%s: User %s is not in rollout of feature %s.',\n  USER_FORCED_IN_VARIATION: '%s: User %s is forced in variation %s.',\n  USER_MAPPED_TO_FORCED_VARIATION: '%s: Set variation %s for experiment %s and user %s in the forced variation map.',\n  USER_DOESNT_MEET_CONDITIONS_FOR_TARGETING_RULE: '%s: User %s does not meet conditions for targeting rule %s.',\n  USER_MEETS_CONDITIONS_FOR_TARGETING_RULE: '%s: User %s meets conditions for targeting rule %s.',\n  USER_HAS_VARIATION: '%s: User %s is in variation %s of experiment %s.',\n  USER_HAS_FORCED_VARIATION: '%s: Variation %s is mapped to experiment %s and user %s in the forced variation map.',\n  USER_HAS_NO_VARIATION: '%s: User %s is in no variation of experiment %s.',\n  USER_HAS_NO_FORCED_VARIATION: '%s: User %s is not in the forced variation map.',\n  USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT: '%s: No experiment %s mapped to user %s in the forced variation map.',\n  USER_NOT_IN_ANY_EXPERIMENT: '%s: User %s is not in any experiment of group %s.',\n  USER_NOT_IN_EXPERIMENT: '%s: User %s does not meet conditions to be in experiment %s.',\n  USER_RECEIVED_DEFAULT_VARIABLE_VALUE:\n    '%s: User \"%s\" is not in any variation or rollout rule. Returning default value for variable \"%s\" of feature flag \"%s\".',\n  FEATURE_NOT_ENABLED_RETURN_DEFAULT_VARIABLE_VALUE:\n    '%s: Feature \"%s\" is not enabled for user %s. Returning the default variable value \"%s\".',\n  VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE:\n    '%s: Variable \"%s\" is not used in variation \"%s\". Returning default value.',\n  USER_RECEIVED_VARIABLE_VALUE: '%s: Got variable value \"%s\" for variable \"%s\" of feature flag \"%s\"',\n  VALID_DATAFILE: '%s: Datafile is valid.',\n  VALID_USER_PROFILE_SERVICE: '%s: Valid user profile service provided.',\n  VARIATION_REMOVED_FOR_USER: '%s: Variation mapped to experiment %s has been removed for user %s.',\n  VARIABLE_REQUESTED_WITH_WRONG_TYPE:\n    '%s: Requested variable type \"%s\", but variable is of type \"%s\". Use correct API to retrieve value. Returning None.',\n  VALID_BUCKETING_ID: '%s: BucketingId is valid: \"%s\"',\n  BUCKETING_ID_NOT_STRING: '%s: BucketingID attribute is not a string. Defaulted to userId',\n  EVALUATING_AUDIENCE: '%s: Starting to evaluate audience \"%s\" with conditions: %s.',\n  EVALUATING_AUDIENCES_COMBINED: '%s: Evaluating audiences for %s \"%s\": %s.',\n  AUDIENCE_EVALUATION_RESULT: '%s: Audience \"%s\" evaluated to %s.',\n  AUDIENCE_EVALUATION_RESULT_COMBINED: '%s: Audiences for %s %s collectively evaluated to %s.',\n  MISSING_ATTRIBUTE_VALUE:\n    '%s: Audience condition %s evaluated to UNKNOWN because no value was passed for user attribute \"%s\".',\n  UNEXPECTED_CONDITION_VALUE:\n    '%s: Audience condition %s evaluated to UNKNOWN because the condition value is not supported.',\n  UNEXPECTED_TYPE:\n    '%s: Audience condition %s evaluated to UNKNOWN because a value of type \"%s\" was passed for user attribute \"%s\".',\n  UNEXPECTED_TYPE_NULL:\n    '%s: Audience condition %s evaluated to UNKNOWN because a null value was passed for user attribute \"%s\".',\n  UNKNOWN_CONDITION_TYPE:\n    '%s: Audience condition %s has an unknown condition type. You may need to upgrade to a newer release of the Optimizely SDK.',\n  UNKNOWN_MATCH_TYPE:\n    '%s: Audience condition %s uses an unknown match type. You may need to upgrade to a newer release of the Optimizely SDK.',\n  UPDATED_OPTIMIZELY_CONFIG: '%s: Updated Optimizely config to revision %s (project id %s)',\n  OUT_OF_BOUNDS:\n    '%s: Audience condition %s evaluated to UNKNOWN because the number value for user attribute \"%s\" is not in the range [-2^53, +2^53].',\n  UNABLE_TO_ATTACH_UNLOAD: '%s: unable to bind optimizely.close() to page unload event: \"%s\"',\n};\n\nexport var RESERVED_EVENT_KEYWORDS = {\n  REVENUE: 'revenue',\n  VALUE: 'value',\n};\n\nexport var CONTROL_ATTRIBUTES = {\n  BOT_FILTERING: '$opt_bot_filtering',\n  BUCKETING_ID: '$opt_bucketing_id',\n  STICKY_BUCKETING_KEY: '$opt_experiment_bucket_map',\n  USER_AGENT: '$opt_user_agent',\n};\n\nexport var JAVASCRIPT_CLIENT_ENGINE = 'javascript-sdk';\nexport var NODE_CLIENT_ENGINE = 'node-sdk';\nexport var REACT_CLIENT_ENGINE = 'react-sdk';\nexport var NODE_CLIENT_VERSION = '4.2.1';\n\nexport var VALID_CLIENT_ENGINES = [\n  NODE_CLIENT_ENGINE,\n  REACT_CLIENT_ENGINE,\n  JAVASCRIPT_CLIENT_ENGINE,\n];\n\nexport var NOTIFICATION_TYPES = notificationTypesEnum;\n\nexport var DECISION_NOTIFICATION_TYPES = {\n  AB_TEST: 'ab-test',\n  FEATURE: 'feature',\n  FEATURE_TEST: 'feature-test',\n  FEATURE_VARIABLE: 'feature-variable',\n  ALL_FEATURE_VARIABLES: 'all-feature-variables',\n};\n\n/*\n * Represents the source of a decision for feature management. When a feature\n * is accessed through isFeatureEnabled or getVariableValue APIs, the decision\n * source is used to decide whether to dispatch an impression event to\n * Optimizely.\n */\nexport var DECISION_SOURCES = {\n  FEATURE_TEST: 'feature-test',\n  ROLLOUT: 'rollout',\n};\n\nexport var AUDIENCE_EVALUATION_TYPES = {\n  RULE: 'rule',\n  EXPERIMENT: 'experiment',\n}\n\n/*\n * Possible types of variables attached to features\n */\nexport var FEATURE_VARIABLE_TYPES = {\n  BOOLEAN: 'boolean',\n  DOUBLE: 'double',\n  INTEGER: 'integer',\n  STRING: 'string',\n  JSON: 'json',\n};\n\n/*\n * Supported datafile versions\n */\nexport var DATAFILE_VERSIONS = {\n  V2: '2',\n  V3: '3',\n  V4: '4',\n};\n\nexport default {\n  LOG_LEVEL: LOG_LEVEL,\n  ERROR_MESSAGES: ERROR_MESSAGES,\n  LOG_MESSAGES: LOG_MESSAGES,\n  RESERVED_EVENT_KEYWORDS: RESERVED_EVENT_KEYWORDS,\n  CONTROL_ATTRIBUTES: CONTROL_ATTRIBUTES,\n  JAVASCRIPT_CLIENT_ENGINE: JAVASCRIPT_CLIENT_ENGINE,\n  NODE_CLIENT_ENGINE: NODE_CLIENT_ENGINE,\n  REACT_CLIENT_ENGINE: REACT_CLIENT_ENGINE,\n  NODE_CLIENT_VERSION: NODE_CLIENT_VERSION,\n  VALID_CLIENT_ENGINES: VALID_CLIENT_ENGINES,\n  NOTIFICATION_TYPES: NOTIFICATION_TYPES,\n  DECISION_NOTIFICATION_TYPES: DECISION_NOTIFICATION_TYPES,\n  DECISION_SOURCES: DECISION_SOURCES,\n  FEATURE_VARIABLE_TYPES: FEATURE_VARIABLE_TYPES,\n  DATAFILE_VERSIONS: DATAFILE_VERSIONS,\n  AUDIENCE_EVALUATION_TYPES: AUDIENCE_EVALUATION_TYPES\n}\n","/**\n * Copyright 2016, 2018-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport { \n  ERROR_MESSAGES, \n  DATAFILE_VERSIONS,\n} from '../enums';\n\nvar MODULE_NAME = 'CONFIG_VALIDATOR';\nvar SUPPORTED_VERSIONS = [DATAFILE_VERSIONS.V2, DATAFILE_VERSIONS.V3, DATAFILE_VERSIONS.V4];\n\n/**\n * Validates the given config options\n * @param  {Object} config\n * @param  {Object} config.errorHandler\n * @param  {Object} config.eventDispatcher\n * @param  {Object} config.logger\n * @return {Boolean} True if the config options are valid\n * @throws If any of the config options are not valid\n */\nexport var validate = function(config) {\n  if (config.errorHandler && typeof config.errorHandler.handleError !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_ERROR_HANDLER, MODULE_NAME));\n  }\n\n  if (config.eventDispatcher && typeof config.eventDispatcher.dispatchEvent !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EVENT_DISPATCHER, MODULE_NAME));\n  }\n\n  if (config.logger && typeof config.logger.log !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_LOGGER, MODULE_NAME));\n  }\n\n  return true;\n};\n\n/**\n * Validates the datafile\n * @param {string}  datafile\n * @return {Boolean} True if the datafile is valid\n * @throws If the datafile is not valid for any of the following reasons:\n - The datafile string is undefined\n - The datafile string cannot be parsed as a JSON object\n - The datafile version is not supported\n */\nexport var validateDatafile = function(datafile) {\n  if (!datafile) {\n    throw new Error(sprintf(ERROR_MESSAGES.NO_DATAFILE_SPECIFIED, MODULE_NAME));\n  }\n\n  if (typeof datafile === 'string' || datafile instanceof String) {\n    // Attempt to parse the datafile string\n    try {\n      datafile = JSON.parse(datafile);\n    } catch (ex) {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_DATAFILE_MALFORMED, MODULE_NAME));\n    }\n  }\n\n  if (SUPPORTED_VERSIONS.indexOf(datafile.version) === -1) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_DATAFILE_VERSION, MODULE_NAME, datafile.version));\n  }\n\n  return true;\n};\n\n/**\n * Provides utility methods for validating that the configuration options are valid\n */\nexport default {\n  validate: validate,\n  validateDatafile: validateDatafile,\n};\n","/**\n * Copyright 2016, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Default error handler implementation\n */\nexport var handleError = function() {\n  // no-op\n}\n\nexport default {\n  handleError,\n}\n","/**\n * Copyright 2016-2017, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar POST_METHOD = 'POST';\nvar GET_METHOD = 'GET';\nvar READYSTATE_COMPLETE = 4;\n\n/**\n * Sample event dispatcher implementation for tracking impression and conversions\n * Users of the SDK can provide their own implementation\n * @param  {Object} eventObj\n * @param  {Function} callback\n */\nexport var dispatchEvent = function(eventObj, callback) {\n  var url = eventObj.url;\n  var params = eventObj.params;\n  var req;\n  if (eventObj.httpVerb === POST_METHOD) {\n    req = new XMLHttpRequest();\n    req.open(POST_METHOD, url, true);\n    req.setRequestHeader('Content-Type', 'application/json');\n    req.onreadystatechange = function() {\n      if (req.readyState === READYSTATE_COMPLETE && callback && typeof callback === 'function') {\n        try {\n          callback({ statusCode: req.status });\n        } catch (e) {\n          // TODO: Log this somehow (consider adding a logger to the EventDispatcher interface)\n        }\n      }\n    };\n    req.send(JSON.stringify(params));\n  } else {\n    // add param for cors headers to be sent by the log endpoint\n    url += '?wxhr=true';\n    if (params) {\n      url += '&' + toQueryString(params);\n    }\n\n    req = new XMLHttpRequest();\n    req.open(GET_METHOD, url, true);\n    req.onreadystatechange = function() {\n      if (req.readyState === READYSTATE_COMPLETE && callback && typeof callback === 'function') {\n        try {\n          callback();\n        } catch (e) {\n          // TODO: Log this somehow (consider adding a logger to the EventDispatcher interface)\n        }\n      }\n    };\n    req.send();\n  }\n}\n\nvar toQueryString = function(obj) {\n  return Object.keys(obj)\n    .map(function(k) {\n      return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]);\n    })\n    .join('&');\n};\n\nexport default {\n  dispatchEvent,\n};\n","/**\n * Copyright 2016-2017, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ConsoleLogHandler } from '@optimizely/js-sdk-logging';\n\nfunction NoOpLogger() {}\n\nNoOpLogger.prototype.log = function() {};\n\nexport var createLogger = function(opts) {\n  return new ConsoleLogHandler(opts);\n};\n\nexport var createNoOpLogger = function() {\n  return new NoOpLogger();\n};\n\nexport default {\n  createLogger,\n  createNoOpLogger,\n};\n","/**\n * Copyright 2016, 2018-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport fns from '../../utils/fns';\nimport { ERROR_MESSAGES } from '../enums';\n\nvar MODULE_NAME = 'ATTRIBUTES_VALIDATOR';\n\n/**\n * Validates user's provided attributes\n * @param  {Object}  attributes\n * @return {boolean} True if the attributes are valid\n * @throws If the attributes are not valid\n */\nexport var validate = function(attributes) {\n  if (typeof attributes === 'object' && !Array.isArray(attributes) && attributes !== null) {\n    Object.keys(attributes).forEach(function(key) {\n      if (typeof attributes[key] === 'undefined') {\n        throw new Error(sprintf(ERROR_MESSAGES.UNDEFINED_ATTRIBUTE, MODULE_NAME, key));\n      }\n    });\n    return true;\n  } else {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_ATTRIBUTES, MODULE_NAME));\n  }\n};\n\nexport var isAttributeValid = function(attributeKey, attributeValue) {\n  return (\n    typeof attributeKey === 'string' &&\n    (typeof attributeValue === 'string' ||\n      typeof attributeValue === 'boolean' ||\n      (fns.isNumber(attributeValue) && fns.isSafeInteger(attributeValue)))\n  );\n};\n\n/**\n * Provides utility method for validating that the attributes user has provided are valid\n */\nexport default {\n  validate: validate,\n  isAttributeValid: isAttributeValid,\n};\n","/**\n * Copyright 2016, 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Bucketer API for determining the variation id from the specified parameters\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\nimport murmurhash from 'murmurhash';\n\nimport {\n  ERROR_MESSAGES,\n  LOG_LEVEL,\n  LOG_MESSAGES,\n} from '../../utils/enums';\n\nvar HASH_SEED = 1;\nvar MAX_HASH_VALUE = Math.pow(2, 32);\nvar MAX_TRAFFIC_VALUE = 10000;\nvar MODULE_NAME = 'BUCKETER';\nvar RANDOM_POLICY = 'random';\n\n/**\n * Determines ID of variation to be shown for the given input params\n * @param  {Object}         bucketerParams\n * @param  {string}         bucketerParams.experimentId\n * @param  {string}         bucketerParams.experimentKey\n * @param  {string}         bucketerParams.userId\n * @param  {Object[]}       bucketerParams.trafficAllocationConfig\n * @param  {Array}          bucketerParams.experimentKeyMap\n * @param  {Object}         bucketerParams.groupIdMap\n * @param  {Object}         bucketerParams.variationIdMap\n * @param  {string}         bucketerParams.varationIdMap[].key\n * @param  {Object}         bucketerParams.logger\n * @param  {string}         bucketerParams.bucketingId\n * @return Variation ID that user has been bucketed into, null if user is not bucketed into any experiment\n */\nexport var bucket = function(bucketerParams) {\n  // Check if user is in a random group; if so, check if user is bucketed into a specific experiment\n  var experiment = bucketerParams.experimentKeyMap[bucketerParams.experimentKey];\n  var groupId = experiment['groupId'];\n  if (groupId) {\n    var group = bucketerParams.groupIdMap[groupId];\n    if (!group) {\n      throw new Error(sprintf(ERROR_MESSAGES.INVALID_GROUP_ID, MODULE_NAME, groupId));\n    }\n    if (group.policy === RANDOM_POLICY) {\n      var bucketedExperimentId = this.bucketUserIntoExperiment(\n        group,\n        bucketerParams.bucketingId,\n        bucketerParams.userId,\n        bucketerParams.logger\n      );\n\n      // Return if user is not bucketed into any experiment\n      if (bucketedExperimentId === null) {\n        var notbucketedInAnyExperimentLogMessage = sprintf(\n          LOG_MESSAGES.USER_NOT_IN_ANY_EXPERIMENT,\n          MODULE_NAME,\n          bucketerParams.userId,\n          groupId\n        );\n        bucketerParams.logger.log(LOG_LEVEL.INFO, notbucketedInAnyExperimentLogMessage);\n        return null;\n      }\n\n      // Return if user is bucketed into a different experiment than the one specified\n      if (bucketedExperimentId !== bucketerParams.experimentId) {\n        var notBucketedIntoExperimentOfGroupLogMessage = sprintf(\n          LOG_MESSAGES.USER_NOT_BUCKETED_INTO_EXPERIMENT_IN_GROUP,\n          MODULE_NAME,\n          bucketerParams.userId,\n          bucketerParams.experimentKey,\n          groupId\n        );\n        bucketerParams.logger.log(LOG_LEVEL.INFO, notBucketedIntoExperimentOfGroupLogMessage);\n        return null;\n      }\n\n      // Continue bucketing if user is bucketed into specified experiment\n      var bucketedIntoExperimentOfGroupLogMessage = sprintf(\n        LOG_MESSAGES.USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP,\n        MODULE_NAME,\n        bucketerParams.userId,\n        bucketerParams.experimentKey,\n        groupId\n      );\n      bucketerParams.logger.log(LOG_LEVEL.INFO, bucketedIntoExperimentOfGroupLogMessage);\n    }\n  }\n  var bucketingId = sprintf('%s%s', bucketerParams.bucketingId, bucketerParams.experimentId);\n  var bucketValue = this._generateBucketValue(bucketingId);\n\n  var bucketedUserLogMessage = sprintf(\n    LOG_MESSAGES.USER_ASSIGNED_TO_EXPERIMENT_BUCKET,\n    MODULE_NAME,\n    bucketValue,\n    bucketerParams.userId\n  );\n  bucketerParams.logger.log(LOG_LEVEL.DEBUG, bucketedUserLogMessage);\n\n  var entityId = this._findBucket(bucketValue, bucketerParams.trafficAllocationConfig);\n\n  if (!bucketerParams.variationIdMap.hasOwnProperty(entityId)) {\n    if (entityId) {\n      var invalidVariationIdLogMessage = sprintf(LOG_MESSAGES.INVALID_VARIATION_ID, MODULE_NAME);\n      bucketerParams.logger.log(LOG_LEVEL.WARNING, invalidVariationIdLogMessage);\n    }\n    return null;\n  }\n\n  return entityId;\n};\n\n/**\n * Returns bucketed experiment ID to compare against experiment user is being called into\n * @param {Object} group        Group that experiment is in\n * @param {string} bucketingId  Bucketing ID\n * @param {string} userId       ID of user to be bucketed into experiment\n * @param {Object} logger       Logger implementation\n * @return {string|null} ID of experiment if user is bucketed into experiment within the group, null otherwise\n */\nexport var bucketUserIntoExperiment = function(group, bucketingId, userId, logger) {\n  var bucketingKey = sprintf('%s%s', bucketingId, group.id);\n  var bucketValue = this._generateBucketValue(bucketingKey);\n  logger.log(\n    LOG_LEVEL.DEBUG,\n    sprintf(LOG_MESSAGES.USER_ASSIGNED_TO_EXPERIMENT_BUCKET, MODULE_NAME, bucketValue, userId)\n  );\n  var trafficAllocationConfig = group.trafficAllocation;\n  var bucketedExperimentId = this._findBucket(bucketValue, trafficAllocationConfig);\n  return bucketedExperimentId;\n};\n\n/**\n * Returns entity ID associated with bucket value\n * @param  {string}   bucketValue\n * @param  {Object[]} trafficAllocationConfig\n * @param  {number}   trafficAllocationConfig[].endOfRange\n * @param  {number}   trafficAllocationConfig[].entityId\n * @return {string|null}   Entity ID for bucketing if bucket value is within traffic allocation boundaries, null otherwise\n */\nexport var _findBucket = function(bucketValue, trafficAllocationConfig) {\n  for (var i = 0; i < trafficAllocationConfig.length; i++) {\n    if (bucketValue < trafficAllocationConfig[i].endOfRange) {\n      return trafficAllocationConfig[i].entityId;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper function to generate bucket value in half-closed interval [0, MAX_TRAFFIC_VALUE)\n * @param  {string} bucketingKey String value for bucketing\n * @return {string} the generated bucket value\n * @throws If bucketing value is not a valid string\n */\nexport var _generateBucketValue = function(bucketingKey) {\n  try {\n    // NOTE: the mmh library already does cast the hash value as an unsigned 32bit int\n    // https://github.com/perezd/node-murmurhash/blob/master/murmurhash.js#L115\n    var hashValue = murmurhash.v3(bucketingKey, HASH_SEED);\n    var ratio = hashValue / MAX_HASH_VALUE;\n    return parseInt(ratio * MAX_TRAFFIC_VALUE, 10);\n  } catch (ex) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_BUCKETING_ID, MODULE_NAME, bucketingKey, ex.message));\n  }\n};\n\nexport default {\n  bucket: bucket,\n  bucketUserIntoExperiment: bucketUserIntoExperiment,\n  _findBucket: _findBucket,\n  _generateBucketValue: _generateBucketValue,\n};\n","/**\n * Copyright 2016-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf, objectValues } from '@optimizely/js-sdk-utils';\n\nimport fns from '../../utils/fns';\nimport {\n  ERROR_MESSAGES,\n  LOG_MESSAGES,\n  LOG_LEVEL,\n  FEATURE_VARIABLE_TYPES,\n} from '../../utils/enums';\nimport configValidator from '../../utils/config_validator';\n\nvar EXPERIMENT_RUNNING_STATUS = 'Running';\nvar RESERVED_ATTRIBUTE_PREFIX = '$opt_';\nvar MODULE_NAME = 'PROJECT_CONFIG';\n\nfunction createMutationSafeDatafileCopy(datafile) {\n  var datafileCopy = fns.assign({}, datafile);\n  datafileCopy.audiences = (datafile.audiences || []).map(function(audience) {\n    return fns.assign({}, audience);\n  });\n  datafileCopy.experiments = (datafile.experiments || []).map(function(experiment) {\n    return fns.assign({}, experiment);\n  });\n  datafileCopy.featureFlags = (datafile.featureFlags || []).map(function(featureFlag) {\n    return fns.assign({}, featureFlag);\n  });\n  datafileCopy.groups = (datafile.groups || []).map(function(group) {\n    var groupCopy = fns.assign({}, group);\n    groupCopy.experiments = (group.experiments || []).map(function(experiment) {\n      return fns.assign({}, experiment);\n    });\n    return groupCopy;\n  });\n  datafileCopy.rollouts = (datafile.rollouts || []).map(function(rollout) {\n    var rolloutCopy = fns.assign({}, rollout);\n    rolloutCopy.experiments = (rollout.experiments || []).map(function(experiment) {\n      return fns.assign({}, experiment);\n    });\n    return rolloutCopy;\n  });\n  return datafileCopy;\n}\n\n/**\n * Creates projectConfig object to be used for quick project property lookup\n * @param  {Object} datafile JSON datafile representing the project\n * @return {Object} Object representing project configuration\n */\nexport var createProjectConfig = function(datafile) {\n  var projectConfig = createMutationSafeDatafileCopy(datafile);\n\n  /*\n   * Conditions of audiences in projectConfig.typedAudiences are not\n   * expected to be string-encoded as they are here in projectConfig.audiences.\n   */\n  (projectConfig.audiences || []).forEach(function(audience) {\n    audience.conditions = JSON.parse(audience.conditions);\n  });\n  projectConfig.audiencesById = fns.keyBy(projectConfig.audiences, 'id');\n  fns.assign(projectConfig.audiencesById, fns.keyBy(projectConfig.typedAudiences, 'id'));\n\n  projectConfig.attributeKeyMap = fns.keyBy(projectConfig.attributes, 'key');\n  projectConfig.eventKeyMap = fns.keyBy(projectConfig.events, 'key');\n  projectConfig.groupIdMap = fns.keyBy(projectConfig.groups, 'id');\n\n  var experiments;\n  Object.keys(projectConfig.groupIdMap || {}).forEach(function(Id) {\n    experiments = projectConfig.groupIdMap[Id].experiments;\n    (experiments || []).forEach(function(experiment) {\n      projectConfig.experiments.push(fns.assign(experiment, { groupId: Id }));\n    });\n  });\n\n  projectConfig.rolloutIdMap = fns.keyBy(projectConfig.rollouts || [], 'id');\n  objectValues(projectConfig.rolloutIdMap || {}).forEach(function (rollout) {\n    (rollout.experiments || []).forEach(function(experiment) {\n      projectConfig.experiments.push(experiment);\n      // Creates { <variationKey>: <variation> } map inside of the experiment\n      experiment.variationKeyMap = fns.keyBy(experiment.variations, 'key');\n    });\n  });\n\n  projectConfig.experimentKeyMap = fns.keyBy(projectConfig.experiments, 'key');\n  projectConfig.experimentIdMap = fns.keyBy(projectConfig.experiments, 'id');\n\n  projectConfig.variationIdMap = {};\n  projectConfig.variationVariableUsageMap = {};\n  (projectConfig.experiments || []).forEach(function(experiment) {\n    // Creates { <variationKey>: <variation> } map inside of the experiment\n    experiment.variationKeyMap = fns.keyBy(experiment.variations, 'key');\n\n    // Creates { <variationId>: { key: <variationKey>, id: <variationId> } } mapping for quick lookup\n    fns.assign(projectConfig.variationIdMap, fns.keyBy(experiment.variations, 'id'));\n    objectValues(experiment.variationKeyMap || {}).forEach(function(variation) {\n      if (variation.variables) {\n        projectConfig.variationVariableUsageMap[variation.id] = fns.keyBy(variation.variables, 'id');\n      }\n    });\n  });\n\n  // Object containing experiment Ids that exist in any feature\n  // for checking that experiment is a feature experiment or not.\n  projectConfig.experimentFeatureMap = {};\n\n  projectConfig.featureKeyMap = fns.keyBy(projectConfig.featureFlags || [], 'key');\n  objectValues(projectConfig.featureKeyMap || {}).forEach(function(feature) {\n    // Json type is represented in datafile as a subtype of string for the sake of backwards compatibility.\n    // Converting it to a first-class json type while creating Project Config\n    feature.variables.forEach(function(variable) {\n      if (variable.type === FEATURE_VARIABLE_TYPES.STRING && variable.subType === FEATURE_VARIABLE_TYPES.JSON) {\n        variable.type = FEATURE_VARIABLE_TYPES.JSON;\n        delete variable.subType;\n      }\n    });\n\n    feature.variableKeyMap = fns.keyBy(feature.variables, 'key');\n    (feature.experimentIds || []).forEach(function(experimentId) {\n      // Add this experiment in experiment-feature map.\n      if (projectConfig.experimentFeatureMap[experimentId]) {\n        projectConfig.experimentFeatureMap[experimentId].push(feature.id);\n      } else {\n        projectConfig.experimentFeatureMap[experimentId] = [feature.id];\n      }\n\n      var experimentInFeature = projectConfig.experimentIdMap[experimentId];\n      // Experiments in feature can only belong to one mutex group.\n      if (experimentInFeature.groupId && !feature.groupId) {\n        feature.groupId = experimentInFeature.groupId;\n      }\n    });\n  });\n\n  return projectConfig;\n};\n\n/**\n * Get experiment ID for the provided experiment key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Experiment key for which ID is to be determined\n * @return {string} Experiment ID corresponding to the provided experiment key\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentId = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n  return experiment.id;\n};\n\n/**\n * Get layer ID for the provided experiment key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentId Experiment ID for which layer ID is to be determined\n * @return {string} Layer ID corresponding to the provided experiment key\n * @throws If experiment key is not in datafile\n */\nexport var getLayerId = function(projectConfig, experimentId) {\n  var experiment = projectConfig.experimentIdMap[experimentId];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_ID, MODULE_NAME, experimentId));\n  }\n  return experiment.layerId;\n};\n\n/**\n * Get attribute ID for the provided attribute key\n * @param  {Object}      projectConfig Object representing project configuration\n * @param  {string}      attributeKey  Attribute key for which ID is to be determined\n * @param  {Object}      logger\n * @return {string|null} Attribute ID corresponding to the provided attribute key. Attribute key if it is a reserved attribute.\n */\nexport var getAttributeId = function(projectConfig, attributeKey, logger) {\n  var attribute = projectConfig.attributeKeyMap[attributeKey];\n  var hasReservedPrefix = attributeKey.indexOf(RESERVED_ATTRIBUTE_PREFIX) === 0;\n  if (attribute) {\n    if (hasReservedPrefix) {\n      logger.log(\n        LOG_LEVEL.WARN,\n        sprintf(\n          'Attribute %s unexpectedly has reserved prefix %s; using attribute ID instead of reserved attribute name.',\n          attributeKey,\n          RESERVED_ATTRIBUTE_PREFIX\n        )\n      );\n    }\n    return attribute.id;\n  } else if (hasReservedPrefix) {\n    return attributeKey;\n  }\n\n  logger.log(LOG_LEVEL.DEBUG, sprintf(ERROR_MESSAGES.UNRECOGNIZED_ATTRIBUTE, MODULE_NAME, attributeKey));\n  return null;\n};\n\n/**\n * Get event ID for the provided\n * @param  {Object}      projectConfig Object representing project configuration\n * @param  {string}      eventKey      Event key for which ID is to be determined\n * @return {string|null} Event ID corresponding to the provided event key\n */\nexport var getEventId = function(projectConfig, eventKey) {\n  var event = projectConfig.eventKeyMap[eventKey];\n  if (event) {\n    return event.id;\n  }\n  return null;\n};\n\n/**\n * Get experiment status for the provided experiment key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Experiment key for which status is to be determined\n * @return {string} Experiment status corresponding to the provided experiment key\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentStatus = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n  return experiment.status;\n};\n\n/**\n * Returns whether experiment has a status of 'Running'\n * @param  {Object}  projectConfig Object representing project configuration\n * @param  {string}  experimentKey Experiment key for which status is to be compared with 'Running'\n * @return {Boolean}               true if experiment status is set to 'Running', false otherwise\n */\nexport var isActive = function(projectConfig, experimentKey) {\n  return this.getExperimentStatus(projectConfig, experimentKey) === EXPERIMENT_RUNNING_STATUS;\n};\n\n/**\n * Determine for given experiment if event is running, which determines whether should be dispatched or not\n */\nexport var isRunning = function(projectConfig, experimentKey) {\n  return this.getExperimentStatus(projectConfig, experimentKey) === EXPERIMENT_RUNNING_STATUS;\n};\n\n/**\n * Get audience conditions for the experiment\n * @param  {Object}         projectConfig Object representing project configuration\n * @param  {string}         experimentKey Experiment key for which audience conditions are to be determined\n * @return {Array}          Audience conditions for the experiment - can be an array of audience IDs, or a\n *                          nested array of conditions\n *                          Examples: [\"5\", \"6\"], [\"and\", [\"or\", \"1\", \"2\"], \"3\"]\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentAudienceConditions = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n\n  return experiment.audienceConditions || experiment.audienceIds;\n};\n\n/**\n * Get variation key given experiment key and variation ID\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} variationId   ID of the variation\n * @return {string} Variation key or null if the variation ID is not found\n */\nexport var getVariationKeyFromId = function(projectConfig, variationId) {\n  if (projectConfig.variationIdMap.hasOwnProperty(variationId)) {\n    return projectConfig.variationIdMap[variationId].key;\n  }\n  return null;\n};\n\n/**\n * Get the variation ID given the experiment key and variation key\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Key of the experiment the variation belongs to\n * @param  {string} variationKey  The variation key\n * @return {string} the variation ID\n */\nexport var getVariationIdFromExperimentAndVariationKey = function(projectConfig, experimentKey, variationKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (experiment.variationKeyMap.hasOwnProperty(variationKey)) {\n    return experiment.variationKeyMap[variationKey].id;\n  }\n  return null;\n};\n\n/**\n * Get experiment from provided experiment key\n * @param  {Object} projectConfig  Object representing project configuration\n * @param  {string} experimentKey  Event key for which experiment IDs are to be retrieved\n * @return {Object} experiment\n * @throws If experiment key is not in datafile\n */\nexport var getExperimentFromKey = function(projectConfig, experimentKey) {\n  if (projectConfig.experimentKeyMap.hasOwnProperty(experimentKey)) {\n    var experiment = projectConfig.experimentKeyMap[experimentKey];\n    if (experiment) {\n      return experiment;\n    }\n  }\n\n  throw new Error(sprintf(ERROR_MESSAGES.EXPERIMENT_KEY_NOT_IN_DATAFILE, MODULE_NAME, experimentKey));\n};\n\n/**\n * Given an experiment key, returns the traffic allocation within that experiment\n * @param  {Object} projectConfig Object representing project configuration\n * @param  {string} experimentKey Key representing the experiment\n * @return {Array<Object>}        Traffic allocation for the experiment\n * @throws If experiment key is not in datafile\n */\nexport var getTrafficAllocation = function(projectConfig, experimentKey) {\n  var experiment = projectConfig.experimentKeyMap[experimentKey];\n  if (!experiment) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey));\n  }\n  return experiment.trafficAllocation;\n};\n\n/**\n * Get experiment from provided experiment id. Log an error if no experiment\n * exists in the project config with the given ID.\n * @param  {Object} projectConfig  Object representing project configuration\n * @param  {string} experimentId  ID of desired experiment object\n * @return {Object} Experiment object\n */\nexport var getExperimentFromId = function(projectConfig, experimentId, logger) {\n  if (projectConfig.experimentIdMap.hasOwnProperty(experimentId)) {\n    var experiment = projectConfig.experimentIdMap[experimentId];\n    if (experiment) {\n      return experiment;\n    }\n  }\n\n  logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_ID, MODULE_NAME, experimentId));\n  return null;\n};\n\n/**\n * Get feature from provided feature key. Log an error if no feature exists in\n * the project config with the given key.\n * @param {Object} projectConfig\n * @param {string} featureKey\n * @param {Object} logger\n * @return {Object|null} Feature object, or null if no feature with the given\n * key exists\n */\nexport var getFeatureFromKey = function(projectConfig, featureKey, logger) {\n  if (projectConfig.featureKeyMap.hasOwnProperty(featureKey)) {\n    var feature = projectConfig.featureKeyMap[featureKey];\n    if (feature) {\n      return feature;\n    }\n  }\n\n  logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.FEATURE_NOT_IN_DATAFILE, MODULE_NAME, featureKey));\n  return null;\n};\n\n/**\n * Get the variable with the given key associated with the feature with the\n * given key. If the feature key or the variable key are invalid, log an error\n * message.\n * @param {Object} projectConfig\n * @param {string} featureKey\n * @param {string} variableKey\n * @param {Object} logger\n * @return {Object|null} Variable object, or null one or both of the given\n * feature and variable keys are invalid\n */\nexport var getVariableForFeature = function(projectConfig, featureKey, variableKey, logger) {\n  var feature = projectConfig.featureKeyMap[featureKey];\n  if (!feature) {\n    logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.FEATURE_NOT_IN_DATAFILE, MODULE_NAME, featureKey));\n    return null;\n  }\n\n  var variable = feature.variableKeyMap[variableKey];\n  if (!variable) {\n    logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.VARIABLE_KEY_NOT_IN_DATAFILE, MODULE_NAME, variableKey, featureKey)\n    );\n    return null;\n  }\n\n  return variable;\n};\n\n/**\n * Get the value of the given variable for the given variation. If the given\n * variable has no value for the given variation, return null. Log an error message if the variation is invalid. If the\n * variable or variation are invalid, return null.\n * @param {Object} projectConfig\n * @param {Object} variable\n * @param {Object} variation\n * @param {Object} logger\n * @return {string|null} The value of the given variable for the given\n * variation, or null if the given variable has no value\n * for the given variation or if the variation or variable are invalid\n */\nexport var getVariableValueForVariation = function(projectConfig, variable, variation, logger) {\n  if (!variable || !variation) {\n    return null;\n  }\n\n  if (!projectConfig.variationVariableUsageMap.hasOwnProperty(variation.id)) {\n    logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.VARIATION_ID_NOT_IN_DATAFILE_NO_EXPERIMENT, MODULE_NAME, variation.id)\n    );\n    return null;\n  }\n\n  var variableUsages = projectConfig.variationVariableUsageMap[variation.id];\n  var variableUsage = variableUsages[variable.id];\n\n  return variableUsage ? variableUsage.value : null;\n};\n\n/**\n * Given a variable value in string form, try to cast it to the argument type.\n * If the type cast succeeds, return the type casted value, otherwise log an\n * error and return null.\n * @param {string} variableValue  Variable value in string form\n * @param {string} variableType   Type of the variable whose value was passed\n *                                in the first argument. Must be one of\n *                                FEATURE_VARIABLE_TYPES in\n *                                lib/utils/enums/index.js. The return value's\n *                                type is determined by this argument (boolean\n *                                for BOOLEAN, number for INTEGER or DOUBLE,\n *                                and string for STRING).\n * @param {Object} logger         Logger instance\n * @returns {*}                   Variable value of the appropriate type, or\n *                                null if the type cast failed\n */\nexport var getTypeCastValue = function(variableValue, variableType, logger) {\n  var castValue;\n\n  switch (variableType) {\n    case FEATURE_VARIABLE_TYPES.BOOLEAN:\n      if (variableValue !== 'true' && variableValue !== 'false') {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      } else {\n        castValue = variableValue === 'true';\n      }\n      break;\n\n    case FEATURE_VARIABLE_TYPES.INTEGER:\n      castValue = parseInt(variableValue, 10);\n      if (isNaN(castValue)) {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      }\n      break;\n\n    case FEATURE_VARIABLE_TYPES.DOUBLE:\n      castValue = parseFloat(variableValue);\n      if (isNaN(castValue)) {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      }\n      break;\n\n    case FEATURE_VARIABLE_TYPES.JSON:\n      try {\n        castValue = JSON.parse(variableValue);\n      } catch (e) {\n        logger.log(\n          LOG_LEVEL.ERROR,\n          sprintf(ERROR_MESSAGES.UNABLE_TO_CAST_VALUE, MODULE_NAME, variableValue, variableType)\n        );\n        castValue = null;\n      }\n      break;\n\n    default:\n      // type is STRING\n      castValue = variableValue;\n      break;\n  }\n\n  return castValue;\n};\n\n/**\n * Returns an object containing all audiences in the project config. Keys are audience IDs\n * and values are audience objects.\n * @param projectConfig\n * @returns {Object}\n */\nexport var getAudiencesById = function(projectConfig) {\n  return projectConfig.audiencesById;\n};\n\n/**\n * Returns true if an event with the given key exists in the datafile, and false otherwise\n * @param {Object} projectConfig\n * @param {string} eventKey\n * @returns {boolean}\n */\nexport var eventWithKeyExists = function(projectConfig, eventKey) {\n  return projectConfig.eventKeyMap.hasOwnProperty(eventKey);\n};\n\n/**\n *\n * @param {Object} projectConfig\n * @param {string} experimentId\n * @returns {boolean} Returns true if experiment belongs to\n * any feature, false otherwise.\n */\nexport var isFeatureExperiment = function(projectConfig, experimentId) {\n  return projectConfig.experimentFeatureMap.hasOwnProperty(experimentId);\n};\n\n/**\n * Try to create a project config object from the given datafile and\n * configuration properties.\n * If successful, return the project config object, otherwise throws an error\n * @param  {Object} config\n * @param  {Object} config.datafile\n * @param  {Object} config.jsonSchemaValidator\n * @param  {Object} config.logger\n * @return {Object} Project config object\n */\nexport var tryCreatingProjectConfig = function(config) {\n  configValidator.validateDatafile(config.datafile);\n  if (!config.jsonSchemaValidator) {\n    config.logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.SKIPPING_JSON_VALIDATION, MODULE_NAME));\n  } else {\n    config.jsonSchemaValidator.validate(config.datafile);\n    config.logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.VALID_DATAFILE, MODULE_NAME));\n  }\n  return this.createProjectConfig(config.datafile);\n};\n\nexport default {\n  createProjectConfig: createProjectConfig,\n  getExperimentId: getExperimentId,\n  getLayerId: getLayerId,\n  getAttributeId: getAttributeId,\n  getEventId: getEventId,\n  getExperimentStatus: getExperimentStatus,\n  isActive: isActive,\n  isRunning: isRunning,\n  getExperimentAudienceConditions: getExperimentAudienceConditions,\n  getVariationKeyFromId: getVariationKeyFromId,\n  getVariationIdFromExperimentAndVariationKey: getVariationIdFromExperimentAndVariationKey,\n  getExperimentFromKey: getExperimentFromKey,\n  getTrafficAllocation: getTrafficAllocation,\n  getExperimentFromId: getExperimentFromId,\n  getFeatureFromKey: getFeatureFromKey,\n  getVariableForFeature: getVariableForFeature,\n  getVariableValueForVariation: getVariableValueForVariation,\n  getTypeCastValue: getTypeCastValue,\n  getAudiencesById: getAudiencesById,\n  eventWithKeyExists: eventWithKeyExists,\n  isFeatureExperiment: isFeatureExperiment,\n  tryCreatingProjectConfig: tryCreatingProjectConfig,\n};\n","/****************************************************************************\n * Copyright 2018, 2020, Optimizely, Inc. and contributors                  *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\nvar AND_CONDITION = 'and';\nvar OR_CONDITION = 'or';\nvar NOT_CONDITION = 'not';\n\nvar DEFAULT_OPERATOR_TYPES = [AND_CONDITION, OR_CONDITION, NOT_CONDITION];\n\n/**\n * Top level method to evaluate conditions\n * @param  {Array|*}    conditions      Nested array of and/or conditions, or a single leaf\n *                                      condition value of any type\n *                                      Example: ['and', '0', ['or', '1', '2']]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition\n *                                      values\n * @return {?Boolean}                   Result of evaluating the conditions using the operator\n *                                      rules and the leaf evaluator. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated\n */\nexport var evaluate = function(conditions, leafEvaluator) {\n  if (Array.isArray(conditions)) {\n    var firstOperator = conditions[0];\n    var restOfConditions = conditions.slice(1);\n\n    if (DEFAULT_OPERATOR_TYPES.indexOf(firstOperator) === -1) {\n      // Operator to apply is not explicit - assume 'or'\n      firstOperator = OR_CONDITION;\n      restOfConditions = conditions;\n    }\n\n    switch (firstOperator) {\n      case AND_CONDITION:\n        return andEvaluator(restOfConditions, leafEvaluator);\n      case NOT_CONDITION:\n        return notEvaluator(restOfConditions, leafEvaluator);\n      default:\n        // firstOperator is OR_CONDITION\n        return orEvaluator(restOfConditions, leafEvaluator);\n    }\n  }\n\n  var leafCondition = conditions;\n  return leafEvaluator(leafCondition);\n};\n\n/**\n * Evaluates an array of conditions as if the evaluator had been applied\n * to each entry and the results AND-ed together.\n * @param  {Array}      conditions      Array of conditions ex: [operand_1, operand_2]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition values\n * @return {?Boolean}                   Result of evaluating the conditions. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated.\n */\nfunction andEvaluator(conditions, leafEvaluator) {\n  var sawNullResult = false;\n  for (var i = 0; i < conditions.length; i++) {\n    var conditionResult = evaluate(conditions[i], leafEvaluator);\n    if (conditionResult === false) {\n      return false;\n    }\n    if (conditionResult === null) {\n      sawNullResult = true;\n    }\n  }\n  return sawNullResult ? null : true;\n}\n\n/**\n * Evaluates an array of conditions as if the evaluator had been applied\n * to a single entry and NOT was applied to the result.\n * @param  {Array}      conditions      Array of conditions ex: [operand_1]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition values\n * @return {?Boolean}                   Result of evaluating the conditions. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated.\n */\nfunction notEvaluator(conditions, leafEvaluator) {\n  if (conditions.length > 0) {\n    var result = evaluate(conditions[0], leafEvaluator);\n    return result === null ? null : !result;\n  }\n  return null;\n}\n\n/**\n * Evaluates an array of conditions as if the evaluator had been applied\n * to each entry and the results OR-ed together.\n * @param  {Array}      conditions      Array of conditions ex: [operand_1, operand_2]\n * @param  {Function}   leafEvaluator   Function which will be called to evaluate leaf condition values\n * @return {?Boolean}                   Result of evaluating the conditions. A return value of null\n *                                      indicates that the conditions are invalid or unable to be\n *                                      evaluated.\n */\nfunction orEvaluator(conditions, leafEvaluator) {\n  var sawNullResult = false;\n  for (var i = 0; i < conditions.length; i++) {\n    var conditionResult = evaluate(conditions[i], leafEvaluator);\n    if (conditionResult === true) {\n      return true;\n    }\n    if (conditionResult === null) {\n      sawNullResult = true;\n    }\n  }\n  return sawNullResult ? null : false;\n}\n\nexport default {\n  evaluate: evaluate,\n};\n","/****************************************************************************\n * Copyright 2018-2019, 2020 Optimizely, Inc. and contributors              *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport fns from '../../utils/fns';\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n} from '../../utils/enums';\n\nvar MODULE_NAME = 'CUSTOM_ATTRIBUTE_CONDITION_EVALUATOR';\n\nvar EXACT_MATCH_TYPE = 'exact';\nvar EXISTS_MATCH_TYPE = 'exists';\nvar GREATER_THAN_MATCH_TYPE = 'gt';\nvar LESS_THAN_MATCH_TYPE = 'lt';\nvar SUBSTRING_MATCH_TYPE = 'substring';\n\nvar MATCH_TYPES = [\n  EXACT_MATCH_TYPE,\n  EXISTS_MATCH_TYPE,\n  GREATER_THAN_MATCH_TYPE,\n  LESS_THAN_MATCH_TYPE,\n  SUBSTRING_MATCH_TYPE,\n];\n\nvar EVALUATORS_BY_MATCH_TYPE = {};\nEVALUATORS_BY_MATCH_TYPE[EXACT_MATCH_TYPE] = exactEvaluator;\nEVALUATORS_BY_MATCH_TYPE[EXISTS_MATCH_TYPE] = existsEvaluator;\nEVALUATORS_BY_MATCH_TYPE[GREATER_THAN_MATCH_TYPE] = greaterThanEvaluator;\nEVALUATORS_BY_MATCH_TYPE[LESS_THAN_MATCH_TYPE] = lessThanEvaluator;\nEVALUATORS_BY_MATCH_TYPE[SUBSTRING_MATCH_TYPE] = substringEvaluator;\n\n/**\n * Given a custom attribute audience condition and user attributes, evaluate the\n * condition against the attributes.\n * @param  {Object}     condition\n * @param  {Object}     userAttributes\n * @param  {Object}     logger\n * @return {?Boolean}   true/false if the given user attributes match/don't match the given condition,\n *                                      null if the given user attributes and condition can't be evaluated\n * TODO: Change to accept and object with named properties\n */\nexport var evaluate = function(condition, userAttributes, logger) {\n  var conditionMatch = condition.match;\n  if (typeof conditionMatch !== 'undefined' && MATCH_TYPES.indexOf(conditionMatch) === -1) {\n    logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.UNKNOWN_MATCH_TYPE, MODULE_NAME, JSON.stringify(condition)));\n    return null;\n  }\n\n  var attributeKey = condition.name;\n  if (!userAttributes.hasOwnProperty(attributeKey) && conditionMatch != EXISTS_MATCH_TYPE) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.MISSING_ATTRIBUTE_VALUE, MODULE_NAME, JSON.stringify(condition), attributeKey)\n    );\n    return null;\n  }\n\n  var evaluatorForMatch = EVALUATORS_BY_MATCH_TYPE[conditionMatch] || exactEvaluator;\n  return evaluatorForMatch(condition, userAttributes, logger);\n};\n\n/**\n * Returns true if the value is valid for exact conditions. Valid values include\n * strings, booleans, and numbers that aren't NaN, -Infinity, or Infinity.\n * @param value\n * @returns {Boolean}\n */\nfunction isValueTypeValidForExactConditions(value) {\n  return typeof value === 'string' || typeof value === 'boolean' || fns.isNumber(value);\n}\n\n/**\n * Evaluate the given exact match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @return  {?Boolean}  true if the user attribute value is equal (===) to the condition value,\n *                      false if the user attribute value is not equal (!==) to the condition value,\n *                      null if the condition value or user attribute value has an invalid type, or\n *                      if there is a mismatch between the user attribute type and the condition value\n *                      type\n */\nfunction exactEvaluator(condition, userAttributes, logger) {\n  var conditionValue = condition.value;\n  var conditionValueType = typeof conditionValue;\n  var conditionName = condition.name;\n  var userValue = userAttributes[conditionName];\n  var userValueType = typeof userValue;\n\n  if (\n    !isValueTypeValidForExactConditions(conditionValue) ||\n    (fns.isNumber(conditionValue) && !fns.isSafeInteger(conditionValue))\n  ) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (!isValueTypeValidForExactConditions(userValue) || conditionValueType !== userValueType) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  if (fns.isNumber(userValue) && !fns.isSafeInteger(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.OUT_OF_BOUNDS, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  return conditionValue === userValue;\n}\n\n/**\n * Evaluate the given exists match condition for the given user attributes\n * @param   {Object}  condition\n * @param   {Object}  userAttributes\n * @returns {Boolean} true if both:\n *                      1) the user attributes have a value for the given condition, and\n *                      2) the user attribute value is neither null nor undefined\n *                    Returns false otherwise\n */\nfunction existsEvaluator(condition, userAttributes) {\n  var userValue = userAttributes[condition.name];\n  return typeof userValue !== 'undefined' && userValue !== null;\n}\n\n/**\n * Evaluate the given greater than match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @returns {?Boolean}  true if the user attribute value is greater than the condition value,\n *                      false if the user attribute value is less than or equal to the condition value,\n *                      null if the condition value isn't a number or the user attribute value\n *                      isn't a number\n */\nfunction greaterThanEvaluator(condition, userAttributes, logger) {\n  var conditionName = condition.name;\n  var userValue = userAttributes[conditionName];\n  var userValueType = typeof userValue;\n  var conditionValue = condition.value;\n\n  if (!fns.isSafeInteger(conditionValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isNumber(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isSafeInteger(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.OUT_OF_BOUNDS, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  return userValue > conditionValue;\n}\n\n/**\n * Evaluate the given less than match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @returns {?Boolean}  true if the user attribute value is less than the condition value,\n *                      false if the user attribute value is greater than or equal to the condition value,\n *                      null if the condition value isn't a number or the user attribute value isn't a\n *                      number\n */\nfunction lessThanEvaluator(condition, userAttributes, logger) {\n  var conditionName = condition.name;\n  var userValue = userAttributes[condition.name];\n  var userValueType = typeof userValue;\n  var conditionValue = condition.value;\n\n  if (!fns.isSafeInteger(conditionValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isNumber(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  if (!fns.isSafeInteger(userValue)) {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.OUT_OF_BOUNDS, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  return userValue < conditionValue;\n}\n\n/**\n * Evaluate the given substring match condition for the given user attributes\n * @param   {Object}    condition\n * @param   {Object}    userAttributes\n * @param   {Object}    logger\n * @returns {?Boolean}  true if the condition value is a substring of the user attribute value,\n *                      false if the condition value is not a substring of the user attribute value,\n *                      null if the condition value isn't a string or the user attribute value\n *                      isn't a string\n */\nfunction substringEvaluator(condition, userAttributes, logger) {\n  var conditionName = condition.name;\n  var userValue = userAttributes[condition.name];\n  var userValueType = typeof userValue;\n  var conditionValue = condition.value;\n\n  if (typeof conditionValue !== 'string') {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_CONDITION_VALUE, MODULE_NAME, JSON.stringify(condition))\n    );\n    return null;\n  }\n\n  if (userValue === null) {\n    logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE_NULL, MODULE_NAME, JSON.stringify(condition), conditionName)\n    );\n    return null;\n  }\n\n  if (typeof userValue !== 'string') {\n    logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.UNEXPECTED_TYPE, MODULE_NAME, JSON.stringify(condition), userValueType, conditionName)\n    );\n    return null;\n  }\n\n  return userValue.indexOf(conditionValue) !== -1;\n}\n\nexport default {\n  evaluate: evaluate,\n};\n","/**\n * Copyright 2016, 2018-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\nimport { getLogger } from '@optimizely/js-sdk-logging';\n\nimport fns from '../../utils/fns';\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n  ERROR_MESSAGES,\n} from '../../utils/enums';\nimport conditionTreeEvaluator from '../condition_tree_evaluator';\nimport customAttributeConditionEvaluator from '../custom_attribute_condition_evaluator';\n\nvar logger = getLogger();\nvar MODULE_NAME = 'AUDIENCE_EVALUATOR';\n\n/**\n * Construct an instance of AudienceEvaluator with given options\n * @param {Object=} UNSTABLE_conditionEvaluators A map of condition evaluators provided by the consumer. This enables matching\n *                                                   condition types which are not supported natively by the SDK. Note that built in\n *                                                   Optimizely evaluators cannot be overridden.\n * @constructor\n */\nfunction AudienceEvaluator(UNSTABLE_conditionEvaluators) {\n  this.typeToEvaluatorMap = fns.assign({}, UNSTABLE_conditionEvaluators, {\n    custom_attribute: customAttributeConditionEvaluator,\n  });\n}\n\n/**\n * Determine if the given user attributes satisfy the given audience conditions\n * @param  {Array|String|null|undefined}  audienceConditions    Audience conditions to match the user attributes against - can be an array\n *                                                              of audience IDs, a nested array of conditions, or a single leaf condition.\n *                                                              Examples: [\"5\", \"6\"], [\"and\", [\"or\", \"1\", \"2\"], \"3\"], \"1\"\n * @param  {Object}                       audiencesById         Object providing access to full audience objects for audience IDs\n *                                                              contained in audienceConditions. Keys should be audience IDs, values\n *                                                              should be full audience objects with conditions properties\n * @param  {Object}                       [userAttributes]      User attributes which will be used in determining if audience conditions\n *                                                              are met. If not provided, defaults to an empty object\n * @return {Boolean}                                            true if the user attributes match the given audience conditions, false\n *                                                              otherwise\n */\nAudienceEvaluator.prototype.evaluate = function(audienceConditions, audiencesById, userAttributes) {\n  // if there are no audiences, return true because that means ALL users are included in the experiment\n  if (!audienceConditions || audienceConditions.length === 0) {\n    return true;\n  }\n\n  if (!userAttributes) {\n    userAttributes = {};\n  }\n\n  var evaluateAudience = function(audienceId) {\n    var audience = audiencesById[audienceId];\n    if (audience) {\n      logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.EVALUATING_AUDIENCE, MODULE_NAME, audienceId, JSON.stringify(audience.conditions))\n      );\n      var result = conditionTreeEvaluator.evaluate(\n        audience.conditions,\n        this.evaluateConditionWithUserAttributes.bind(this, userAttributes)\n      );\n      var resultText = result === null ? 'UNKNOWN' : result.toString().toUpperCase();\n      logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.AUDIENCE_EVALUATION_RESULT, MODULE_NAME, audienceId, resultText));\n      return result;\n    }\n\n    return null;\n  }.bind(this);\n\n  return conditionTreeEvaluator.evaluate(audienceConditions, evaluateAudience) || false;\n};\n\n/**\n * Wrapper around evaluator.evaluate that is passed to the conditionTreeEvaluator.\n * Evaluates the condition provided given the user attributes if an evaluator has been defined for the condition type.\n * @param  {Object} userAttributes     A map of user attributes.\n * @param  {Object} condition          A single condition object to evaluate.\n * @return {Boolean|null}              true if the condition is satisfied, null if a matcher is not found.\n */\nAudienceEvaluator.prototype.evaluateConditionWithUserAttributes = function(userAttributes, condition) {\n  var evaluator = this.typeToEvaluatorMap[condition.type];\n  if (!evaluator) {\n    logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.UNKNOWN_CONDITION_TYPE, MODULE_NAME, JSON.stringify(condition)));\n    return null;\n  }\n  try {\n    return evaluator.evaluate(condition, userAttributes, logger);\n  } catch (err) {\n    logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.CONDITION_EVALUATOR_ERROR, MODULE_NAME, condition.type, err.message)\n    );\n  }\n  return null;\n};\n\nexport default AudienceEvaluator;\n","/**\n * Copyright 2018, 2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Validates provided value is a non-empty string\n * @param  {string}  input\n * @return {boolean} True for non-empty string, false otherwise\n */\nexport var validate = function(input) {\n  return typeof input === 'string' && input !== '';\n};\n\nexport default {\n  validate: validate,\n};\n","/****************************************************************************\n * Copyright 2017-2020 Optimizely, Inc. and contributors                    *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\nimport { sprintf } from'@optimizely/js-sdk-utils';\n\nimport bucketer from '../bucketer';\nimport enums from '../../utils/enums';\nimport fns from '../../utils/fns';\nimport projectConfig from '../project_config';\nimport AudienceEvaluator from '../audience_evaluator';\nimport stringValidator from '../../utils/string_value_validator';\n\nvar MODULE_NAME = 'DECISION_SERVICE';\nvar ERROR_MESSAGES = enums.ERROR_MESSAGES;\nvar LOG_LEVEL = enums.LOG_LEVEL;\nvar LOG_MESSAGES = enums.LOG_MESSAGES;\nvar DECISION_SOURCES = enums.DECISION_SOURCES;\nvar AUDIENCE_EVALUATION_TYPES = enums.AUDIENCE_EVALUATION_TYPES;\n\n/**\n * Optimizely's decision service that determines which variation of an experiment the user will be allocated to.\n *\n * The decision service contains all logic around how a user decision is made. This includes all of the following (in order):\n *   1. Checking experiment status\n *   2. Checking forced bucketing\n *   3. Checking whitelisting\n *   4. Checking user profile service for past bucketing decisions (sticky bucketing)\n *   5. Checking audience targeting\n *   6. Using Murmurhash3 to bucket the user.\n *\n * @constructor\n * @param   {Object} options\n * @param   {Object} options.userProfileService An instance of the user profile service for sticky bucketing.\n * @param   {Object} options.logger An instance of a logger to log messages.\n * @returns {Object}\n */\nfunction DecisionService(options) {\n  this.audienceEvaluator = new AudienceEvaluator(options.UNSTABLE_conditionEvaluators);\n  this.forcedVariationMap = {};\n  this.logger = options.logger;\n  this.userProfileService = options.userProfileService || null;\n}\n\n/**\n * Gets variation where visitor will be bucketed.\n * @param  {Object}      configObj      The parsed project configuration object\n * @param  {string}      experimentKey\n * @param  {string}      userId\n * @param  {Object}      attributes\n * @return {string|null} the variation the user is bucketed into.\n */\nDecisionService.prototype.getVariation = function(configObj, experimentKey, userId, attributes) {\n  // by default, the bucketing ID should be the user ID\n  var bucketingId = this._getBucketingId(userId, attributes);\n\n  if (!this.__checkIfExperimentIsActive(configObj, experimentKey)) {\n    return null;\n  }\n  var experiment = configObj.experimentKeyMap[experimentKey];\n  var forcedVariationKey = this.getForcedVariation(configObj, experimentKey, userId);\n  if (forcedVariationKey) {\n    return forcedVariationKey;\n  }\n\n  var variation = this.__getWhitelistedVariation(experiment, userId);\n  if (variation) {\n    return variation.key;\n  }\n\n  // check for sticky bucketing\n  var experimentBucketMap = this.__resolveExperimentBucketMap(userId, attributes);\n  variation = this.__getStoredVariation(configObj, experiment, userId, experimentBucketMap);\n  if (variation) {\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.RETURNING_STORED_VARIATION, MODULE_NAME, variation.key, experimentKey, userId)\n    );\n    return variation.key;\n  }\n\n  // Perform regular targeting and bucketing\n  if (!this.__checkIfUserIsInAudience(configObj, experimentKey, AUDIENCE_EVALUATION_TYPES.EXPERIMENT, userId, attributes, '')) {\n    var userDoesNotMeetConditionsLogMessage = sprintf(\n      LOG_MESSAGES.USER_NOT_IN_EXPERIMENT,\n      MODULE_NAME,\n      userId,\n      experimentKey\n    );\n    this.logger.log(LOG_LEVEL.INFO, userDoesNotMeetConditionsLogMessage);\n    return null;\n  }\n\n  var bucketerParams = this.__buildBucketerParams(configObj, experimentKey, bucketingId, userId);\n  var variationId = bucketer.bucket(bucketerParams);\n  variation = configObj.variationIdMap[variationId];\n  if (!variation) {\n    var userHasNoVariationLogMessage = sprintf(\n      LOG_MESSAGES.USER_HAS_NO_VARIATION,\n      MODULE_NAME,\n      userId,\n      experimentKey\n    );\n    this.logger.log(LOG_LEVEL.DEBUG, userHasNoVariationLogMessage);\n    return null;\n  }\n\n  var userInVariationLogMessage = sprintf(\n    LOG_MESSAGES.USER_HAS_VARIATION,\n    MODULE_NAME,\n    userId,\n    variation.key,\n    experimentKey\n  );\n  this.logger.log(LOG_LEVEL.INFO, userInVariationLogMessage);\n  // persist bucketing\n  this.__saveUserProfile(experiment, variation, userId, experimentBucketMap);\n\n  return variation.key;\n};\n\n/**\n * Merges attributes from attributes[STICKY_BUCKETING_KEY] and userProfileService\n * @param  {Object} attributes\n * @return {Object} finalized copy of experiment_bucket_map\n */\nDecisionService.prototype.__resolveExperimentBucketMap = function(userId, attributes) {\n  attributes = attributes || {};\n  var userProfile = this.__getUserProfile(userId) || {};\n  var attributeExperimentBucketMap = attributes[enums.CONTROL_ATTRIBUTES.STICKY_BUCKETING_KEY];\n  return fns.assign({}, userProfile.experiment_bucket_map, attributeExperimentBucketMap);\n};\n\n/**\n * Checks whether the experiment is running\n * @param  {Object}  configObj     The parsed project configuration object\n * @param  {string}  experimentKey Key of experiment being validated\n * @param  {string}  userId        ID of user\n * @return {boolean} True if experiment is running\n */\nDecisionService.prototype.__checkIfExperimentIsActive = function(configObj, experimentKey) {\n  if (!projectConfig.isActive(configObj, experimentKey)) {\n    var experimentNotRunningLogMessage = sprintf(LOG_MESSAGES.EXPERIMENT_NOT_RUNNING, MODULE_NAME, experimentKey);\n    this.logger.log(LOG_LEVEL.INFO, experimentNotRunningLogMessage);\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks if user is whitelisted into any variation and return that variation if so\n * @param  {Object} experiment\n * @param  {string} userId\n * @return {string|null} Forced variation if it exists for user ID, otherwise null\n */\nDecisionService.prototype.__getWhitelistedVariation = function(experiment, userId) {\n  if (experiment.forcedVariations && experiment.forcedVariations.hasOwnProperty(userId)) {\n    var forcedVariationKey = experiment.forcedVariations[userId];\n    if (experiment.variationKeyMap.hasOwnProperty(forcedVariationKey)) {\n      var forcedBucketingSucceededMessageLog = sprintf(\n        LOG_MESSAGES.USER_FORCED_IN_VARIATION,\n        MODULE_NAME,\n        userId,\n        forcedVariationKey\n      );\n      this.logger.log(LOG_LEVEL.INFO, forcedBucketingSucceededMessageLog);\n      return experiment.variationKeyMap[forcedVariationKey];\n    } else {\n      var forcedBucketingFailedMessageLog = sprintf(\n        LOG_MESSAGES.FORCED_BUCKETING_FAILED,\n        MODULE_NAME,\n        forcedVariationKey,\n        userId\n      );\n      this.logger.log(LOG_LEVEL.ERROR, forcedBucketingFailedMessageLog);\n      return null;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Checks whether the user is included in experiment audience\n * @param  {Object}  configObj            The parsed project configuration object\n * @param  {string}  experimentKey        Key of experiment being validated\n * @param  {string}  evaluationAttribute  String representing experiment key or rule\n * @param  {string}  userId               ID of user\n * @param  {Object}  attributes           Optional parameter for user's attributes\n * @param  {string}  loggingKey           String representing experiment key or rollout rule. To be used in log messages only.\n * @return {boolean} True if user meets audience conditions\n */\nDecisionService.prototype.__checkIfUserIsInAudience = function(configObj, experimentKey, evaluationAttribute, userId, attributes, loggingKey) {\n  var experimentAudienceConditions = projectConfig.getExperimentAudienceConditions(configObj, experimentKey);\n  var audiencesById = projectConfig.getAudiencesById(configObj);\n  this.logger.log(\n    LOG_LEVEL.DEBUG,\n    sprintf(\n      LOG_MESSAGES.EVALUATING_AUDIENCES_COMBINED,\n      MODULE_NAME,\n      evaluationAttribute,\n      loggingKey || experimentKey,\n      JSON.stringify(experimentAudienceConditions)\n    )\n  );\n  var result = this.audienceEvaluator.evaluate(experimentAudienceConditions, audiencesById, attributes);\n  this.logger.log(\n    LOG_LEVEL.INFO,\n    sprintf(\n      LOG_MESSAGES.AUDIENCE_EVALUATION_RESULT_COMBINED,\n      MODULE_NAME,\n      evaluationAttribute,\n      loggingKey || experimentKey,\n      result.toString().toUpperCase()\n    )\n  );\n\n  return result;\n};\n\n/**\n * Given an experiment key and user ID, returns params used in bucketer call\n * @param  configObj     The parsed project configuration object\n * @param  experimentKey Experiment key used for bucketer\n * @param  bucketingId   ID to bucket user into\n * @param  userId        ID of user to be bucketed\n * @return {Object}\n */\nDecisionService.prototype.__buildBucketerParams = function(configObj, experimentKey, bucketingId, userId) {\n  var bucketerParams = {};\n  bucketerParams.experimentKey = experimentKey;\n  bucketerParams.experimentId = projectConfig.getExperimentId(configObj, experimentKey);\n  bucketerParams.userId = userId;\n  bucketerParams.trafficAllocationConfig = projectConfig.getTrafficAllocation(configObj, experimentKey);\n  bucketerParams.experimentKeyMap = configObj.experimentKeyMap;\n  bucketerParams.groupIdMap = configObj.groupIdMap;\n  bucketerParams.variationIdMap = configObj.variationIdMap;\n  bucketerParams.logger = this.logger;\n  bucketerParams.bucketingId = bucketingId;\n  return bucketerParams;\n};\n\n/**\n * Pull the stored variation out of the experimentBucketMap for an experiment/userId\n * @param  {Object} configObj           The parsed project configuration object\n * @param  {Object} experiment\n * @param  {String} userId\n * @param  {Object} experimentBucketMap mapping experiment => { variation_id: <variationId> }\n * @return {Object} the stored variation or null if the user profile does not have one for the given experiment\n */\nDecisionService.prototype.__getStoredVariation = function(configObj, experiment, userId, experimentBucketMap) {\n  if (experimentBucketMap.hasOwnProperty(experiment.id)) {\n    var decision = experimentBucketMap[experiment.id];\n    var variationId = decision.variation_id;\n    if (configObj.variationIdMap.hasOwnProperty(variationId)) {\n      return configObj.variationIdMap[decision.variation_id];\n    } else {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.SAVED_VARIATION_NOT_FOUND, MODULE_NAME, userId, variationId, experiment.key)\n      );\n    }\n  }\n\n  return null;\n};\n\n/**\n * Get the user profile with the given user ID\n * @param  {string} userId\n * @return {Object|undefined} the stored user profile or undefined if one isn't found\n */\nDecisionService.prototype.__getUserProfile = function(userId) {\n  var userProfile = {\n    user_id: userId,\n    experiment_bucket_map: {},\n  };\n\n  if (!this.userProfileService) {\n    return userProfile;\n  }\n\n  try {\n    return this.userProfileService.lookup(userId);\n  } catch (ex) {\n    this.logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.USER_PROFILE_LOOKUP_ERROR, MODULE_NAME, userId, ex.message)\n    );\n  }\n};\n\n/**\n * Saves the bucketing decision to the user profile\n * @param {Object} userProfile\n * @param {Object} experiment\n * @param {Object} variation\n * @param {Object} experimentBucketMap\n */\nDecisionService.prototype.__saveUserProfile = function(experiment, variation, userId, experimentBucketMap) {\n  if (!this.userProfileService) {\n    return;\n  }\n\n  try {\n    experimentBucketMap[experiment.id] = {\n      variation_id: variation.id\n    };\n\n    this.userProfileService.save({\n      user_id: userId,\n      experiment_bucket_map: experimentBucketMap,\n    });\n\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.SAVED_VARIATION, MODULE_NAME, variation.key, experiment.key, userId)\n    );\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.USER_PROFILE_SAVE_ERROR, MODULE_NAME, userId, ex.message));\n  }\n};\n\n/**\n * Given a feature, user ID, and attributes, returns an object representing a\n * decision. If the user was bucketed into a variation for the given feature\n * and attributes, the returned decision object will have variation and\n * experiment properties (both objects), as well as a decisionSource property.\n * decisionSource indicates whether the decision was due to a rollout or an\n * experiment.\n * @param   {Object} configObj  The parsed project configuration object\n * @param   {Object} feature    A feature flag object from project configuration\n * @param   {String} userId     A string identifying the user, for bucketing\n * @param   {Object} attributes Optional user attributes\n * @return  {Object} An object with experiment, variation, and decisionSource\n * properties. If the user was not bucketed into a variation, the variation\n * property is null.\n */\nDecisionService.prototype.getVariationForFeature = function(configObj, feature, userId, attributes) {\n  var experimentDecision = this._getVariationForFeatureExperiment(configObj, feature, userId, attributes);\n  if (experimentDecision.variation !== null) {\n    return experimentDecision;\n  }\n\n  var rolloutDecision = this._getVariationForRollout(configObj, feature, userId, attributes);\n  if (rolloutDecision.variation !== null) {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.USER_IN_ROLLOUT, MODULE_NAME, userId, feature.key));\n    return rolloutDecision;\n  }\n\n  this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.USER_NOT_IN_ROLLOUT, MODULE_NAME, userId, feature.key));\n  return rolloutDecision;\n};\n\nDecisionService.prototype._getVariationForFeatureExperiment = function(configObj, feature, userId, attributes) {\n  var experiment = null;\n  var variationKey = null;\n\n  if (feature.hasOwnProperty('groupId')) {\n    var group = configObj.groupIdMap[feature.groupId];\n    if (group) {\n      experiment = this._getExperimentInGroup(configObj, group, userId);\n      if (experiment && feature.experimentIds.indexOf(experiment.id) !== -1) {\n        variationKey = this.getVariation(configObj, experiment.key, userId, attributes);\n      }\n    }\n  } else if (feature.experimentIds.length > 0) {\n    // If the feature does not have a group ID, then it can only be associated\n    // with one experiment, so we look at the first experiment ID only\n    experiment = projectConfig.getExperimentFromId(configObj, feature.experimentIds[0], this.logger);\n    if (experiment) {\n      variationKey = this.getVariation(configObj, experiment.key, userId, attributes);\n    }\n  } else {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.FEATURE_HAS_NO_EXPERIMENTS, MODULE_NAME, feature.key));\n  }\n\n  var variation = null;\n  if (variationKey !== null && experiment !== null) {\n    variation = experiment.variationKeyMap[variationKey];\n  }\n  return {\n    experiment: experiment,\n    variation: variation,\n    decisionSource: DECISION_SOURCES.FEATURE_TEST,\n  };\n};\n\nDecisionService.prototype._getExperimentInGroup = function(configObj, group, userId) {\n  var experimentId = bucketer.bucketUserIntoExperiment(group, userId, userId, this.logger);\n  if (experimentId) {\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.USER_BUCKETED_INTO_EXPERIMENT_IN_GROUP, MODULE_NAME, userId, experimentId, group.id)\n    );\n    var experiment = projectConfig.getExperimentFromId(configObj, experimentId, this.logger);\n    if (experiment) {\n      return experiment;\n    }\n  }\n\n  this.logger.log(\n    LOG_LEVEL.INFO,\n    sprintf(LOG_MESSAGES.USER_NOT_BUCKETED_INTO_ANY_EXPERIMENT_IN_GROUP, MODULE_NAME, userId, group.id)\n  );\n  return null;\n};\n\nDecisionService.prototype._getVariationForRollout = function(configObj, feature, userId, attributes) {\n  if (!feature.rolloutId) {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.NO_ROLLOUT_EXISTS, MODULE_NAME, feature.key));\n    return {\n      experiment: null,\n      variation: null,\n      decisionSource: DECISION_SOURCES.ROLLOUT,\n    };\n  }\n\n  var rollout = configObj.rolloutIdMap[feature.rolloutId];\n  if (!rollout) {\n    this.logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.INVALID_ROLLOUT_ID, MODULE_NAME, feature.rolloutId, feature.key)\n    );\n    return {\n      experiment: null,\n      variation: null,\n      decisionSource: DECISION_SOURCES.ROLLOUT,\n    };\n  }\n\n  if (rollout.experiments.length === 0) {\n    this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.ROLLOUT_HAS_NO_EXPERIMENTS, MODULE_NAME, feature.rolloutId));\n    return {\n      experiment: null,\n      variation: null,\n      decisionSource: DECISION_SOURCES.ROLLOUT,\n    };\n  }\n\n  var bucketingId = this._getBucketingId(userId, attributes);\n\n  // The end index is length - 1 because the last experiment is assumed to be\n  // \"everyone else\", which will be evaluated separately outside this loop\n  var endIndex = rollout.experiments.length - 1;\n  var index;\n  var rolloutRule;\n  var bucketerParams;\n  var variationId;\n  var variation;\n  var loggingKey;\n  for (index = 0; index < endIndex; index++) {\n    rolloutRule = configObj.experimentKeyMap[rollout.experiments[index].key];\n    loggingKey = index + 1;\n\n    if (!this.__checkIfUserIsInAudience(configObj, rolloutRule.key, AUDIENCE_EVALUATION_TYPES.RULE, userId, attributes, loggingKey)) {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_DOESNT_MEET_CONDITIONS_FOR_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n      );\n      continue;\n    }\n\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_MEETS_CONDITIONS_FOR_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n    );\n    bucketerParams = this.__buildBucketerParams(configObj, rolloutRule.key, bucketingId, userId);\n    variationId = bucketer.bucket(bucketerParams);\n    variation = configObj.variationIdMap[variationId];\n    if (variation) {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_BUCKETED_INTO_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n      );\n      return {\n        experiment: rolloutRule,\n        variation: variation,\n        decisionSource: DECISION_SOURCES.ROLLOUT,\n      };\n    } else {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_NOT_BUCKETED_INTO_TARGETING_RULE, MODULE_NAME, userId, loggingKey)\n      );\n      break;\n    }\n  }\n\n  var everyoneElseRule = configObj.experimentKeyMap[rollout.experiments[endIndex].key];\n  if (this.__checkIfUserIsInAudience(configObj, everyoneElseRule.key, AUDIENCE_EVALUATION_TYPES.RULE, userId, attributes, 'Everyone Else')) {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_MEETS_CONDITIONS_FOR_TARGETING_RULE, MODULE_NAME, userId, 'Everyone Else')\n    );\n    bucketerParams = this.__buildBucketerParams(configObj, everyoneElseRule.key, bucketingId, userId);\n    variationId = bucketer.bucket(bucketerParams);\n    variation = configObj.variationIdMap[variationId];\n    if (variation) {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_BUCKETED_INTO_EVERYONE_TARGETING_RULE, MODULE_NAME, userId)\n      );\n      return {\n        experiment: everyoneElseRule,\n        variation: variation,\n        decisionSource: DECISION_SOURCES.ROLLOUT,\n      };\n    } else {\n      this.logger.log(\n        LOG_LEVEL.DEBUG,\n        sprintf(LOG_MESSAGES.USER_NOT_BUCKETED_INTO_EVERYONE_TARGETING_RULE, MODULE_NAME, userId)\n      );\n    }\n  }\n\n  return {\n    experiment: null,\n    variation: null,\n    decisionSource: DECISION_SOURCES.ROLLOUT,\n  };\n};\n\n/**\n * Get bucketing Id from user attributes.\n * @param {String} userId\n * @param {Object} attributes\n * @returns {String} Bucketing Id if it is a string type in attributes, user Id otherwise.\n */\nDecisionService.prototype._getBucketingId = function(userId, attributes) {\n  var bucketingId = userId;\n\n  // If the bucketing ID key is defined in attributes, than use that in place of the userID for the murmur hash key\n  if (\n    attributes != null &&\n    typeof attributes === 'object' &&\n    attributes.hasOwnProperty(enums.CONTROL_ATTRIBUTES.BUCKETING_ID)\n  ) {\n    if (typeof attributes[enums.CONTROL_ATTRIBUTES.BUCKETING_ID] === 'string') {\n      bucketingId = attributes[enums.CONTROL_ATTRIBUTES.BUCKETING_ID];\n      this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.VALID_BUCKETING_ID, MODULE_NAME, bucketingId));\n    } else {\n      this.logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.BUCKETING_ID_NOT_STRING, MODULE_NAME));\n    }\n  }\n\n  return bucketingId;\n};\n\n/**\n * Removes forced variation for given userId and experimentKey\n * @param  {string} userId         String representing the user id\n * @param  {number} experimentId   Number representing the experiment id\n * @param  {string} experimentKey  Key representing the experiment id\n * @throws If the user id is not valid or not in the forced variation map\n */\nDecisionService.prototype.removeForcedVariation = function(userId, experimentId, experimentKey) {\n  if (!userId) {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_ID, MODULE_NAME));\n  }\n\n  if (this.forcedVariationMap.hasOwnProperty(userId)) {\n    delete this.forcedVariationMap[userId][experimentId];\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.VARIATION_REMOVED_FOR_USER, MODULE_NAME, experimentKey, userId)\n    );\n  } else {\n    throw new Error(sprintf(ERROR_MESSAGES.USER_NOT_IN_FORCED_VARIATION, MODULE_NAME, userId));\n  }\n};\n\n/**\n * Sets forced variation for given userId and experimentKey\n * @param  {string} userId        String representing the user id\n * @param  {number} experimentId  Number representing the experiment id\n * @param  {number} variationId   Number representing the variation id\n * @throws If the user id is not valid\n */\nDecisionService.prototype.__setInForcedVariationMap = function(userId, experimentId, variationId) {\n  if (this.forcedVariationMap.hasOwnProperty(userId)) {\n    this.forcedVariationMap[userId][experimentId] = variationId;\n  } else {\n    this.forcedVariationMap[userId] = {};\n    this.forcedVariationMap[userId][experimentId] = variationId;\n  }\n\n  this.logger.log(\n    LOG_LEVEL.DEBUG,\n    sprintf(LOG_MESSAGES.USER_MAPPED_TO_FORCED_VARIATION, MODULE_NAME, variationId, experimentId, userId)\n  );\n};\n\n/**\n * Gets the forced variation key for the given user and experiment.\n * @param  {Object} configObj        Object representing project configuration\n * @param  {string} experimentKey    Key for experiment.\n * @param  {string} userId           The user Id.\n * @return {string|null} Variation   The variation which the given user and experiment should be forced into.\n */\nDecisionService.prototype.getForcedVariation = function(configObj, experimentKey, userId) {\n  var experimentToVariationMap = this.forcedVariationMap[userId];\n  if (!experimentToVariationMap) {\n    this.logger.log(LOG_LEVEL.DEBUG, sprintf(LOG_MESSAGES.USER_HAS_NO_FORCED_VARIATION, MODULE_NAME, userId));\n    return null;\n  }\n\n  var experimentId;\n  try {\n    var experiment = projectConfig.getExperimentFromKey(configObj, experimentKey);\n    if (experiment.hasOwnProperty('id')) {\n      experimentId = experiment['id'];\n    } else {\n      // catching improperly formatted experiments\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(ERROR_MESSAGES.IMPROPERLY_FORMATTED_EXPERIMENT, MODULE_NAME, experimentKey)\n      );\n      return null;\n    }\n  } catch (ex) {\n    // catching experiment not in datafile\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    return null;\n  }\n\n  var variationId = experimentToVariationMap[experimentId];\n  if (!variationId) {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT, MODULE_NAME, experimentKey, userId)\n    );\n    return null;\n  }\n\n  var variationKey = projectConfig.getVariationKeyFromId(configObj, variationId);\n  if (variationKey) {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_HAS_FORCED_VARIATION, MODULE_NAME, variationKey, experimentKey, userId)\n    );\n  } else {\n    this.logger.log(\n      LOG_LEVEL.DEBUG,\n      sprintf(LOG_MESSAGES.USER_HAS_NO_FORCED_VARIATION_FOR_EXPERIMENT, MODULE_NAME, experimentKey, userId)\n    );\n  }\n\n  return variationKey;\n};\n\n/**\n * Sets the forced variation for a user in a given experiment\n * @param  {Object} configObj      Object representing project configuration\n * @param  {string} experimentKey  Key for experiment.\n * @param  {string} userId         The user Id.\n * @param  {string} variationKey   Key for variation. If null, then clear the existing experiment-to-variation mapping\n * @return {boolean}               A boolean value that indicates if the set completed successfully.\n */\nDecisionService.prototype.setForcedVariation = function(configObj, experimentKey, userId, variationKey) {\n  if (variationKey != null && !stringValidator.validate(variationKey)) {\n    this.logger.log(LOG_LEVEL.ERROR, sprintf(ERROR_MESSAGES.INVALID_VARIATION_KEY, MODULE_NAME));\n    return false;\n  }\n\n  var experimentId;\n  try {\n    var experiment = projectConfig.getExperimentFromKey(configObj, experimentKey);\n    if (experiment.hasOwnProperty('id')) {\n      experimentId = experiment['id'];\n    } else {\n      // catching improperly formatted experiments\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(ERROR_MESSAGES.IMPROPERLY_FORMATTED_EXPERIMENT, MODULE_NAME, experimentKey)\n      );\n      return false;\n    }\n  } catch (ex) {\n    // catching experiment not in datafile\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    return false;\n  }\n\n  if (variationKey == null) {\n    try {\n      this.removeForcedVariation(userId, experimentId, experimentKey, this.logger);\n      return true;\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.ERROR, ex.message);\n      return false;\n    }\n  }\n\n  var variationId = projectConfig.getVariationIdFromExperimentAndVariationKey(configObj, experimentKey, variationKey);\n\n  if (!variationId) {\n    this.logger.log(\n      LOG_LEVEL.ERROR,\n      sprintf(ERROR_MESSAGES.NO_VARIATION_FOR_EXPERIMENT_KEY, MODULE_NAME, variationKey, experimentKey)\n    );\n    return false;\n  }\n\n  try {\n    this.__setInForcedVariationMap(userId, experimentId, variationId);\n    return true;\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    return false;\n  }\n};\n\n/**\n * Creates an instance of the DecisionService.\n * @param  {Object} options               Configuration options\n * @param  {Object} options.userProfileService\n * @param  {Object} options.logger\n * @return {Object} An instance of the DecisionService\n */\nexport var createDecisionService = function(options) {\n  return new DecisionService(options);\n};\n\nexport default {\n  createDecisionService: createDecisionService,\n};\n","/**\n * Copyright 2017, 2019-2020 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n  RESERVED_EVENT_KEYWORDS,\n} from '../enums';\n\n/**\n * Provides utility method for parsing event tag values\n */\nvar MODULE_NAME = 'EVENT_TAG_UTILS';\nvar REVENUE_EVENT_METRIC_NAME = RESERVED_EVENT_KEYWORDS.REVENUE;\nvar VALUE_EVENT_METRIC_NAME = RESERVED_EVENT_KEYWORDS.VALUE;\n\n/**\n * Grab the revenue value from the event tags. \"revenue\" is a reserved keyword.\n * @param {Object} eventTags\n * @param {Object} logger\n * @return {Integer|null}\n */\nexport var getRevenueValue = function(eventTags, logger) {\n  if (eventTags && eventTags.hasOwnProperty(REVENUE_EVENT_METRIC_NAME)) {\n    var rawValue = eventTags[REVENUE_EVENT_METRIC_NAME];\n    var parsedRevenueValue = parseInt(rawValue, 10);\n    if (isNaN(parsedRevenueValue)) {\n      logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.FAILED_TO_PARSE_REVENUE, MODULE_NAME, rawValue));\n      return null;\n    }\n    logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.PARSED_REVENUE_VALUE, MODULE_NAME, parsedRevenueValue));\n    return parsedRevenueValue;\n  }\n  return null;\n};\n\n/**\n * Grab the event value from the event tags. \"value\" is a reserved keyword.\n * @param {Object} eventTags\n * @param {Object} logger\n * @return {Number|null}\n */\nexport var getEventValue = function(eventTags, logger) {\n  if (eventTags && eventTags.hasOwnProperty(VALUE_EVENT_METRIC_NAME)) {\n    var rawValue = eventTags[VALUE_EVENT_METRIC_NAME];\n    var parsedEventValue = parseFloat(rawValue);\n    if (isNaN(parsedEventValue)) {\n      logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.FAILED_TO_PARSE_VALUE, MODULE_NAME, rawValue));\n      return null;\n    }\n    logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.PARSED_NUMERIC_VALUE, MODULE_NAME, parsedEventValue));\n    return parsedEventValue;\n  }\n  return null;\n};\n\nexport default {\n  getRevenueValue: getRevenueValue,\n  getEventValue: getEventValue,\n};\n","/**\n * Copyright 2016-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fns from '../../utils/fns';\nimport enums from '../../utils/enums';\nimport projectConfig from '../project_config';\nimport eventTagUtils from '../../utils/event_tag_utils';\nimport attributeValidator from '../../utils/attributes_validator';\n\nvar ACTIVATE_EVENT_KEY = 'campaign_activated';\nvar CUSTOM_ATTRIBUTE_FEATURE_TYPE = 'custom';\nvar ENDPOINT = 'https://logx.optimizely.com/v1/events';\nvar HTTP_VERB = 'POST';\n\n/**\n * Get params which are used same in both conversion and impression events\n * @param  {Object} options.attributes    Object representing user attributes and values which need to be recorded\n * @param  {string} options.clientEngine  The client we are using: node or javascript\n * @param  {string} options.clientVersion The version of the client\n * @param  {Object} options.configObj     Object representing project configuration, including datafile information and mappings for quick lookup\n * @param  {string} options.userId        ID for user\n * @param  {Object} options.Logger        logger\n * @return {Object}                       Common params with properties that are used in both conversion and impression events\n */\nfunction getCommonEventParams(options) {\n  var attributes = options.attributes;\n  var configObj = options.configObj;\n  var anonymize_ip = configObj.anonymizeIP;\n  var botFiltering = configObj.botFiltering;\n  if (anonymize_ip === null || anonymize_ip === undefined) {\n    anonymize_ip = false;\n  }\n\n  var visitor = {\n    snapshots: [],\n    visitor_id: options.userId,\n    attributes: [],\n  };\n\n  var commonParams = {\n    account_id: configObj.accountId,\n    project_id: configObj.projectId,\n    visitors: [visitor],\n    revision: configObj.revision,\n    client_name: options.clientEngine,\n    client_version: options.clientVersion,\n    anonymize_ip: anonymize_ip,\n    enrich_decisions: true,\n  };\n\n  // Omit attribute values that are not supported by the log endpoint.\n  Object.keys(attributes || {}).forEach(function(attributeKey) {\n    var attributeValue = attributes[attributeKey];\n    if (attributeValidator.isAttributeValid(attributeKey, attributeValue)) {\n      var attributeId = projectConfig.getAttributeId(options.configObj, attributeKey, options.logger);\n      if (attributeId) {\n        commonParams.visitors[0].attributes.push({\n          entity_id: attributeId,\n          key: attributeKey,\n          type: CUSTOM_ATTRIBUTE_FEATURE_TYPE,\n          value: attributes[attributeKey],\n        });\n      }\n    }\n  });\n\n  if (typeof botFiltering === 'boolean') {\n    commonParams.visitors[0].attributes.push({\n      entity_id: enums.CONTROL_ATTRIBUTES.BOT_FILTERING,\n      key: enums.CONTROL_ATTRIBUTES.BOT_FILTERING,\n      type: CUSTOM_ATTRIBUTE_FEATURE_TYPE,\n      value: botFiltering,\n    });\n  }\n  return commonParams;\n}\n\n/**\n * Creates object of params specific to impression events\n * @param  {Object} configObj    Object representing project configuration\n * @param  {string} experimentId ID of experiment for which impression needs to be recorded\n * @param  {string} variationId  ID for variation which would be presented to user\n * @return {Object}              Impression event params\n */\nfunction getImpressionEventParams(configObj, experimentId, variationId) {\n  var impressionEventParams = {\n    decisions: [\n      {\n        campaign_id: projectConfig.getLayerId(configObj, experimentId),\n        experiment_id: experimentId,\n        variation_id: variationId,\n      },\n    ],\n    events: [\n      {\n        entity_id: projectConfig.getLayerId(configObj, experimentId),\n        timestamp: fns.currentTimestamp(),\n        key: ACTIVATE_EVENT_KEY,\n        uuid: fns.uuid(),\n      },\n    ],\n  };\n  return impressionEventParams;\n}\n\n/**\n * Creates object of params specific to conversion events\n * @param  {Object} configObj                 Object representing project configuration\n * @param  {string} eventKey                  Event key representing the event which needs to be recorded\n * @param  {Object} eventTags                 Values associated with the event.\n * @param  {Object} logger                    Logger object\n * @return {Object}                           Conversion event params\n */\nfunction getVisitorSnapshot(configObj, eventKey, eventTags, logger) {\n  var snapshot = {\n    events: [],\n  };\n\n  var eventDict = {\n    entity_id: projectConfig.getEventId(configObj, eventKey),\n    timestamp: fns.currentTimestamp(),\n    uuid: fns.uuid(),\n    key: eventKey,\n  };\n\n  if (eventTags) {\n    var revenue = eventTagUtils.getRevenueValue(eventTags, logger);\n    if (revenue !== null) {\n      eventDict[enums.RESERVED_EVENT_KEYWORDS.REVENUE] = revenue;\n    }\n\n    var eventValue = eventTagUtils.getEventValue(eventTags, logger);\n    if (eventValue !== null) {\n      eventDict[enums.RESERVED_EVENT_KEYWORDS.VALUE] = eventValue;\n    }\n\n    eventDict['tags'] = eventTags;\n  }\n  snapshot.events.push(eventDict);\n\n  return snapshot;\n}\n\n/**\n * Create impression event params to be sent to the logging endpoint\n * @param  {Object} options               Object containing values needed to build impression event\n * @param  {Object} options.attributes    Object representing user attributes and values which need to be recorded\n * @param  {string} options.clientEngine  The client we are using: node or javascript\n * @param  {string} options.clientVersion The version of the client\n * @param  {Object} options.configObj     Object representing project configuration, including datafile information and mappings for quick lookup\n * @param  {string} options.experimentId  Experiment for which impression needs to be recorded\n * @param  {string} options.userId        ID for user\n * @param  {string} options.variationId   ID for variation which would be presented to user\n * @return {Object}                       Params to be used in impression event logging endpoint call\n */\nexport var getImpressionEvent = function(options) {\n  var impressionEvent = {\n    httpVerb: HTTP_VERB,\n  };\n\n  var commonParams = getCommonEventParams(options);\n  impressionEvent.url = ENDPOINT;\n\n  var impressionEventParams = getImpressionEventParams(options.configObj, options.experimentId, options.variationId);\n  // combine Event params into visitor obj\n  commonParams.visitors[0].snapshots.push(impressionEventParams);\n\n  impressionEvent.params = commonParams;\n\n  return impressionEvent;\n};\n\n/**\n * Create conversion event params to be sent to the logging endpoint\n * @param  {Object} options                           Object containing values needed to build conversion event\n * @param  {Object} options.attributes                Object representing user attributes and values which need to be recorded\n * @param  {string} options.clientEngine              The client we are using: node or javascript\n * @param  {string} options.clientVersion             The version of the client\n * @param  {Object} options.configObj                 Object representing project configuration, including datafile information and mappings for quick lookup\n * @param  {string} options.eventKey                  Event key representing the event which needs to be recorded\n * @param  {Object} options.eventTags                 Object with event-specific tags\n * @param  {Object} options.logger                    Logger object\n * @param  {string} options.userId                    ID for user\n * @return {Object}                                   Params to be used in conversion event logging endpoint call\n */\nexport var getConversionEvent = function(options) {\n  var conversionEvent = {\n    httpVerb: HTTP_VERB,\n  };\n\n  var commonParams = getCommonEventParams(options);\n  conversionEvent.url = ENDPOINT;\n\n  var snapshot = getVisitorSnapshot(options.configObj, options.eventKey, options.eventTags, options.logger);\n\n  commonParams.visitors[0].snapshots = [snapshot];\n  conversionEvent.params = commonParams;\n\n  return conversionEvent;\n};\n\nexport default {\n  getConversionEvent: getConversionEvent,\n  getImpressionEvent: getImpressionEvent,\n};\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getLogger } from '@optimizely/js-sdk-logging';\n\nimport fns from '../../utils/fns';\nimport projectConfig from '../project_config';\nimport eventTagUtils from '../../utils/event_tag_utils';\nimport attributesValidator from'../../utils/attributes_validator';\n\nvar logger = getLogger('EVENT_BUILDER');\n\n/**\n * Creates an ImpressionEvent object from decision data\n * @param {Object} config\n * @param {Object} config.configObj\n * @param {String} config.experimentKey\n * @param {String} config.variationKey\n * @param {String} config.userId\n * @param {Object} config.userAttributes\n * @param {String} config.clientEngine\n * @param {String} config.clientVersion\n * @return {Object} an ImpressionEvent object\n */\nexport var buildImpressionEvent = function(config) {\n  var configObj = config.configObj;\n  var experimentKey = config.experimentKey;\n  var variationKey = config.variationKey;\n  var userId = config.userId;\n  var userAttributes = config.userAttributes;\n  var clientEngine = config.clientEngine;\n  var clientVersion = config.clientVersion;\n\n  var variationId = projectConfig.getVariationIdFromExperimentAndVariationKey(configObj, experimentKey, variationKey);\n  var experimentId = projectConfig.getExperimentId(configObj, experimentKey);\n  var layerId = projectConfig.getLayerId(configObj, experimentId);\n\n  return {\n    type: 'impression',\n    timestamp: fns.currentTimestamp(),\n    uuid: fns.uuid(),\n\n    user: {\n      id: userId,\n      attributes: buildVisitorAttributes(configObj, userAttributes),\n    },\n\n    context: {\n      accountId: configObj.accountId,\n      projectId: configObj.projectId,\n      revision: configObj.revision,\n      clientName: clientEngine,\n      clientVersion: clientVersion,\n      anonymizeIP: configObj.anonymizeIP || false,\n      botFiltering: configObj.botFiltering,\n    },\n\n    layer: {\n      id: layerId,\n    },\n\n    experiment: {\n      id: experimentId,\n      key: experimentKey,\n    },\n\n    variation: {\n      id: variationId,\n      key: variationKey,\n    },\n  };\n};\n\n/**\n * Creates a ConversionEvent object from track\n * @param {Object} config\n * @param {Object} config.configObj\n * @param {String} config.eventKey\n * @param {Object|undefined} config.eventTags\n * @param {String} config.userId\n * @param {Object} config.userAttributes\n * @param {String} config.clientEngine\n * @param {String} config.clientVersion\n * @return {Object} a ConversionEvent object\n */\nexport var buildConversionEvent = function(config) {\n  var configObj = config.configObj;\n  var userId = config.userId;\n  var userAttributes = config.userAttributes;\n  var clientEngine = config.clientEngine;\n  var clientVersion = config.clientVersion;\n\n  var eventKey = config.eventKey;\n  var eventTags = config.eventTags;\n  var eventId = projectConfig.getEventId(configObj, eventKey);\n\n  return {\n    type: 'conversion',\n    timestamp: fns.currentTimestamp(),\n    uuid: fns.uuid(),\n\n    user: {\n      id: userId,\n      attributes: buildVisitorAttributes(configObj, userAttributes),\n    },\n\n    context: {\n      accountId: configObj.accountId,\n      projectId: configObj.projectId,\n      revision: configObj.revision,\n      clientName: clientEngine,\n      clientVersion: clientVersion,\n      anonymizeIP: configObj.anonymizeIP || false,\n      botFiltering: configObj.botFiltering,\n    },\n\n    event: {\n      id: eventId,\n      key: eventKey,\n    },\n\n    revenue: eventTagUtils.getRevenueValue(eventTags, logger),\n    value: eventTagUtils.getEventValue(eventTags, logger),\n    tags: eventTags,\n  };\n};\n\nfunction buildVisitorAttributes(configObj, attributes) {\n  var builtAttributes = [];\n  // Omit attribute values that are not supported by the log endpoint.\n  Object.keys(attributes || {}).forEach(function(attributeKey) {\n    var attributeValue = attributes[attributeKey];\n    if (attributesValidator.isAttributeValid(attributeKey, attributeValue)) {\n      var attributeId = projectConfig.getAttributeId(configObj, attributeKey, logger);\n      if (attributeId) {\n        builtAttributes.push({\n          entityId: attributeId,\n          key: attributeKey,\n          value: attributes[attributeKey],\n        });\n      }\n    }\n  });\n\n  return builtAttributes;\n}\n","/**\n * Copyright 2017, 2020 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides utility method for validating that event tags user has provided are valid\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport { ERROR_MESSAGES } from '../enums';\n\nvar MODULE_NAME = 'EVENT_TAGS_VALIDATOR';\n\n/**\n * Validates user's provided event tags\n * @param  {Object}  event tags\n * @return {boolean} True if event tags are valid\n * @throws If event tags are not valid\n */\nexport var validate = function(eventTags) {\n  if (typeof eventTags === 'object' && !Array.isArray(eventTags) && eventTags !== null) {\n    return true;\n  } else {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_EVENT_TAGS, MODULE_NAME));\n  }\n}\n\nexport default {\n  validate: validate,\n}\n","/**\n * Copyright 2017, 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf, objectValues } from '@optimizely/js-sdk-utils';\n\nimport {\n  LOG_LEVEL,\n  LOG_MESSAGES,\n  NOTIFICATION_TYPES,\n} from '../../utils/enums';\n\nvar MODULE_NAME = 'NOTIFICATION_CENTER';\n\n/**\n * NotificationCenter allows registration and triggering of callback functions using\n * notification event types defined in NOTIFICATION_TYPES of utils/enums/index.js:\n * - ACTIVATE: An impression event will be sent to Optimizely.\n * - TRACK a conversion event will be sent to Optimizely\n * @constructor\n * @param {Object} options\n * @param {Object} options.logger An instance of a logger to log messages with\n * @param {object} options.errorHandler An instance of errorHandler to handle any unexpected error\n * @returns {Object}\n */\nfunction NotificationCenter(options) {\n  this.logger = options.logger;\n  this.errorHandler = options.errorHandler;\n  this.__notificationListeners = {};\n\n  objectValues(NOTIFICATION_TYPES).forEach(\n    function(notificationTypeEnum) {\n      this.__notificationListeners[notificationTypeEnum] = [];\n    }.bind(this)\n  );\n  this.__listenerId = 1;\n}\n\n/**\n * Add a notification callback to the notification center\n * @param {string} notificationType One of the values from NOTIFICATION_TYPES in utils/enums/index.js\n * @param {Function} callback Function that will be called when the event is triggered\n * @returns {number} If the callback was successfully added, returns a listener ID which can be used\n * to remove the callback by calling removeNotificationListener. The ID is a number greater than 0.\n * If there was an error and the listener was not added, addNotificationListener returns -1. This\n * can happen if the first argument is not a valid notification type, or if the same callback\n * function was already added as a listener by a prior call to this function.\n */\nNotificationCenter.prototype.addNotificationListener = function(notificationType, callback) {\n  try {\n    var isNotificationTypeValid = objectValues(NOTIFICATION_TYPES).indexOf(notificationType) > -1;\n    if (!isNotificationTypeValid) {\n      return -1;\n    }\n\n    if (!this.__notificationListeners[notificationType]) {\n      this.__notificationListeners[notificationType] = [];\n    }\n\n    var callbackAlreadyAdded = false;\n    (this.__notificationListeners[notificationType] || []).forEach(function(listenerEntry) {\n      if (listenerEntry.callback === callback) {\n        callbackAlreadyAdded = true;\n        return false;\n      }\n    });\n    if (callbackAlreadyAdded) {\n      return -1;\n    }\n\n    this.__notificationListeners[notificationType].push({\n      id: this.__listenerId,\n      callback: callback,\n    });\n\n    var returnId = this.__listenerId;\n    this.__listenerId += 1;\n    return returnId;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return -1;\n  }\n};\n\n/**\n * Remove a previously added notification callback\n * @param {number} listenerId ID of listener to be removed\n * @returns {boolean} Returns true if the listener was found and removed, and false\n * otherwise.\n */\nNotificationCenter.prototype.removeNotificationListener = function(listenerId) {\n  try {\n    var indexToRemove;\n    var typeToRemove;\n\n    Object.keys(this.__notificationListeners).some(\n      function(notificationType) {\n        var listenersForType = this.__notificationListeners[notificationType];\n        (listenersForType || []).every(function(listenerEntry, i) {\n          if (listenerEntry.id === listenerId) {\n            indexToRemove = i;\n            typeToRemove = notificationType;\n            return false;\n          }\n          return true;\n        });\n        if (indexToRemove !== undefined && typeToRemove !== undefined) {\n          return true;\n        }\n      }.bind(this)\n    );\n\n    if (indexToRemove !== undefined && typeToRemove !== undefined) {\n      this.__notificationListeners[typeToRemove].splice(indexToRemove, 1);\n      return true;\n    }\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n  return false;\n};\n\n/**\n * Removes all previously added notification listeners, for all notification types\n */\nNotificationCenter.prototype.clearAllNotificationListeners = function() {\n  try {\n    objectValues(NOTIFICATION_TYPES).forEach(\n      function(notificationTypeEnum) {\n        this.__notificationListeners[notificationTypeEnum] = [];\n      }.bind(this)\n    );\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n};\n\n/**\n * Remove all previously added notification listeners for the argument type\n * @param {string} notificationType One of NOTIFICATION_TYPES\n */\nNotificationCenter.prototype.clearNotificationListeners = function(notificationType) {\n  try {\n    this.__notificationListeners[notificationType] = [];\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n};\n\n/**\n * Fires notifications for the argument type. All registered callbacks for this type will be\n * called. The notificationData object will be passed on to callbacks called.\n * @param {string} notificationType One of NOTIFICATION_TYPES\n * @param {Object} notificationData Will be passed to callbacks called\n */\nNotificationCenter.prototype.sendNotifications = function(notificationType, notificationData) {\n  try {\n    (this.__notificationListeners[notificationType] || []).forEach(\n      function(listenerEntry) {\n        var callback = listenerEntry.callback;\n        try {\n          callback(notificationData);\n        } catch (ex) {\n          this.logger.log(\n            LOG_LEVEL.ERROR,\n            sprintf(LOG_MESSAGES.NOTIFICATION_LISTENER_EXCEPTION, MODULE_NAME, notificationType, ex.message)\n          );\n        }\n      }.bind(this)\n    );\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n  }\n};\n\n/**\n * Create an instance of NotificationCenter\n * @param {Object} options\n * @param {Object} options.logger An instance of a logger to log messages with\n * @returns {Object} An instance of NotificationCenter\n */\nexport var createNotificationCenter = function(options) {\n  return new NotificationCenter(options);\n};\n\nexport default {\n  createNotificationCenter: createNotificationCenter,\n};\n","/****************************************************************************\n * Copyright 2017, 2020, Optimizely, Inc. and contributors                  *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\n\n/**\n * Provides utility method for validating that the given user profile service implementation is valid.\n */\n\nimport { sprintf } from '@optimizely/js-sdk-utils';\n\nimport { ERROR_MESSAGES } from '../enums';\nvar MODULE_NAME = 'USER_PROFILE_SERVICE_VALIDATOR';\n\n/**\n * Validates user's provided user profile service instance\n * @param  {Object}  userProfileServiceInstance\n * @return {boolean} True if the instance is valid\n * @throws If the instance is not valid\n */\nexport var validate = function(userProfileServiceInstance) {\n  if (typeof userProfileServiceInstance.lookup !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, \"Missing function 'lookup'\"));\n  } else if (typeof userProfileServiceInstance.save !== 'function') {\n    throw new Error(sprintf(ERROR_MESSAGES.INVALID_USER_PROFILE_SERVICE, MODULE_NAME, \"Missing function 'save'\"));\n  }\n  return true;\n};\n\nexport default {\n  validate: validate,\n};\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFeatureExperiment } from '../project_config';\n\n// Get Experiment Ids which are part of rollouts\nfunction getRolloutExperimentIds(rollouts) {\n  return (rollouts || []).reduce(function(experimentIds, rollout) {\n    rollout.experiments.forEach(function(e) {\n      experimentIds[e.id] = true;\n    });\n    return experimentIds;\n  }, {});\n}\n\n// Gets Map of all experiments except rollouts\nfunction getExperimentsMap(configObj) {\n  var rolloutExperimentIds = getRolloutExperimentIds(configObj.rollouts);\n  var featureVariablesMap = (configObj.featureFlags || []).reduce(function(resultMap, feature) {\n    resultMap[feature.id] = feature.variables;\n    return resultMap;\n  }, {});\n  return (configObj.experiments || []).reduce(function(experiments, experiment) {\n    // skip experiments that are part of a rollout\n    if (!rolloutExperimentIds[experiment.id]) {\n      experiments[experiment.key] = {\n        id: experiment.id,\n        key: experiment.key,\n        variationsMap: (experiment.variations || []).reduce(function(variations, variation) {\n          variations[variation.key] = {\n            id: variation.id,\n            key: variation.key,\n            variablesMap: getMergedVariablesMap(configObj, variation, experiment.id, featureVariablesMap),\n          };\n          if (isFeatureExperiment(configObj, experiment.id)) {\n            variations[variation.key].featureEnabled = variation.featureEnabled;\n          }\n          return variations;\n        }, {}),\n      };\n    }\n    return experiments;\n  }, {});\n}\n\n// Merges feature key and type from feature variables to variation variables.\nfunction getMergedVariablesMap(configObj, variation, experimentId, featureVariablesMap) {\n  var featureId = configObj.experimentFeatureMap[experimentId];\n  var variablesObject = {};\n  if (featureId) {\n    var experimentFeatureVariables = featureVariablesMap[featureId];\n    // Temporary variation variables map to get values to merge.\n    var tempVariablesIdMap = (variation.variables || []).reduce(function(variablesMap, variable) {\n      variablesMap[variable.id] = {\n        id: variable.id,\n        value: variable.value,\n      };\n      return variablesMap;\n    }, {});\n    variablesObject = (experimentFeatureVariables || []).reduce(function(variablesMap, featureVariable) {\n      var variationVariable = tempVariablesIdMap[featureVariable.id];\n      var variableValue =\n        variation.featureEnabled && variationVariable ? variationVariable.value : featureVariable.defaultValue;\n      variablesMap[featureVariable.key] = {\n        id: featureVariable.id,\n        key: featureVariable.key,\n        type: featureVariable.type,\n        value: variableValue,\n      };\n      return variablesMap;\n    }, {});\n  }\n  return variablesObject;\n}\n\n// Gets map of all experiments\nfunction getFeaturesMap(configObj, allExperiments) {\n  return (configObj.featureFlags || []).reduce(function(features, feature) {\n    features[feature.key] = {\n      id: feature.id,\n      key: feature.key,\n      experimentsMap: (feature.experimentIds || []).reduce(function(experiments, experimentId) {\n        var experimentKey = configObj.experimentIdMap[experimentId].key;\n        experiments[experimentKey] = allExperiments[experimentKey];\n        return experiments;\n      }, {}),\n      variablesMap: (feature.variables || []).reduce(function(variables, variable) {\n        variables[variable.key] = {\n          id: variable.id,\n          key: variable.key,\n          type: variable.type,\n          value: variable.defaultValue,\n        };\n        return variables;\n      }, {}),\n    };\n    return features;\n  }, {});\n}\n\nexport var getOptimizelyConfig = function(configObj) {\n  // Fetch all feature variables from feature flags to merge them with variation variables\n  var experimentsMap = getExperimentsMap(configObj);\n  return {\n    experimentsMap: experimentsMap,\n    featuresMap: getFeaturesMap(configObj, experimentsMap),\n    revision: configObj.revision,\n  };\n};\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { sprintf } from '@optimizely/js-sdk-utils';\nimport { getLogger } from '@optimizely/js-sdk-logging';\nimport { HttpPollingDatafileManager } from '@optimizely/js-sdk-datafile-manager';\n\nimport fns from '../../utils/fns';\nimport { ERROR_MESSAGES } from '../../utils/enums';\nimport projectConfig from '../../core/project_config';\nimport { getOptimizelyConfig } from '../optimizely_config';\nimport configValidator from '../../utils/config_validator';\n\nvar logger = getLogger();\nvar MODULE_NAME = 'PROJECT_CONFIG_MANAGER';\n\n/**\n * Return an error message derived from a thrown value. If the thrown value is\n * an error, return the error's message property. Otherwise, return a default\n * provided by the second argument.\n * @param {*} maybeError\n * @param {String=} defaultMessage\n * @return {String}\n */\nfunction getErrorMessage(maybeError, defaultMessage) {\n  if (maybeError instanceof Error) {\n    return maybeError.message;\n  }\n  return defaultMessage || 'Unknown error';\n}\n\n/**\n * ProjectConfigManager provides project config objects via its methods\n * getConfig and onUpdate. It uses a DatafileManager to fetch datafiles. It is\n * responsible for parsing and validating datafiles, and converting datafile\n * JSON objects into project config objects.\n * @param {Object}         config\n * @param {Object|string=} config.datafile\n * @param {Object=}        config.datafileOptions\n * @param {Object=}        config.jsonSchemaValidator\n * @param {string=}        config.sdkKey\n */\nexport function ProjectConfigManager(config) {\n  try {\n    this.__initialize(config);\n  } catch (ex) {\n    logger.error(ex);\n    this.__updateListeners = [];\n    this.__configObj = null;\n    this.__optimizelyConfigObj = null;\n    this.__readyPromise = Promise.resolve({\n      success: false,\n      reason: getErrorMessage(ex, 'Error in initialize'),\n    });\n  }\n}\n\n/**\n * Initialize internal properties including __updateListeners, __configObj, and\n * __readyPromise, using the argument config. Create and subscribe to a datafile\n * manager if appropriate.\n * @param {Object}         config\n * @param {Object|string=} config.datafile\n * @param {Object=}        config.datafileOptions\n * @param {Object=}        config.jsonSchemaValidator\n * @param {string=}        config.sdkKey\n */\nProjectConfigManager.prototype.__initialize = function(config) {\n  this.__updateListeners = [];\n  this.jsonSchemaValidator = config.jsonSchemaValidator;\n\n  if (!config.datafile && !config.sdkKey) {\n    this.__configObj = null;\n    var datafileAndSdkKeyMissingError = new Error(sprintf(ERROR_MESSAGES.DATAFILE_AND_SDK_KEY_MISSING, MODULE_NAME));\n    this.__readyPromise = Promise.resolve({\n      success: false,\n      reason: getErrorMessage(datafileAndSdkKeyMissingError),\n    });\n    logger.error(datafileAndSdkKeyMissingError);\n    return;\n  }\n\n  var initialDatafile = this.__getDatafileFromConfig(config);\n  var projectConfigCreationEx;\n  if (initialDatafile) {\n    try {\n      this.__configObj = projectConfig.tryCreatingProjectConfig({\n        datafile: initialDatafile,\n        jsonSchemaValidator: this.jsonSchemaValidator,\n        logger: logger,\n      });\n      this.__optimizelyConfigObj = getOptimizelyConfig(this.__configObj);\n    } catch (ex) {\n      logger.error(ex);\n      projectConfigCreationEx = ex;\n      this.__configObj = null;\n    }\n  } else {\n    this.__configObj = null;\n  }\n\n  if (config.sdkKey) {\n    var datafileManagerConfig = {\n      sdkKey: config.sdkKey,\n    };\n    if (this.__validateDatafileOptions(config.datafileOptions)) {\n      fns.assign(datafileManagerConfig, config.datafileOptions);\n    }\n    if (initialDatafile && this.__configObj) {\n      datafileManagerConfig.datafile = initialDatafile;\n    }\n    this.datafileManager = new HttpPollingDatafileManager(datafileManagerConfig);\n    this.datafileManager.start();\n    this.__readyPromise = this.datafileManager\n      .onReady()\n      .then(this.__onDatafileManagerReadyFulfill.bind(this), this.__onDatafileManagerReadyReject.bind(this));\n    this.datafileManager.on('update', this.__onDatafileManagerUpdate.bind(this));\n  } else if (this.__configObj) {\n    this.__readyPromise = Promise.resolve({\n      success: true,\n    });\n  } else {\n    this.__readyPromise = Promise.resolve({\n      success: false,\n      reason: getErrorMessage(projectConfigCreationEx, 'Invalid datafile'),\n    });\n  }\n};\n\n/**\n * Respond to datafile manager's onReady promise becoming fulfilled.\n * If there are validation or parse failures using the datafile provided by\n * DatafileManager, ProjectConfigManager's ready promise is resolved with an\n * unsuccessful result. Otherwise, ProjectConfigManager updates its own project\n * config object from the new datafile, and its ready promise is resolved with a\n * successful result.\n */\nProjectConfigManager.prototype.__onDatafileManagerReadyFulfill = function() {\n  var newDatafile = this.datafileManager.get();\n  var newConfigObj;\n  try {\n    newConfigObj = projectConfig.tryCreatingProjectConfig({\n      datafile: newDatafile,\n      jsonSchemaValidator: this.jsonSchemaValidator,\n      logger: logger,\n    });\n  } catch (ex) {\n    logger.error(ex);\n    return {\n      success: false,\n      reason: getErrorMessage(ex),\n    };\n  }\n  this.__handleNewConfigObj(newConfigObj);\n  return {\n    success: true,\n  };\n};\n\n/**\n * Respond to datafile manager's onReady promise becoming rejected.\n * When DatafileManager's onReady promise is rejected, there is no possibility\n * of obtaining a datafile. In this case, ProjectConfigManager's ready promise\n * is fulfilled with an unsuccessful result.\n * @param {Error} err\n */\nProjectConfigManager.prototype.__onDatafileManagerReadyReject = function(err) {\n  return {\n    success: false,\n    reason: getErrorMessage(err, 'Failed to become ready'),\n  };\n};\n\n/**\n * Respond to datafile manager's update event. Attempt to update own config\n * object using latest datafile from datafile manager. Call own registered\n * update listeners if successful\n */\nProjectConfigManager.prototype.__onDatafileManagerUpdate = function() {\n  var newDatafile = this.datafileManager.get();\n  var newConfigObj;\n  try {\n    newConfigObj = projectConfig.tryCreatingProjectConfig({\n      datafile: newDatafile,\n      jsonSchemaValidator: this.jsonSchemaValidator,\n      logger: logger,\n    });\n  } catch (ex) {\n    logger.error(ex);\n  }\n  if (newConfigObj) {\n    this.__handleNewConfigObj(newConfigObj);\n  }\n};\n\n/**\n * If the argument config contains a valid datafile object or string,\n * return a datafile object based on that provided datafile, otherwise\n * return null.\n * @param {Object}         config\n * @param {Object|string=} config.datafile\n * @return {Object|null}\n */\nProjectConfigManager.prototype.__getDatafileFromConfig = function(config) {\n  var initialDatafile = null;\n  try {\n    if (config.datafile) {\n      configValidator.validateDatafile(config.datafile);\n      if (typeof config.datafile === 'string' || config.datafile instanceof String) {\n        initialDatafile = JSON.parse(config.datafile);\n      } else {\n        initialDatafile = config.datafile;\n      }\n    }\n  } catch (ex) {\n    logger.error(ex);\n  }\n  return initialDatafile;\n};\n\n/**\n * Validate user-provided datafileOptions. It should be an object or undefined.\n * @param {*} datafileOptions\n * @returns {boolean}\n */\nProjectConfigManager.prototype.__validateDatafileOptions = function(datafileOptions) {\n  if (typeof datafileOptions === 'undefined') {\n    return true;\n  }\n\n  if (typeof datafileOptions === 'object') {\n    return datafileOptions !== null;\n  }\n\n  return false;\n};\n\n/**\n * Update internal project config object to be argument object when the argument\n * object has a different revision than the current internal project config\n * object. If the internal object is updated, call update listeners.\n * @param {Object} newConfigObj\n */\nProjectConfigManager.prototype.__handleNewConfigObj = function(newConfigObj) {\n  var oldConfigObj = this.__configObj;\n\n  var oldRevision = oldConfigObj ? oldConfigObj.revision : 'null';\n  if (oldRevision === newConfigObj.revision) {\n    return;\n  }\n\n  this.__configObj = newConfigObj;\n  this.__optimizelyConfigObj = getOptimizelyConfig(newConfigObj);\n\n  this.__updateListeners.forEach(function(listener) {\n    listener(newConfigObj);\n  });\n};\n\n/**\n * Returns the current project config object, or null if no project config object\n * is available\n * @return {Object|null}\n */\nProjectConfigManager.prototype.getConfig = function() {\n  return this.__configObj;\n};\n\n/**\n * Returns the optimizely config object\n * @return {Object}\n */\nProjectConfigManager.prototype.getOptimizelyConfig = function() {\n  return this.__optimizelyConfigObj;\n};\n\n/**\n * Returns a Promise that fulfills when this ProjectConfigManager is ready to\n * use (meaning it has a valid project config object), or has failed to become\n * ready.\n *\n * Failure can be caused by the following:\n * - At least one of sdkKey or datafile is not provided in the constructor argument\n * - The provided datafile was invalid\n * - The datafile provided by the datafile manager was invalid\n * - The datafile manager failed to fetch a datafile\n *\n * The returned Promise is fulfilled with a result object containing these\n * properties:\n *    - success (boolean): True if this instance is ready to use with a valid\n *                         project config object, or false if it failed to\n *                         become ready\n *    - reason (string=):  If success is false, this is a string property with\n *                         an explanatory message.\n * @return {Promise}\n */\nProjectConfigManager.prototype.onReady = function() {\n  return this.__readyPromise;\n};\n\n/**\n * Add a listener for project config updates. The listener will be called\n * whenever this instance has a new project config object available.\n * Returns a dispose function that removes the subscription\n * @param {Function} listener\n * @return {Function}\n */\nProjectConfigManager.prototype.onUpdate = function(listener) {\n  this.__updateListeners.push(listener);\n  return function() {\n    var index = this.__updateListeners.indexOf(listener);\n    if (index > -1) {\n      this.__updateListeners.splice(index, 1);\n    }\n  }.bind(this);\n};\n\n/**\n * Stop the internal datafile manager and remove all update listeners\n */\nProjectConfigManager.prototype.stop = function() {\n  if (this.datafileManager) {\n    this.datafileManager.stop();\n  }\n  this.__updateListeners = [];\n};\n\nexport default {\n  ProjectConfigManager: ProjectConfigManager,\n};\n","/****************************************************************************\n * Copyright 2016-2020, Optimizely, Inc. and contributors                   *\n *                                                                          *\n * Licensed under the Apache License, Version 2.0 (the \"License\");          *\n * you may not use this file except in compliance with the License.         *\n * You may obtain a copy of the License at                                  *\n *                                                                          *\n *    http://www.apache.org/licenses/LICENSE-2.0                            *\n *                                                                          *\n * Unless required by applicable law or agreed to in writing, software      *\n * distributed under the License is distributed on an \"AS IS\" BASIS,        *\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *\n * See the License for the specific language governing permissions and      *\n * limitations under the License.                                           *\n ***************************************************************************/\nimport { sprintf, objectValues } from '@optimizely/js-sdk-utils';\nimport * as eventProcessor from '@optimizely/js-sdk-event-processor';\n\nimport fns from '../utils/fns'\nimport { validate } from '../utils/attributes_validator';\nimport decisionService from '../core/decision_service';\nimport enums from '../utils/enums';\nimport { getImpressionEvent, getConversionEvent } from '../core/event_builder/index.js';\nimport { buildConversionEvent, buildImpressionEvent } from '../core/event_builder/event_helpers';\nimport eventTagsValidator from '../utils/event_tags_validator';\nimport notificationCenter from '../core/notification_center';\nimport projectConfig from '../core/project_config';\nimport userProfileServiceValidator from '../utils/user_profile_service_validator';\nimport stringValidator from '../utils/string_value_validator';\nimport projectConfigManager from '../core/project_config/project_config_manager';\n\nvar ERROR_MESSAGES = enums.ERROR_MESSAGES;\nvar LOG_LEVEL = enums.LOG_LEVEL;\nvar LOG_MESSAGES = enums.LOG_MESSAGES;\nvar MODULE_NAME = 'OPTIMIZELY';\nvar DECISION_SOURCES = enums.DECISION_SOURCES;\nvar FEATURE_VARIABLE_TYPES = enums.FEATURE_VARIABLE_TYPES;\nvar DECISION_NOTIFICATION_TYPES = enums.DECISION_NOTIFICATION_TYPES;\nvar NOTIFICATION_TYPES = enums.NOTIFICATION_TYPES;\n\nvar DEFAULT_ONREADY_TIMEOUT = 30000;\n\n/**\n * The Optimizely class\n * @param {Object} config\n * @param {string} config.clientEngine\n * @param {string} config.clientVersion\n * @param {Object} config.datafile\n * @param {Object} config.errorHandler\n * @param {Object} config.eventDispatcher\n * @param {Object} config.logger\n * @param {Object} config.userProfileService\n * @param {Object} config.eventBatchSize\n * @param {Object} config.eventFlushInterval\n */\nfunction Optimizely(config) {\n  var clientEngine = config.clientEngine;\n  if (enums.VALID_CLIENT_ENGINES.indexOf(clientEngine) === -1) {\n    config.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(LOG_MESSAGES.INVALID_CLIENT_ENGINE, MODULE_NAME, clientEngine)\n    );\n    clientEngine = enums.NODE_CLIENT_ENGINE;\n  }\n\n  this.clientEngine = clientEngine;\n  this.clientVersion = config.clientVersion || enums.NODE_CLIENT_VERSION;\n  this.errorHandler = config.errorHandler;\n  this.eventDispatcher = config.eventDispatcher;\n  this.__isOptimizelyConfigValid = config.isValidInstance;\n  this.logger = config.logger;\n\n  this.projectConfigManager = new projectConfigManager.ProjectConfigManager({\n    datafile: config.datafile,\n    datafileOptions: config.datafileOptions,\n    jsonSchemaValidator: config.jsonSchemaValidator,\n    sdkKey: config.sdkKey,\n  });\n\n  this.__disposeOnUpdate = this.projectConfigManager.onUpdate(\n    function(configObj) {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.UPDATED_OPTIMIZELY_CONFIG, MODULE_NAME, configObj.revision, configObj.projectId)\n      );\n      this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.OPTIMIZELY_CONFIG_UPDATE);\n    }.bind(this)\n  );\n\n  var projectConfigManagerReadyPromise = this.projectConfigManager.onReady();\n\n  var userProfileService = null;\n  if (config.userProfileService) {\n    try {\n      if (userProfileServiceValidator.validate(config.userProfileService)) {\n        userProfileService = config.userProfileService;\n        this.logger.log(LOG_LEVEL.INFO, sprintf(LOG_MESSAGES.VALID_USER_PROFILE_SERVICE, MODULE_NAME));\n      }\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.WARNING, ex.message);\n    }\n  }\n\n  this.decisionService = decisionService.createDecisionService({\n    userProfileService: userProfileService,\n    logger: this.logger,\n    UNSTABLE_conditionEvaluators: config.UNSTABLE_conditionEvaluators,\n  });\n\n  this.notificationCenter = notificationCenter.createNotificationCenter({\n    logger: this.logger,\n    errorHandler: this.errorHandler,\n  });\n\n  this.eventProcessor = new eventProcessor.LogTierV1EventProcessor({\n    dispatcher: this.eventDispatcher,\n    flushInterval: config.eventFlushInterval,\n    batchSize: config.eventBatchSize,\n    maxQueueSize: config.eventMaxQueueSize,\n    notificationCenter: this.notificationCenter,\n  });\n\n  var eventProcessorStartedPromise = this.eventProcessor.start();\n\n  this.__readyPromise = Promise.all([projectConfigManagerReadyPromise, eventProcessorStartedPromise]).then(function(promiseResults) {\n    // Only return status from project config promise because event processor promise does not return any status.\n    return promiseResults[0];\n  })\n\n  this.__readyTimeouts = {};\n  this.__nextReadyTimeoutId = 0;\n}\n\n/**\n * Returns a truthy value if this instance currently has a valid project config\n * object, and the initial configuration object that was passed into the\n * constructor was also valid.\n * @return {*}\n */\nOptimizely.prototype.__isValidInstance = function() {\n  return this.__isOptimizelyConfigValid && this.projectConfigManager.getConfig();\n};\n\n/**\n * Buckets visitor and sends impression event to Optimizely.\n * @param  {string}      experimentKey\n * @param  {string}      userId\n * @param  {Object}      attributes\n * @return {string|null} variation key\n */\nOptimizely.prototype.activate = function(experimentKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'activate'));\n      return null;\n    }\n\n    if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId }, attributes)) {\n      return this.__notActivatingExperiment(experimentKey, userId);\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return null;\n    }\n\n    try {\n      var variationKey = this.getVariation(experimentKey, userId, attributes);\n      if (variationKey === null) {\n        return this.__notActivatingExperiment(experimentKey, userId);\n      }\n\n      // If experiment is not set to 'Running' status, log accordingly and return variation key\n      if (!projectConfig.isRunning(configObj, experimentKey)) {\n        var shouldNotDispatchActivateLogMessage = sprintf(\n          LOG_MESSAGES.SHOULD_NOT_DISPATCH_ACTIVATE,\n          MODULE_NAME,\n          experimentKey\n        );\n        this.logger.log(LOG_LEVEL.DEBUG, shouldNotDispatchActivateLogMessage);\n        return variationKey;\n      }\n\n      this._sendImpressionEvent(experimentKey, variationKey, userId, attributes);\n\n      return variationKey;\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.ERROR, ex.message);\n      var failedActivationLogMessage = sprintf(\n        LOG_MESSAGES.NOT_ACTIVATING_USER,\n        MODULE_NAME,\n        userId,\n        experimentKey\n      );\n      this.logger.log(LOG_LEVEL.INFO, failedActivationLogMessage);\n      this.errorHandler.handleError(ex);\n      return null;\n    }\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Create an impression event and call the event dispatcher's dispatch method to\n * send this event to Optimizely. Then use the notification center to trigger\n * any notification listeners for the ACTIVATE notification type.\n * @param {string} experimentKey  Key of experiment that was activated\n * @param {string} variationKey   Key of variation shown in experiment that was activated\n * @param {string} userId         ID of user to whom the variation was shown\n * @param {Object} attributes     Optional user attributes\n */\nOptimizely.prototype._sendImpressionEvent = function(experimentKey, variationKey, userId, attributes) {\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return;\n  }\n\n  var impressionEvent = buildImpressionEvent({\n    experimentKey: experimentKey,\n    variationKey: variationKey,\n    userId: userId,\n    userAttributes: attributes,\n    clientEngine: this.clientEngine,\n    clientVersion: this.clientVersion,\n    configObj: configObj,\n  });\n  // TODO is it okay to not pass a projectConfig as second argument\n  this.eventProcessor.process(impressionEvent);\n  this.__emitNotificationCenterActivate(experimentKey, variationKey, userId, attributes);\n};\n\n/**\n * Emit the ACTIVATE notification on the notificationCenter\n * @param {string} experimentKey  Key of experiment that was activated\n * @param {string} variationKey   Key of variation shown in experiment that was activated\n * @param {string} userId         ID of user to whom the variation was shown\n * @param {Object} attributes     Optional user attributes\n */\nOptimizely.prototype.__emitNotificationCenterActivate = function(experimentKey, variationKey, userId, attributes) {\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return;\n  }\n\n  var variationId = projectConfig.getVariationIdFromExperimentAndVariationKey(configObj, experimentKey, variationKey);\n  var experimentId = projectConfig.getExperimentId(configObj, experimentKey);\n  var impressionEventOptions = {\n    attributes: attributes,\n    clientEngine: this.clientEngine,\n    clientVersion: this.clientVersion,\n    configObj: configObj,\n    experimentId: experimentId,\n    userId: userId,\n    variationId: variationId,\n    logger: this.logger,\n  };\n  var impressionEvent = getImpressionEvent(impressionEventOptions);\n  var experiment = configObj.experimentKeyMap[experimentKey];\n  var variation;\n  if (experiment && experiment.variationKeyMap) {\n    variation = experiment.variationKeyMap[variationKey];\n  }\n  this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.ACTIVATE, {\n    experiment: experiment,\n    userId: userId,\n    attributes: attributes,\n    variation: variation,\n    logEvent: impressionEvent,\n  });\n};\n\n/**\n * Sends conversion event to Optimizely.\n * @param  {string} eventKey\n * @param  {string} userId\n * @param  {string} attributes\n * @param  {Object} eventTags Values associated with the event.\n */\nOptimizely.prototype.track = function(eventKey, userId, attributes, eventTags) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'track'));\n      return;\n    }\n\n    if (!this.__validateInputs({ user_id: userId, event_key: eventKey }, attributes, eventTags)) {\n      return;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return;\n    }\n\n    if (!projectConfig.eventWithKeyExists(configObj, eventKey)) {\n      this.logger.log(\n        LOG_LEVEL.WARNING,\n        sprintf(enums.LOG_MESSAGES.EVENT_KEY_NOT_FOUND, MODULE_NAME, eventKey)\n      );\n      this.logger.log(LOG_LEVEL.WARNING, sprintf(LOG_MESSAGES.NOT_TRACKING_USER, MODULE_NAME, userId));\n      return;\n    }\n\n    // remove null values from eventTags\n    eventTags = this.__filterEmptyValues(eventTags);\n    var conversionEvent = buildConversionEvent({\n      eventKey: eventKey,\n      eventTags: eventTags,\n      userId: userId,\n      userAttributes: attributes,\n      clientEngine: this.clientEngine,\n      clientVersion: this.clientVersion,\n      configObj: configObj,\n    });\n    this.logger.log(LOG_LEVEL.INFO, sprintf(enums.LOG_MESSAGES.TRACK_EVENT, MODULE_NAME, eventKey, userId));\n    // TODO is it okay to not pass a projectConfig as second argument\n    this.eventProcessor.process(conversionEvent);\n    this.__emitNotificationCenterTrack(eventKey, userId, attributes, eventTags);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    var failedTrackLogMessage = sprintf(LOG_MESSAGES.NOT_TRACKING_USER, MODULE_NAME, userId);\n    this.logger.log(LOG_LEVEL.ERROR, failedTrackLogMessage);\n  }\n};\n\n/**\n * Send TRACK event to notificationCenter\n * @param  {string} eventKey\n * @param  {string} userId\n * @param  {string} attributes\n * @param  {Object} eventTags Values associated with the event.\n */\nOptimizely.prototype.__emitNotificationCenterTrack = function(eventKey, userId, attributes, eventTags) {\n  try {\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return;\n    }\n\n    var conversionEventOptions = {\n      attributes: attributes,\n      clientEngine: this.clientEngine,\n      clientVersion: this.clientVersion,\n      configObj: configObj,\n      eventKey: eventKey,\n      eventTags: eventTags,\n      logger: this.logger,\n      userId: userId,\n    };\n    var conversionEvent = getConversionEvent(conversionEventOptions);\n\n    this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.TRACK, {\n      eventKey: eventKey,\n      userId: userId,\n      attributes: attributes,\n      eventTags: eventTags,\n      logEvent: conversionEvent,\n    });\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n  }\n};\n\n/**\n * Gets variation where visitor will be bucketed.\n * @param  {string}      experimentKey\n * @param  {string}      userId\n * @param  {Object}      attributes\n * @return {string|null} variation key\n */\nOptimizely.prototype.getVariation = function(experimentKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getVariation'));\n      return null;\n    }\n\n    try {\n      if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId }, attributes)) {\n        return null;\n      }\n\n      var configObj = this.projectConfigManager.getConfig();\n      if (!configObj) {\n        return null;\n      }\n\n      var experiment = configObj.experimentKeyMap[experimentKey];\n      if (!experiment) {\n        this.logger.log(\n          LOG_LEVEL.DEBUG,\n          sprintf(ERROR_MESSAGES.INVALID_EXPERIMENT_KEY, MODULE_NAME, experimentKey)\n        );\n        return null;\n      }\n\n      var variationKey = this.decisionService.getVariation(configObj, experimentKey, userId, attributes);\n      var decisionNotificationType = projectConfig.isFeatureExperiment(configObj, experiment.id)\n        ? DECISION_NOTIFICATION_TYPES.FEATURE_TEST\n        : DECISION_NOTIFICATION_TYPES.AB_TEST;\n\n      this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n        type: decisionNotificationType,\n        userId: userId,\n        attributes: attributes || {},\n        decisionInfo: {\n          experimentKey: experimentKey,\n          variationKey: variationKey,\n        },\n      });\n\n      return variationKey;\n    } catch (ex) {\n      this.logger.log(LOG_LEVEL.ERROR, ex.message);\n      this.errorHandler.handleError(ex);\n      return null;\n    }\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Force a user into a variation for a given experiment.\n * @param {string} experimentKey\n * @param {string} userId\n * @param {string|null} variationKey user will be forced into. If null, then clear the existing experiment-to-variation mapping.\n * @return boolean A boolean value that indicates if the set completed successfully.\n */\nOptimizely.prototype.setForcedVariation = function(experimentKey, userId, variationKey) {\n  if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId })) {\n    return false;\n  }\n\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return false;\n  }\n\n  try {\n    return this.decisionService.setForcedVariation(configObj, experimentKey, userId, variationKey);\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n    return false;\n  }\n};\n\n/**\n * Gets the forced variation for a given user and experiment.\n * @param  {string} experimentKey\n * @param  {string} userId\n * @return {string|null} The forced variation key.\n */\nOptimizely.prototype.getForcedVariation = function(experimentKey, userId) {\n  if (!this.__validateInputs({ experiment_key: experimentKey, user_id: userId })) {\n    return null;\n  }\n\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return null;\n  }\n\n  try {\n    return this.decisionService.getForcedVariation(configObj, experimentKey, userId);\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n    return null;\n  }\n};\n\n/**\n * Validate string inputs, user attributes and event tags.\n * @param  {string}  stringInputs   Map of string keys and associated values\n * @param  {Object}  userAttributes Optional parameter for user's attributes\n * @param  {Object}  eventTags      Optional parameter for event tags\n * @return {boolean} True if inputs are valid\n *\n */\nOptimizely.prototype.__validateInputs = function(stringInputs, userAttributes, eventTags) {\n  try {\n    // Null, undefined or non-string user Id is invalid.\n    if (stringInputs.hasOwnProperty('user_id')) {\n      var userId = stringInputs.user_id;\n      if (typeof userId !== 'string' || userId === null || userId === 'undefined') {\n        throw new Error(sprintf(ERROR_MESSAGES.INVALID_INPUT_FORMAT, MODULE_NAME, 'user_id'));\n      }\n\n      delete stringInputs.user_id;\n    }\n\n    var inputKeys = Object.keys(stringInputs);\n    for (var index = 0; index < inputKeys.length; index++) {\n      var key = inputKeys[index];\n      if (!stringValidator.validate(stringInputs[key])) {\n        throw new Error(sprintf(ERROR_MESSAGES.INVALID_INPUT_FORMAT, MODULE_NAME, key));\n      }\n    }\n    if (userAttributes) {\n      validate(userAttributes);\n    }\n    if (eventTags) {\n      eventTagsValidator.validate(eventTags);\n    }\n    return true;\n  } catch (ex) {\n    this.logger.log(LOG_LEVEL.ERROR, ex.message);\n    this.errorHandler.handleError(ex);\n    return false;\n  }\n};\n\n/**\n * Shows failed activation log message and returns null when user is not activated in experiment\n * @param  experimentKey\n * @param  userId\n * @return {null}\n */\nOptimizely.prototype.__notActivatingExperiment = function(experimentKey, userId) {\n  var failedActivationLogMessage = sprintf(\n    LOG_MESSAGES.NOT_ACTIVATING_USER,\n    MODULE_NAME,\n    userId,\n    experimentKey\n  );\n  this.logger.log(LOG_LEVEL.INFO, failedActivationLogMessage);\n  return null;\n};\n\n/**\n * Filters out attributes/eventTags with null or undefined values\n * @param  map\n * @returns {Object} map\n */\nOptimizely.prototype.__filterEmptyValues = function(map) {\n  for (var key in map) {\n    if (map.hasOwnProperty(key) && (map[key] === null || map[key] === undefined)) {\n      delete map[key];\n    }\n  }\n  return map;\n};\n\n/**\n * Returns true if the feature is enabled for the given user.\n * @param {string} featureKey   Key of feature which will be checked\n * @param {string} userId       ID of user which will be checked\n * @param {Object} attributes   Optional user attributes\n * @return {boolean}            True if the feature is enabled for the user, false otherwise\n */\nOptimizely.prototype.isFeatureEnabled = function(featureKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'isFeatureEnabled')\n      );\n      return false;\n    }\n\n    if (!this.__validateInputs({ feature_key: featureKey, user_id: userId }, attributes)) {\n      return false;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return false;\n    }\n\n    var feature = projectConfig.getFeatureFromKey(configObj, featureKey, this.logger);\n    if (!feature) {\n      return false;\n    }\n\n    var featureEnabled = false;\n    var decision = this.decisionService.getVariationForFeature(configObj, feature, userId, attributes);\n    var variation = decision.variation;\n    var sourceInfo = {};\n\n    if (variation) {\n      featureEnabled = variation.featureEnabled;\n      if (decision.decisionSource === DECISION_SOURCES.FEATURE_TEST) {\n        sourceInfo = {\n          experimentKey: decision.experiment.key,\n          variationKey: decision.variation.key,\n        };\n        // got a variation from the exp, so we track the impression\n        this._sendImpressionEvent(decision.experiment.key, decision.variation.key, userId, attributes);\n      }\n    }\n\n    if (featureEnabled === true) {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.FEATURE_ENABLED_FOR_USER, MODULE_NAME, featureKey, userId)\n      );\n    } else {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(LOG_MESSAGES.FEATURE_NOT_ENABLED_FOR_USER, MODULE_NAME, featureKey, userId)\n      );\n      featureEnabled = false;\n    }\n\n    var featureInfo = {\n      featureKey: featureKey,\n      featureEnabled: featureEnabled,\n      source: decision.decisionSource,\n      sourceInfo: sourceInfo,\n    };\n\n    this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n      type: DECISION_NOTIFICATION_TYPES.FEATURE,\n      userId: userId,\n      attributes: attributes || {},\n      decisionInfo: featureInfo,\n    });\n\n    return featureEnabled;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return false;\n  }\n};\n\n/**\n * Returns an Array containing the keys of all features in the project that are\n * enabled for the given user.\n * @param {string} userId\n * @param {Object} attributes\n * @return {Array} Array of feature keys (strings)\n */\nOptimizely.prototype.getEnabledFeatures = function(userId, attributes) {\n  try {\n    var enabledFeatures = [];\n    if (!this.__isValidInstance()) {\n      this.logger.log(\n        LOG_LEVEL.ERROR,\n        sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getEnabledFeatures')\n      );\n      return enabledFeatures;\n    }\n\n    if (!this.__validateInputs({ user_id: userId })) {\n      return enabledFeatures;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return enabledFeatures;\n    }\n\n    objectValues(configObj.featureKeyMap).forEach(\n      function(feature) {\n        if (this.isFeatureEnabled(feature.key, userId, attributes)) {\n          enabledFeatures.push(feature.key);\n        }\n      }.bind(this)\n    );\n\n    return enabledFeatures;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return [];\n  }\n};\n\n/**\n * Returns dynamically-typed value of the variable attached to the given\n * feature flag. Returns null if the feature key or variable key is invalid.\n *\n * @param {string} featureKey           Key of the feature whose variable's\n *                                      value is being accessed\n * @param {string} variableKey          Key of the variable whose value is\n *                                      being accessed\n * @param {string} userId               ID for the user\n * @param {Object} attributes           Optional user attributes\n * @return {string|boolean|number|null} Value of the variable cast to the appropriate\n *                                      type, or null if the feature key is invalid or\n *                                      the variable key is invalid\n */\n\nOptimizely.prototype.getFeatureVariable = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariable'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, null, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Helper method to get the value for a variable of a certain type attached to a\n * feature flag. Returns null if the feature key is invalid, the variable key is\n * invalid, the given variable type does not match the variable's actual type,\n * or the variable value cannot be cast to the required type. If the given variable\n * type is null, the value of the variable cast to the appropriate type is returned.\n *\n * @param {string} featureKey           Key of the feature whose variable's value is\n *                                      being accessed\n * @param {string} variableKey          Key of the variable whose value is being\n *                                      accessed\n * @param {string|null} variableType    Type of the variable whose value is being\n *                                      accessed (must be one of FEATURE_VARIABLE_TYPES\n *                                      in lib/utils/enums/index.js), or null to return the\n *                                      value of the variable cast to the appropriate type\n * @param {string} userId               ID for the user\n * @param {Object} attributes           Optional user attributes\n * @return {string|boolean|number|null} Value of the variable cast to the appropriate\n *                                      type, or null if the feature key is invalid, the\n *                                      variable key is invalid, or there is a mismatch\n *                                      with the type of the variable\n */\nOptimizely.prototype._getFeatureVariableForType = function(featureKey, variableKey, variableType, userId, attributes) {\n  if (!this.__validateInputs({ feature_key: featureKey, variable_key: variableKey, user_id: userId }, attributes)) {\n    return null;\n  }\n\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return null;\n  }\n\n  var featureFlag = projectConfig.getFeatureFromKey(configObj, featureKey, this.logger);\n  if (!featureFlag) {\n    return null;\n  }\n\n  var variable = projectConfig.getVariableForFeature(configObj, featureKey, variableKey, this.logger);\n  if (!variable) {\n    return null;\n  }\n\n  if (variableType && variable.type !== variableType) {\n    this.logger.log(\n      LOG_LEVEL.WARNING,\n      sprintf(LOG_MESSAGES.VARIABLE_REQUESTED_WITH_WRONG_TYPE, MODULE_NAME, variableType, variable.type)\n    );\n    return null;\n  }\n\n  var decision = this.decisionService.getVariationForFeature(configObj, featureFlag, userId, attributes);\n  var featureEnabled = decision.variation !== null ? decision.variation.featureEnabled : false;\n  var variableValue = this._getFeatureVariableValueFromVariation(featureKey, featureEnabled, decision.variation, variable, userId);\n\n  var sourceInfo = {};\n  if (decision.decisionSource === DECISION_SOURCES.FEATURE_TEST) {\n    sourceInfo = {\n      experimentKey: decision.experiment.key,\n      variationKey: decision.variation.key,\n    };\n  }\n\n  this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n    type: DECISION_NOTIFICATION_TYPES.FEATURE_VARIABLE,\n    userId: userId,\n    attributes: attributes || {},\n    decisionInfo: {\n      featureKey: featureKey,\n      featureEnabled: featureEnabled,\n      source: decision.decisionSource,\n      variableKey: variableKey,\n      variableValue: variableValue,\n      variableType: variable.type,\n      sourceInfo: sourceInfo,\n    },\n  });\n  return variableValue;\n};\n\n/**\n * Helper method to get the non type-casted value for a variable attached to a\n * feature flag. Returns appropriate variable value depending on whether there\n * was a matching variation, feature was enabled or not or varible was part of the\n * available variation or not. Also logs the appropriate message explaining how it\n * evaluated the value of the variable.\n *\n * @param {string} featureKey           Key of the feature whose variable's value is\n *                                      being accessed\n * @param {boolean} featureEnabled      Boolean indicating if feature is enabled or not\n * @param {object} variation            variation returned by decision service\n * @param {object} variable             varible whose value is being evaluated\n * @param {string} userId               ID for the user\n * @return {string|null}                String value of the variable or null if the config Obj\n *                                      is null\n */\nOptimizely.prototype._getFeatureVariableValueFromVariation = function(featureKey, featureEnabled, variation, variable, userId) {\n  var configObj = this.projectConfigManager.getConfig();\n  if (!configObj) {\n    return null;\n  }\n\n  var variableValue = variable.defaultValue;\n  if (variation !== null) {\n    var value = projectConfig.getVariableValueForVariation(configObj, variable, variation, this.logger);\n    if (value !== null) {\n      if (featureEnabled) {\n        variableValue = value;\n        this.logger.log(\n          LOG_LEVEL.INFO,\n          sprintf(\n            LOG_MESSAGES.USER_RECEIVED_VARIABLE_VALUE,\n            MODULE_NAME,\n            variableValue,\n            variable.key,\n            featureKey\n          )\n        );\n      } else {\n        this.logger.log(\n          LOG_LEVEL.INFO,\n          sprintf(\n            LOG_MESSAGES.FEATURE_NOT_ENABLED_RETURN_DEFAULT_VARIABLE_VALUE,\n            MODULE_NAME,\n            featureKey,\n            userId,\n            variableValue\n          )\n        );\n      }\n    } else {\n      this.logger.log(\n        LOG_LEVEL.INFO,\n        sprintf(\n          LOG_MESSAGES.VARIABLE_NOT_USED_RETURN_DEFAULT_VARIABLE_VALUE,\n          MODULE_NAME,\n          variable.key,\n          variation.key\n        )\n      );\n    }\n  } else {\n    this.logger.log(\n      LOG_LEVEL.INFO,\n      sprintf(\n        LOG_MESSAGES.USER_RECEIVED_DEFAULT_VARIABLE_VALUE,\n        MODULE_NAME,\n        userId,\n        variable.key,\n        featureKey\n      )\n    );\n  }\n\n  return projectConfig.getTypeCastValue(variableValue, variable.type, this.logger);\n}\n\n/**\n * Returns value for the given boolean variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {boolean|null}       Boolean value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableBoolean = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableBoolean'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.BOOLEAN, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given double variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {number|null}        Number value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableDouble = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableDouble'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.DOUBLE, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given integer variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {number|null}        Number value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableInteger = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableInteger'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.INTEGER, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given string variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {string|null}        String value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableString = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableString'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.STRING, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns value for the given json variable attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variable's value is\n *                              being accessed\n * @param {string} variableKey  Key of the variable whose value is being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {object|null}        Object value of the variable, or null if the\n *                              feature key is invalid, the variable key is\n *                              invalid, or there is a mismatch with the type\n *                              of the variable\n */\nOptimizely.prototype.getFeatureVariableJSON = function(featureKey, variableKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getFeatureVariableJSON'));\n      return null;\n    }\n    return this._getFeatureVariableForType(featureKey, variableKey, FEATURE_VARIABLE_TYPES.JSON, userId, attributes);\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns values for all the variables attached to the given feature\n * flag.\n * @param {string} featureKey   Key of the feature whose variables are being\n *                              accessed\n * @param {string} userId       ID for the user\n * @param {Object} attributes   Optional user attributes\n * @return {object|null}        Object containing all the variables, or null if the\n *                              feature key is invalid\n */\nOptimizely.prototype.getAllFeatureVariables = function(featureKey, userId, attributes) {\n  try {\n    if (!this.__isValidInstance()) {\n      this.logger.log(LOG_LEVEL.ERROR, sprintf(LOG_MESSAGES.INVALID_OBJECT, MODULE_NAME, 'getAllFeatureVariables'));\n      return null;\n    }\n\n    if (!this.__validateInputs({ feature_key: featureKey, user_id: userId }, attributes)) {\n      return null;\n    }\n\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return null;\n    }\n\n    var featureFlag = projectConfig.getFeatureFromKey(configObj, featureKey, this.logger);\n    if (!featureFlag) {\n      return null;\n    }\n\n    var decision = this.decisionService.getVariationForFeature(configObj, featureFlag, userId, attributes);\n    var featureEnabled = decision.variation !== null ? decision.variation.featureEnabled : false;\n    var allVariables = {};\n\n    featureFlag.variables.forEach(function (variable) {\n      allVariables[variable.key] = this._getFeatureVariableValueFromVariation(featureKey, featureEnabled, decision.variation, variable, userId);\n    }.bind(this));\n\n    var sourceInfo = {};\n    if (decision.decisionSource === DECISION_SOURCES.FEATURE_TEST) {\n      sourceInfo = {\n        experimentKey: decision.experiment.key,\n        variationKey: decision.variation.key,\n      };\n    }\n    this.notificationCenter.sendNotifications(NOTIFICATION_TYPES.DECISION, {\n      type: DECISION_NOTIFICATION_TYPES.ALL_FEATURE_VARIABLES,\n      userId: userId,\n      attributes: attributes || {},\n      decisionInfo: {\n        featureKey: featureKey,\n        featureEnabled: featureEnabled,\n        source: decision.decisionSource,\n        variableValues: allVariables,\n        sourceInfo: sourceInfo,\n      },\n    });\n\n    return allVariables;\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Returns OptimizelyConfig object containing experiments and features data\n * @return {Object}\n *\n * OptimizelyConfig Object Schema\n * {\n *   'experimentsMap': {\n *     'my-fist-experiment': {\n *       'id': '111111',\n *       'key': 'my-fist-experiment'\n *       'variationsMap': {\n *         'variation_1': {\n *           'id': '121212',\n *           'key': 'variation_1',\n *           'variablesMap': {\n *             'age': {\n *               'id': '222222',\n *               'key': 'age',\n *               'type': 'integer',\n *               'value': '0',\n *             }\n *           }\n *         }\n *       }\n *     }\n *   },\n *   'featuresMap': {\n *     'awesome-feature': {\n *       'id': '333333',\n *       'key': 'awesome-feature',\n *       'experimentsMap': Object,\n *       'variationsMap': Object,\n *     }\n *   }\n * }\n */\nOptimizely.prototype.getOptimizelyConfig = function() {\n  try {\n    var configObj = this.projectConfigManager.getConfig();\n    if (!configObj) {\n      return null;\n    }\n    return this.projectConfigManager.getOptimizelyConfig();\n  } catch (e) {\n    this.logger.log(LOG_LEVEL.ERROR, e.message);\n    this.errorHandler.handleError(e);\n    return null;\n  }\n};\n\n/**\n * Stop background processes belonging to this instance, including:\n *\n * - Active datafile requests\n * - Pending datafile requests\n * - Pending event queue flushes\n *\n * In-flight datafile requests will be aborted. Any events waiting to be sent\n * as part of a batched event request will be immediately flushed to the event\n * dispatcher.\n *\n * Returns a Promise that fulfills after all in-flight event dispatcher requests\n * (including any final request resulting from flushing the queue as described\n * above) are complete. If there are no in-flight event dispatcher requests and\n * no queued events waiting to be sent, returns an immediately-fulfilled Promise.\n *\n * Returned Promises are fulfilled with result objects containing these\n * properties:\n *    - success (boolean): true if the event dispatcher signaled completion of\n *                         all in-flight and final requests, or if there were no\n *                         queued events and no in-flight requests. false if an\n *                         unexpected error was encountered during the close\n *                         process.\n *    - reason (string=):  If success is false, this is a string property with\n *                         an explanatory message.\n *\n * NOTE: After close is called, this instance is no longer usable - any events\n * generated will no longer be sent to the event dispatcher.\n *\n * @return {Promise}\n */\nOptimizely.prototype.close = function() {\n  try {\n    var eventProcessorStoppedPromise = this.eventProcessor.stop();\n    if (this.__disposeOnUpdate) {\n      this.__disposeOnUpdate();\n      this.__disposeOnUpdate = null;\n    }\n    if (this.projectConfigManager) {\n      this.projectConfigManager.stop();\n    }\n    Object.keys(this.__readyTimeouts).forEach(\n      function(readyTimeoutId) {\n        var readyTimeoutRecord = this.__readyTimeouts[readyTimeoutId];\n        clearTimeout(readyTimeoutRecord.readyTimeout);\n        readyTimeoutRecord.onClose();\n      }.bind(this)\n    );\n    this.__readyTimeouts = {};\n    return eventProcessorStoppedPromise.then(\n      function() {\n        return {\n          success: true,\n        };\n      },\n      function(err) {\n        return {\n          success: false,\n          reason: String(err),\n        };\n      }\n    );\n  } catch (err) {\n    this.logger.log(LOG_LEVEL.ERROR, err.message);\n    this.errorHandler.handleError(err);\n    return Promise.resolve({\n      success: false,\n      reason: String(err),\n    });\n  }\n};\n\n/**\n * Returns a Promise that fulfills when this instance is ready to use (meaning\n * it has a valid datafile), or has failed to become ready within a period of\n * time (configurable by the timeout property of the options argument), or when\n * this instance is closed via the close method.\n *\n * If a valid datafile was provided in the constructor, the returned Promise is\n * immediately fulfilled. If an sdkKey was provided, a manager will be used to\n * fetch  a datafile, and the returned promise will fulfill if that fetch\n * succeeds or fails before the timeout. The default timeout is 30 seconds,\n * which will be used if no timeout is provided in the argument options object.\n *\n * The returned Promise is fulfilled with a result object containing these\n * properties:\n *    - success (boolean): True if this instance is ready to use with a valid\n *                         datafile, or false if this instance failed to become\n *                         ready or was closed prior to becoming ready.\n *    - reason (string=):  If success is false, this is a string property with\n *                         an explanatory message. Failure could be due to\n *                         expiration of the timeout, network errors,\n *                         unsuccessful responses, datafile parse errors,\n *                         datafile validation errors, or the instance being\n *                         closed\n * @param  {Object=}          options\n * @param  {number|undefined} options.timeout\n * @return {Promise}\n */\nOptimizely.prototype.onReady = function(options) {\n  var timeout;\n  if (typeof options === 'object' && options !== null) {\n    timeout = options.timeout;\n  }\n  if (!fns.isSafeInteger(timeout)) {\n    timeout = DEFAULT_ONREADY_TIMEOUT;\n  }\n\n  var resolveTimeoutPromise;\n  var timeoutPromise = new Promise(function(resolve) {\n    resolveTimeoutPromise = resolve;\n  });\n\n  var timeoutId = this.__nextReadyTimeoutId;\n  this.__nextReadyTimeoutId++;\n\n  var onReadyTimeout = function() {\n    delete this.__readyTimeouts[timeoutId];\n    resolveTimeoutPromise({\n      success: false,\n      reason: sprintf('onReady timeout expired after %s ms', timeout),\n    });\n  }.bind(this);\n  var readyTimeout = setTimeout(onReadyTimeout, timeout);\n  var onClose = function() {\n    resolveTimeoutPromise({\n      success: false,\n      reason: 'Instance closed',\n    });\n  };\n\n  this.__readyTimeouts[timeoutId] = {\n    readyTimeout: readyTimeout,\n    onClose: onClose,\n  };\n\n  this.__readyPromise.then(\n    function() {\n      clearTimeout(readyTimeout);\n      delete this.__readyTimeouts[timeoutId];\n      resolveTimeoutPromise({\n        success: true,\n      });\n    }.bind(this)\n  );\n\n  return Promise.race([this.__readyPromise, timeoutPromise]);\n};\n\nexport default Optimizely;\n","/**\n * Copyright 2019-2020, Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSafeInteger } from '../fns';\n\n/**\n * Return true if the argument is a valid event batch size, false otherwise\n * @param {*} eventBatchSize\n * @returns boolean\n */\nexport var validateEventBatchSize = function(eventBatchSize) {\n  return isSafeInteger(eventBatchSize) && eventBatchSize >= 1;\n};\n\n/**\n * Return true if the argument is a valid event flush interval, false otherwise\n * @param {*} eventFlushInterval\n * @returns boolean\n */\nexport var validateEventFlushInterval = function(eventFlushInterval) {\n  return isSafeInteger(eventFlushInterval) && eventFlushInterval > 0;\n};\n\nexport default {\n  validateEventBatchSize: validateEventBatchSize,\n  validateEventFlushInterval: validateEventFlushInterval,\n};\n","/**\n * Copyright 2016-2017, 2019-2020 Optimizely\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { \n  getLogger,\n  setLogHandler,\n  setLogLevel,\n  setErrorHandler,\n  getErrorHandler,\n  LogLevel,\n} from '@optimizely/js-sdk-logging';\nimport { LocalStoragePendingEventsDispatcher } from '@optimizely/js-sdk-event-processor';\n\nimport fns from './utils/fns';\nimport configValidator from './utils/config_validator';\nimport defaultErrorHandler from './plugins/error_handler';\nimport defaultEventDispatcher from './plugins/event_dispatcher/index.browser';\nimport enums from './utils/enums';\nimport loggerPlugin from './plugins/logger';\nimport Optimizely from './optimizely';\nimport eventProcessorConfigValidator from './utils/event_processor_config_validator';\n\nvar logger = getLogger();\nsetLogHandler(loggerPlugin.createLogger());\nsetLogLevel(LogLevel.INFO);\n\nvar MODULE_NAME = 'INDEX_BROWSER';\nvar DEFAULT_EVENT_BATCH_SIZE = 10;\nvar DEFAULT_EVENT_FLUSH_INTERVAL = 1000; // Unit is ms, default is 1s\n\nvar hasRetriedEvents = false;\n\n/**\n * Creates an instance of the Optimizely class\n * @param  {Object} config\n * @param  {Object} config.datafile\n * @param  {Object} config.errorHandler\n * @param  {Object} config.eventDispatcher\n * @param  {Object} config.logger\n * @param  {Object} config.logLevel\n * @param  {Object} config.userProfileService\n * @param {Object} config.eventBatchSize\n * @param {Object} config.eventFlushInterval\n * @return {Object} the Optimizely object\n */\nvar createInstance = function(config) {\n  try {\n    config = config || {};\n\n    // TODO warn about setting per instance errorHandler / logger / logLevel\n    if (config.errorHandler) {\n      setErrorHandler(config.errorHandler);\n    }\n    if (config.logger) {\n      setLogHandler(config.logger);\n      // respect the logger's shouldLog functionality\n      setLogLevel(LogLevel.NOTSET);\n    }\n    if (config.logLevel !== undefined) {\n      setLogLevel(config.logLevel);\n    }\n\n    try {\n      configValidator.validate(config);\n      config.isValidInstance = true;\n    } catch (ex) {\n      logger.error(ex);\n      config.isValidInstance = false;\n    }\n\n    var eventDispatcher;\n    // prettier-ignore\n    if (config.eventDispatcher == null) { // eslint-disable-line eqeqeq\n      // only wrap the event dispatcher with pending events retry if the user didnt override\n      eventDispatcher = new LocalStoragePendingEventsDispatcher({\n        eventDispatcher: defaultEventDispatcher,\n      });\n\n      if (!hasRetriedEvents) {\n        eventDispatcher.sendPendingEvents();\n        hasRetriedEvents = true;\n      }\n    } else {\n      eventDispatcher = config.eventDispatcher;\n    }\n\n    config = fns.assign(\n      {\n        clientEngine: enums.JAVASCRIPT_CLIENT_ENGINE,\n        eventBatchSize: DEFAULT_EVENT_BATCH_SIZE,\n        eventFlushInterval: DEFAULT_EVENT_FLUSH_INTERVAL,\n      },\n      config,\n      {\n        eventDispatcher: eventDispatcher,\n        // always get the OptimizelyLogger facade from logging\n        logger: logger,\n        errorHandler: getErrorHandler(),\n      }\n    );\n\n    if (!eventProcessorConfigValidator.validateEventBatchSize(config.eventBatchSize)) {\n      logger.warn('Invalid eventBatchSize %s, defaulting to %s', config.eventBatchSize, DEFAULT_EVENT_BATCH_SIZE);\n      config.eventBatchSize = DEFAULT_EVENT_BATCH_SIZE;\n    }\n    if (!eventProcessorConfigValidator.validateEventFlushInterval(config.eventFlushInterval)) {\n      logger.warn(\n        'Invalid eventFlushInterval %s, defaulting to %s',\n        config.eventFlushInterval,\n        DEFAULT_EVENT_FLUSH_INTERVAL\n      );\n      config.eventFlushInterval = DEFAULT_EVENT_FLUSH_INTERVAL;\n    }\n\n    var optimizely = new Optimizely(config);\n\n    try {\n      if (typeof window.addEventListener === 'function') {\n        var unloadEvent = 'onpagehide' in window ? 'pagehide' : 'unload';\n        window.addEventListener(\n          unloadEvent,\n          function() {\n            optimizely.close();\n          },\n          false\n        );\n      }\n    } catch (e) {\n      logger.error(enums.LOG_MESSAGES.UNABLE_TO_ATTACH_UNLOAD, MODULE_NAME, e.message);\n    }\n\n    return optimizely;\n  } catch (e) {\n    logger.error(e);\n    return null;\n  }\n};\n\nvar __internalResetRetryState = function() {\n  hasRetriedEvents = false;\n};\n\n/**\n * Entry point into the Optimizely Browser SDK\n */\nexport {\n  loggerPlugin as logging,\n  defaultErrorHandler as errorHandler,\n  defaultEventDispatcher as eventDispatcher,\n  enums,\n  setLogHandler as setLogger,\n  setLogLevel,\n  createInstance,\n  __internalResetRetryState,  \n}\n\nexport default {\n  logging: loggerPlugin,\n  errorHandler: defaultErrorHandler,\n  eventDispatcher: defaultEventDispatcher,\n  enums: enums,\n  setLogger: setLogHandler,\n  setLogLevel: setLogLevel,\n  createInstance: createInstance,\n  __internalResetRetryState: __internalResetRetryState,\n};\n"],"names":["keyByUtil","uuid","notificationTypesEnum","MODULE_NAME","validate","evaluate","ERROR_MESSAGES","LOG_LEVEL","LOG_MESSAGES","DECISION_SOURCES","AUDIENCE_EVALUATION_TYPES","attributeValidator","logger","FEATURE_VARIABLE_TYPES","DECISION_NOTIFICATION_TYPES","NOTIFICATION_TYPES","eventProcessor.LogTierV1EventProcessor"],"mappings":"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"}